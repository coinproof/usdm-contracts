{
	"id": "3fef8bbb3fad50c4d84a665d69bae8cf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"USDm.sol": {
				"content": "/**\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * Copyright (c) 2018-2020 CENTRE SECZ\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\npragma solidity ^0.8.1;\r\n\r\nimport \"./AbstractUSDm.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./Pausable.sol\";\r\nimport \"./Blacklistable.sol\";\r\nimport \"./Rescuable.sol\";\r\n\r\n/**\r\n * @title USDm\r\n * @dev ERC20 Token backed by fiat reserves\r\n */\r\ncontract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r\n\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    string public currency;\r\n    address public masterMinter;\r\n    bool internal initialized;\r\n\r\n    mapping(address => uint256) internal balances;\r\n    mapping(address => mapping(address => uint256)) internal allowed;\r\n    uint256 internal totalSupply_ = 0;\r\n    mapping(address => bool) internal minters;\r\n    mapping(address => uint256) internal minterAllowed;\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n    event MintByMaster(address indexed masterMinter, address indexed to, uint256 amount);\r\n    event Burn(address indexed burner, uint256 amount);\r\n    event MinterConfigured(address indexed minter, uint256 minterAllowedAmount);\r\n    event MinterRemoved(address indexed oldMinter);\r\n    event MasterMinterChanged(address indexed newMasterMinter);\r\n\r\n    function initialize(\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        string memory tokenCurrency,\r\n        uint8 tokenDecimals,\r\n        address newMasterMinter,\r\n        address newPauser,\r\n        address newBlacklister,\r\n        address newOwner\r\n    ) public {\r\n        require(!initialized, \"USDm: contract is already initialized\");\r\n        require(\r\n            newMasterMinter != address(0),\r\n            \"USDm: new masterMinter is the zero address\"\r\n        );\r\n        require(\r\n            newPauser != address(0),\r\n            \"USDm: new pauser is the zero address\"\r\n        );\r\n        require(\r\n            newBlacklister != address(0),\r\n            \"USDm: new blacklister is the zero address\"\r\n        );\r\n        require(\r\n            newOwner != address(0),\r\n            \"USDm: new owner is the zero address\"\r\n        );\r\n\r\n        name = tokenName;\r\n        symbol = tokenSymbol;\r\n        currency = tokenCurrency;\r\n        decimals = tokenDecimals;\r\n        masterMinter = newMasterMinter;\r\n        pauser = newPauser;\r\n        blacklister = newBlacklister;\r\n        _transferOwnership(newOwner);\r\n        initialized = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than a minter\r\n     */\r\n    modifier onlyMinters() {\r\n        require(minters[msg.sender], \"USDm: caller is not a minter\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to mint tokens\r\n     * @param _to The address that will receive the minted tokens.\r\n     * @param _amount The amount of tokens to mint. Must be less than or equal\r\n     * to the minterAllowance of the caller.\r\n     * @return A boolean that indicates if the operation was successful.\r\n     */\r\n    function mint(address _to, uint256 _amount)\r\n        external\r\n        whenNotPaused\r\n        onlyMinters\r\n        notBlacklisted(msg.sender)\r\n        notBlacklisted(_to)\r\n        returns (bool)\r\n    {\r\n        require(_to != address(0), \"USDm: mint to the zero address\");\r\n        require(_amount > 0, \"USDm: mint amount not greater than 0\");\r\n        require(_to == masterMinter,\"USDm: Minters can only mint tokens to master minter address\");\r\n\r\n        uint256 mintingAllowedAmount = minterAllowed[msg.sender];\r\n        require(\r\n            _amount <= mintingAllowedAmount,\r\n            \"USDm: mint amount exceeds minterAllowance\"\r\n        );\r\n\r\n        totalSupply_ = totalSupply_ + _amount;\r\n        balances[_to] = balances[_to] + _amount;\r\n        minterAllowed[msg.sender] = mintingAllowedAmount - (_amount);\r\n        emit Mint(msg.sender, _to, _amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the masterMinter\r\n     */\r\n    modifier onlyMasterMinter() {\r\n        require(\r\n            msg.sender == masterMinter,\r\n            \"USDm: caller is not the masterMinter\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Get minter allowance for an account\r\n     * @param minter The address of the minter\r\n     */\r\n    function minterAllowance(address minter) external view returns (uint256) {\r\n        return minterAllowed[minter];\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if account is a minter\r\n     * @param account The address to check\r\n     */\r\n    function isMinter(address account) external view returns (bool) {\r\n        return minters[account];\r\n    }\r\n\r\n    /**\r\n     * @notice Amount of remaining tokens spender is allowed to transfer on\r\n     * behalf of the token owner\r\n     * @param owner     Token owner's address\r\n     * @param spender   Spender's address\r\n     * @return Allowance amount\r\n     */\r\n    function allowance(address owner, address spender)\r\n        external\r\n        override\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return allowed[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev Get totalSupply of token\r\n     */\r\n    function totalSupply() external override view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    /**\r\n     * @dev Get token balance of an account\r\n     * @param account address The account\r\n     */\r\n    function balanceOf(address account)\r\n        external\r\n        override\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return balances[account];\r\n    }\r\n\r\n    /**\r\n     * @notice Set spender's allowance over the caller's tokens to be a given\r\n     * value.\r\n     * @param spender   Spender's address\r\n     * @param value     Allowance amount\r\n     * @return True if successful\r\n     */\r\n    function approve(address spender, uint256 value)\r\n        external\r\n        override\r\n        whenNotPaused\r\n        notBlacklisted(msg.sender)\r\n        notBlacklisted(spender)\r\n        returns (bool)\r\n    {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to set allowance\r\n     * @param owner     Token owner's address\r\n     * @param spender   Spender's address\r\n     * @param value     Allowance amount\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 value\r\n    ) internal override {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n        allowed[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer tokens by spending allowance\r\n     * @param from  Payer's address\r\n     * @param to    Payee's address\r\n     * @param value Transfer amount\r\n     * @return True if successful\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    )\r\n        external\r\n        override\r\n        whenNotPaused\r\n        notBlacklisted(msg.sender)\r\n        notBlacklisted(from)\r\n        notBlacklisted(to)\r\n        returns (bool)\r\n    {\r\n        require(\r\n            value <= allowed[from][msg.sender],\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n        _transfer(from, to, value);\r\n        allowed[from][msg.sender] = allowed[from][msg.sender] - (value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer tokens from the caller\r\n     * @param to    Payee's address\r\n     * @param value Transfer amount\r\n     * @return True if successful\r\n     */\r\n    function transfer(address to, uint256 value)\r\n        external\r\n        override\r\n        whenNotPaused\r\n        notBlacklisted(msg.sender)\r\n        notBlacklisted(to)\r\n        returns (bool)\r\n    {\r\n        _transfer(msg.sender, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @notice Internal function to process transfers\r\n     * @param from  Payer's address\r\n     * @param to    Payee's address\r\n     * @param value Transfer amount\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal override {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n        require(\r\n            value <= balances[from],\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n\r\n        balances[from] = balances[from] - (value);\r\n        balances[to] = balances[to] + (value);\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Function to add/update a new minter\r\n     * @param minter The address of the minter\r\n     * @param minterAllowedAmount The minting amount allowed for the minter\r\n     * @return True if the operation was successful.\r\n     */\r\n    function configureMinter(address minter, uint256 minterAllowedAmount)\r\n        external\r\n        whenNotPaused\r\n        onlyMasterMinter\r\n        returns (bool)\r\n    {\r\n        minters[minter] = true;\r\n        minterAllowed[minter] = minterAllowedAmount;\r\n        emit MinterConfigured(minter, minterAllowedAmount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Function to remove a minter\r\n     * @param minter The address of the minter to remove\r\n     * @return True if the operation was successful.\r\n     */\r\n    function removeMinter(address minter)\r\n        external\r\n        onlyMasterMinter\r\n        returns (bool)\r\n    {\r\n        minters[minter] = false;\r\n        minterAllowed[minter] = 0;\r\n        emit MinterRemoved(minter);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev allows a minter to burn some of its own tokens\r\n     * Validates that caller is a minter and that sender is not blacklisted\r\n     * amount is less than or equal to the minter's account balance\r\n     * @param _amount uint256 the amount of tokens to be burned\r\n     */\r\n    function burn(uint256 _amount)\r\n        external\r\n        whenNotPaused\r\n        onlyMinters\r\n        notBlacklisted(msg.sender)\r\n    {\r\n        uint256 balance = balances[msg.sender];\r\n        require(_amount > 0, \"USDm: burn amount not greater than 0\");\r\n        require(balance >= _amount, \"USDm: burn amount exceeds balance\");\r\n\r\n        totalSupply_ = totalSupply_ - _amount;\r\n        balances[msg.sender] = balance - _amount;\r\n        emit Burn(msg.sender, _amount);\r\n        emit Transfer(msg.sender, address(0), _amount);\r\n    }\r\n\r\n    function updateMasterMinter(address _newMasterMinter) external onlyOwner {\r\n        require(\r\n            _newMasterMinter != address(0),\r\n            \"USDm: new masterMinter is the zero address\"\r\n        );\r\n        masterMinter = _newMasterMinter;\r\n        emit MasterMinterChanged(masterMinter);\r\n    }\r\n}\r\n"
			},
			"Rescuable.sol": {
				"content": "/**\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * Copyright (c) 2018-2020 CENTRE SECZ\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\npragma solidity 0.8.1;\r\n\r\nimport { Ownable } from \"./Ownable.sol\";\r\nimport { IERC20 } from \"./IERC20.sol\";\r\nimport { SafeERC20 } from \"./SafeERC20.sol\";\r\n\r\ncontract Rescuable is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address private _rescuer;\r\n\r\n    event RescuerChanged(address indexed newRescuer);\r\n\r\n    /**\r\n     * @notice Returns current rescuer\r\n     * @return Rescuer's address\r\n     */\r\n    function rescuer() external view returns (address) {\r\n        return _rescuer;\r\n    }\r\n\r\n    /**\r\n     * @notice Revert if called by any account other than the rescuer.\r\n     */\r\n    modifier onlyRescuer() {\r\n        require(msg.sender == _rescuer, \"Rescuable: caller is not the rescuer\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @notice Rescue ERC20 tokens locked up in this contract.\r\n     * @param tokenContract ERC20 token contract address\r\n     * @param to        Recipient address\r\n     * @param amount    Amount to withdraw\r\n     */\r\n    function rescueERC20(\r\n        IERC20 tokenContract,\r\n        address to,\r\n        uint256 amount\r\n    ) external onlyRescuer {\r\n        tokenContract.safeTransfer(to, amount);\r\n    }\r\n\r\n    /**\r\n     * @notice Assign the rescuer role to a given address.\r\n     * @param newRescuer New rescuer's address\r\n     */\r\n    function updateRescuer(address newRescuer) external onlyOwner {\r\n        require(\r\n            newRescuer != address(0),\r\n            \"Rescuable: new rescuer is the zero address\"\r\n        );\r\n        _rescuer = newRescuer;\r\n        emit RescuerChanged(newRescuer);\r\n    }\r\n}\r\n"
			},
			"Blacklistable.sol": {
				"content": "/**\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * Copyright (c) 2018-2020 CENTRE SECZ\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\npragma solidity 0.8.1;\r\n\r\nimport { Ownable } from \"./Ownable.sol\";\r\n\r\n/**\r\n * @title Blacklistable Token\r\n * @dev Allows accounts to be blacklisted by a \"blacklister\" role\r\n */\r\ncontract Blacklistable is Ownable {\r\n    address public blacklister;\r\n    mapping(address => bool) internal blacklisted;\r\n\r\n    event Blacklisted(address indexed _account);\r\n    event UnBlacklisted(address indexed _account);\r\n    event BlacklisterChanged(address indexed newBlacklister);\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the blacklister\r\n     */\r\n    modifier onlyBlacklister() {\r\n        require(\r\n            msg.sender == blacklister,\r\n            \"Blacklistable: caller is not the blacklister\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if argument account is blacklisted\r\n     * @param _account The address to check\r\n     */\r\n    modifier notBlacklisted(address _account) {\r\n        require(\r\n            !blacklisted[_account],\r\n            \"Blacklistable: account is blacklisted\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if account is blacklisted\r\n     * @param _account The address to check\r\n     */\r\n    function isBlacklisted(address _account) external view returns (bool) {\r\n        return blacklisted[_account];\r\n    }\r\n\r\n    /**\r\n     * @dev Adds account to blacklist\r\n     * @param _account The address to blacklist\r\n     */\r\n    function blacklist(address _account) external onlyBlacklister {\r\n        blacklisted[_account] = true;\r\n        emit Blacklisted(_account);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes account from blacklist\r\n     * @param _account The address to remove from the blacklist\r\n     */\r\n    function unBlacklist(address _account) external onlyBlacklister {\r\n        blacklisted[_account] = false;\r\n        emit UnBlacklisted(_account);\r\n    }\r\n\r\n    function updateBlacklister(address _newBlacklister) external onlyOwner {\r\n        require(\r\n            _newBlacklister != address(0),\r\n            \"Blacklistable: new blacklister is the zero address\"\r\n        );\r\n        blacklister = _newBlacklister;\r\n        emit BlacklisterChanged(blacklister);\r\n    }\r\n}\r\n"
			},
			"Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    address public pauser;\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    event PauserChanged(address indexed newAddress);\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev throws if called by any account other than the pauser\r\n     */\r\n    modifier onlyPauser() {\r\n        require(msg.sender == pauser, \"Pausable: caller is not the pauser\");\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused onlyPauser {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused onlyPauser {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"AbstractUSDm.sol": {
				"content": "/**\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * Copyright (c) 2018-2020 CENTRE SECZ\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\npragma solidity 0.8.1;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\nabstract contract AbstractUSDm is IERC20 {\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 value\r\n    ) internal virtual;\r\n\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal virtual;\r\n}\r\n"
			},
			"SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AbstractUSDm.sol": {
				"AbstractUSDm": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AbstractUSDm.sol\":\"AbstractUSDm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AbstractUSDm.sol\":{\"keccak256\":\"0xf18dc8e58be125df6a2119610cfec64b370c7a172a52d05c398bdc87e1292b95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a6d15e404f517c0dc14a0f2506dc350ae377bea2618abc9915d78c1f7b52dcd\",\"dweb:/ipfs/QmYFm8cmHG21jdnYZoqM6KDKsvrF22uLhBfK1Y6wsYFfgr\"]},\"IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Address.sol\":202:8526  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Address.sol\":202:8526  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a38fa260384c884f12d56cbd268629dd2b9741a745473e9bd1778dbc8c6151ed64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a38fa260384c884f12d56cbd268629dd2b9741a745473e9bd1778dbc8c6151ed64736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 DUP16 LOG2 PUSH1 0x38 0x4C DUP9 0x4F SLT 0xD5 PUSH13 0xBD268629DD2B9741A745473E9B 0xD1 PUSH24 0x8DBC8C6151ED64736F6C6343000801003300000000000000 ",
							"sourceMap": "202:8324:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:8324:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a38fa260384c884f12d56cbd268629dd2b9741a745473e9bd1778dbc8c6151ed64736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 DUP16 LOG2 PUSH1 0x38 0x4C DUP9 0x4F SLT 0xD5 PUSH13 0xBD268629DD2B9741A745473E9B 0xD1 PUSH24 0x8DBC8C6151ED64736F6C6343000801003300000000000000 ",
							"sourceMap": "202:8324:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 8526,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a38fa260384c884f12d56cbd268629dd2b9741a745473e9bd1778dbc8c6151ed64736f6c63430008010033",
									".code": [
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 8526,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0xf33245569f718dfb2958ee7e2015cd2112e9227803a5996ef89900a30d7698f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c891820b284a26f6d99811c7c37f7b430e07e98938b14940738e8b154ff54b\",\"dweb:/ipfs/QmaJ338qmrvWWRXtZKZqPc3cGT8wVH1inM5WgFtHfkMexg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Blacklistable.sol": {
				"Blacklistable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBlacklister",
									"type": "address"
								}
							],
							"name": "BlacklisterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "UnBlacklisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blacklister",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "unBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBlacklister",
									"type": "address"
								}
							],
							"name": "updateBlacklister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Allows accounts to be blacklisted by a \"blacklister\" role",
						"kind": "dev",
						"methods": {
							"blacklist(address)": {
								"details": "Adds account to blacklist",
								"params": {
									"_account": "The address to blacklist"
								}
							},
							"isBlacklisted(address)": {
								"details": "Checks if account is blacklisted",
								"params": {
									"_account": "The address to check"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unBlacklist(address)": {
								"details": "Removes account from blacklist",
								"params": {
									"_account": "The address to remove from the blacklist"
								}
							}
						},
						"title": "Blacklistable Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Blacklistable.sol\":1356:3323  contract Blacklistable is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":961:971  _msgSender */\n  tag_6\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":942:960  _transferOwnership */\n  tag_7\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"Blacklistable.sol\":1356:3323  contract Blacklistable is Ownable {\r... */\n  jump(tag_8)\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\ntag_6:\n    /* \"Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_7:\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Blacklistable.sol\":1356:3323  contract Blacklistable is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Blacklistable.sol\":1356:3323  contract Blacklistable is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbd102430\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xbd102430\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x1a895266\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xad38bf22\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_4:\n      tag_12\n      tag_17\n      jump\t// in\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_5:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n    tag_6:\n      tag_12\n      tag_23\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n        /* \"Blacklistable.sol\":1397:1423  address public blacklister */\n    tag_7:\n      tag_18\n      tag_26\n      jump\t// in\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_8:\n      tag_12\n      tag_29\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n    tag_9:\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n    tag_10:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n    tag_15:\n        /* \"Blacklistable.sol\":1815:1826  blacklister */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Blacklistable.sol\":1801:1811  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":1801:1826  msg.sender == blacklister */\n      eq\n        /* \"Blacklistable.sol\":1779:1898  require(\r... */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      dup2\n      and\n        /* \"Blacklistable.sol\":2954:2959  false */\n      0x00\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2930:2941  blacklisted */\n      0x02\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Blacklistable.sol\":2930:2959  blacklisted[_account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":2975:2998  UnBlacklisted(_account) */\n      mload\n      0x117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e\n      swap2\n        /* \"Blacklistable.sol\":2954:2959  false */\n      swap1\n        /* \"Blacklistable.sol\":2975:2998  UnBlacklisted(_account) */\n      log2\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_17:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_45\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_46\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_47\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_19\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_50\n      jump\t// in\n    tag_48:\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_52\n        /* \"Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Ownable.sol\":1779:1797  _transferOwnership */\n      tag_53\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_52:\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_19:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n    tag_24:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_56\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_46\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_57\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_19\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_50\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":3118:3147  _newBlacklister != address(0) */\n      dup2\n      and\n        /* \"Blacklistable.sol\":3096:3225  require(\r... */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_63\n      jump\t// in\n    tag_61:\n        /* \"Blacklistable.sol\":3236:3247  blacklister */\n      0x01\n        /* \"Blacklistable.sol\":3236:3265  blacklister = _newBlacklister */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":3281:3312  BlacklisterChanged(blacklister) */\n      mload(0x40)\n        /* \"Blacklistable.sol\":3300:3311  blacklister */\n      swap2\n      and\n      swap1\n        /* \"Blacklistable.sol\":3281:3312  BlacklisterChanged(blacklister) */\n      0xc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":1397:1423  address public blacklister */\n    tag_26:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_30:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_65\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_46\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_66\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_19\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_50\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_72\n      jump\t// in\n    tag_70:\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_73\n        /* \"Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Ownable.sol\":2137:2155  _transferOwnership */\n      tag_53\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_73:\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n    tag_33:\n        /* \"Blacklistable.sol\":1815:1826  blacklister */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Blacklistable.sol\":1801:1811  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":1801:1826  msg.sender == blacklister */\n      eq\n        /* \"Blacklistable.sol\":1779:1898  require(\r... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2647:2658  blacklisted */\n      0x02\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Blacklistable.sol\":2647:2675  blacklisted[_account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Blacklistable.sol\":2671:2675  true */\n      0x01\n        /* \"Blacklistable.sol\":2647:2675  blacklisted[_account] = true */\n      or\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":2691:2712  Blacklisted(_account) */\n      mload\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n      swap2\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      swap1\n        /* \"Blacklistable.sol\":2691:2712  Blacklisted(_account) */\n      log2\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      and\n        /* \"Blacklistable.sol\":2407:2411  bool */\n      0x00\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2431:2442  blacklisted */\n      0x02\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n      jump\t// out\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_46:\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_53:\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:320   */\n    tag_14:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_83:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_84:\n        /* \"#utility.yul\":309:314   */\n      swap4\n        /* \"#utility.yul\":84:320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":325:528   */\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":489:521   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":471:522   */\n      dup2\n      mstore\n        /* \"#utility.yul\":459:461   */\n      0x20\n        /* \"#utility.yul\":444:462   */\n      add\n      swap1\n        /* \"#utility.yul\":426:528   */\n      jump\t// out\n        /* \"#utility.yul\":533:720   */\n    tag_38:\n        /* \"#utility.yul\":698:712   */\n      swap1\n      iszero\n        /* \"#utility.yul\":691:713   */\n      iszero\n        /* \"#utility.yul\":673:714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":646:664   */\n      add\n      swap1\n        /* \"#utility.yul\":628:720   */\n      jump\t// out\n        /* \"#utility.yul\":725:1127   */\n    tag_72:\n        /* \"#utility.yul\":927:929   */\n      0x20\n        /* \"#utility.yul\":909:930   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":966:968   */\n      0x26\n        /* \"#utility.yul\":946:964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":939:969   */\n      mstore\n        /* \"#utility.yul\":1005:1039   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1000:1002   */\n      0x40\n        /* \"#utility.yul\":985:1003   */\n      dup3\n      add\n        /* \"#utility.yul\":978:1040   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1071:1073   */\n      0x60\n        /* \"#utility.yul\":1056:1074   */\n      dup3\n      add\n        /* \"#utility.yul\":1049:1085   */\n      mstore\n        /* \"#utility.yul\":1117:1120   */\n      0x80\n        /* \"#utility.yul\":1102:1121   */\n      add\n      swap1\n        /* \"#utility.yul\":899:1127   */\n      jump\t// out\n        /* \"#utility.yul\":1132:1540   */\n    tag_42:\n        /* \"#utility.yul\":1334:1336   */\n      0x20\n        /* \"#utility.yul\":1316:1337   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1373:1375   */\n      0x2c\n        /* \"#utility.yul\":1353:1371   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1346:1376   */\n      mstore\n        /* \"#utility.yul\":1412:1446   */\n      0x426c61636b6c69737461626c653a2063616c6c6572206973206e6f7420746865\n        /* \"#utility.yul\":1407:1409   */\n      0x40\n        /* \"#utility.yul\":1392:1410   */\n      dup3\n      add\n        /* \"#utility.yul\":1385:1447   */\n      mstore\n      shl(0xa1, 0x10313630b1b5b634b9ba32b9)\n        /* \"#utility.yul\":1478:1480   */\n      0x60\n        /* \"#utility.yul\":1463:1481   */\n      dup3\n      add\n        /* \"#utility.yul\":1456:1498   */\n      mstore\n        /* \"#utility.yul\":1530:1533   */\n      0x80\n        /* \"#utility.yul\":1515:1534   */\n      add\n      swap1\n        /* \"#utility.yul\":1306:1540   */\n      jump\t// out\n        /* \"#utility.yul\":1545:1901   */\n    tag_50:\n        /* \"#utility.yul\":1747:1749   */\n      0x20\n        /* \"#utility.yul\":1729:1750   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1766:1784   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1759:1789   */\n      mstore\n        /* \"#utility.yul\":1825:1859   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1820:1822   */\n      0x40\n        /* \"#utility.yul\":1805:1823   */\n      dup3\n      add\n        /* \"#utility.yul\":1798:1860   */\n      mstore\n        /* \"#utility.yul\":1892:1894   */\n      0x60\n        /* \"#utility.yul\":1877:1895   */\n      add\n      swap1\n        /* \"#utility.yul\":1719:1901   */\n      jump\t// out\n        /* \"#utility.yul\":1906:2320   */\n    tag_63:\n        /* \"#utility.yul\":2108:2110   */\n      0x20\n        /* \"#utility.yul\":2090:2111   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2147:2149   */\n      0x32\n        /* \"#utility.yul\":2127:2145   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2120:2150   */\n      mstore\n        /* \"#utility.yul\":2186:2220   */\n      0x426c61636b6c69737461626c653a206e657720626c61636b6c69737465722069\n        /* \"#utility.yul\":2181:2183   */\n      0x40\n        /* \"#utility.yul\":2166:2184   */\n      dup3\n      add\n        /* \"#utility.yul\":2159:2221   */\n      mstore\n      shl(0x70, 0x7320746865207a65726f2061646472657373)\n        /* \"#utility.yul\":2252:2254   */\n      0x60\n        /* \"#utility.yul\":2237:2255   */\n      dup3\n      add\n        /* \"#utility.yul\":2230:2278   */\n      mstore\n        /* \"#utility.yul\":2310:2313   */\n      0x80\n        /* \"#utility.yul\":2295:2314   */\n      add\n      swap1\n        /* \"#utility.yul\":2080:2320   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7a7ef9172cdd0ae6d288e09d73dab4dfafbc176725a18d7a6283926694a0bb564736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105b8806100896000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd1024301161005b578063bd102430146100db578063f2fde38b146100e3578063f9f92be4146100f6578063fe575a871461010957610088565b80631a8952661461008d578063715018a6146100a25780638da5cb5b146100aa578063ad38bf22146100c8575b600080fd5b6100a061009b36600461041c565b610129565b005b6100a06101a5565b6100b26101f0565b6040516100bf919061044a565b60405180910390f35b6100a06100d636600461041c565b6101ff565b6100b26102b4565b6100a06100f136600461041c565b6102c3565b6100a061010436600461041c565b610334565b61011c61011736600461041c565b6103aa565b6040516100bf919061045e565b6001546001600160a01b0316331461015c5760405162461bcd60e51b8152600401610153906104af565b60405180910390fd5b6001600160a01b038116600081815260026020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b6101ad6103c8565b6001600160a01b03166101be6101f0565b6001600160a01b0316146101e45760405162461bcd60e51b8152600401610153906104fb565b6101ee60006103cc565b565b6000546001600160a01b031690565b6102076103c8565b6001600160a01b03166102186101f0565b6001600160a01b03161461023e5760405162461bcd60e51b8152600401610153906104fb565b6001600160a01b0381166102645760405162461bcd60e51b815260040161015390610530565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6001546001600160a01b031681565b6102cb6103c8565b6001600160a01b03166102dc6101f0565b6001600160a01b0316146103025760405162461bcd60e51b8152600401610153906104fb565b6001600160a01b0381166103285760405162461bcd60e51b815260040161015390610469565b610331816103cc565b50565b6001546001600160a01b0316331461035e5760405162461bcd60e51b8152600401610153906104af565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526002602052604090205460ff1690565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561042d578081fd5b81356001600160a01b0381168114610443578182fd5b9392505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696040820152717320746865207a65726f206164647265737360701b60608201526080019056fea2646970667358221220e7a7ef9172cdd0ae6d288e09d73dab4dfafbc176725a18d7a6283926694a0bb564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x5B8 DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD102430 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD102430 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x109 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1A895266 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xAD38BF22 EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BE PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x1EE PUSH1 0x0 PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x218 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xC67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DC PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x3CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x443 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x10313630B1B5B634B9BA32B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x7320746865207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA7 0xEF SWAP2 PUSH19 0xCDD0AE6D288E09D73DAB4DFAFBC176725A18D7 0xA6 0x28 CODECOPY 0x26 PUSH10 0x4A0BB564736F6C634300 ADDMOD ADD STOP CALLER ",
							"sourceMap": "1356:1967:2:-:0;;;;;;;;;;;;-1:-1:-1;942:32:5;961:12;:10;:12::i;:::-;942:18;:32::i;:::-;1356:1967:2;;656:98:3;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;1356:1967:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2322:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nodeType": "YulIf",
															"src": "94:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:10"
															},
															"nodeType": "YulIf",
															"src": "210:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:306:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "436:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "448:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "459:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "444:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "436:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "478:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "493:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "509:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "514:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "505:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "505:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "501:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "501:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "471:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "395:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "406:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "417:4:10",
														"type": ""
													}
												],
												"src": "325:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "661:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "646:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "646:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "638:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "680:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "705:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "698:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "698:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "673:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "673:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "597:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "608:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "619:4:10",
														"type": ""
													}
												],
												"src": "533:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "899:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "916:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "909:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "909:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "966:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1000:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "985:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1005:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1071:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1056:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1076:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1049:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1094:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1106:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1117:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1094:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "876:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "890:4:10",
														"type": ""
													}
												],
												"src": "725:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1306:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1323:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1316:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1357:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1368:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1346:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1396:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1407:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1412:34:10",
																		"type": "",
																		"value": "Blacklistable: caller is not the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1385:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1385:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1467:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1478:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1463:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1483:14:10",
																		"type": "",
																		"value": " blacklister"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1456:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1519:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1530:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1507:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1283:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1297:4:10",
														"type": ""
													}
												],
												"src": "1132:408:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1736:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1747:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1770:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1781:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1766:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1786:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1759:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1820:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1805:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1825:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1798:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1869:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1869:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1696:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1710:4:10",
														"type": ""
													}
												],
												"src": "1545:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2131:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2127:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2120:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2181:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2186:34:10",
																		"type": "",
																		"value": "Blacklistable: new blacklister i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2159:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2241:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2252:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2237:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2257:20:10",
																		"type": "",
																		"value": "s the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2230:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2287:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2299:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2287:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2057:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2071:4:10",
														"type": ""
													}
												],
												"src": "1906:414:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Blacklistable: caller is not the\")\n        mstore(add(headStart, 96), \" blacklister\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Blacklistable: new blacklister i\")\n        mstore(add(headStart, 96), \"s the zero address\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063bd1024301161005b578063bd102430146100db578063f2fde38b146100e3578063f9f92be4146100f6578063fe575a871461010957610088565b80631a8952661461008d578063715018a6146100a25780638da5cb5b146100aa578063ad38bf22146100c8575b600080fd5b6100a061009b36600461041c565b610129565b005b6100a06101a5565b6100b26101f0565b6040516100bf919061044a565b60405180910390f35b6100a06100d636600461041c565b6101ff565b6100b26102b4565b6100a06100f136600461041c565b6102c3565b6100a061010436600461041c565b610334565b61011c61011736600461041c565b6103aa565b6040516100bf919061045e565b6001546001600160a01b0316331461015c5760405162461bcd60e51b8152600401610153906104af565b60405180910390fd5b6001600160a01b038116600081815260026020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b6101ad6103c8565b6001600160a01b03166101be6101f0565b6001600160a01b0316146101e45760405162461bcd60e51b8152600401610153906104fb565b6101ee60006103cc565b565b6000546001600160a01b031690565b6102076103c8565b6001600160a01b03166102186101f0565b6001600160a01b03161461023e5760405162461bcd60e51b8152600401610153906104fb565b6001600160a01b0381166102645760405162461bcd60e51b815260040161015390610530565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6001546001600160a01b031681565b6102cb6103c8565b6001600160a01b03166102dc6101f0565b6001600160a01b0316146103025760405162461bcd60e51b8152600401610153906104fb565b6001600160a01b0381166103285760405162461bcd60e51b815260040161015390610469565b610331816103cc565b50565b6001546001600160a01b0316331461035e5760405162461bcd60e51b8152600401610153906104af565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526002602052604090205460ff1690565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561042d578081fd5b81356001600160a01b0381168114610443578182fd5b9392505050565b6001600160a01b0391909116815260200190565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696040820152717320746865207a65726f206164647265737360701b60608201526080019056fea2646970667358221220e7a7ef9172cdd0ae6d288e09d73dab4dfafbc176725a18d7a6283926694a0bb564736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBD102430 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBD102430 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x109 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x1A895266 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xAD38BF22 EQ PUSH2 0xC8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA0 PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF1 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x2C3 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH2 0x11C PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x41C JUMP JUMPDEST PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1AD PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BE PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x1EE PUSH1 0x0 PUSH2 0x3CC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x207 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x218 PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xC67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2DC PUSH2 0x1F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x3CC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x443 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x10313630B1B5B634B9BA32B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x7320746865207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xA7 0xEF SWAP2 PUSH19 0xCDD0AE6D288E09D73DAB4DFAFBC176725A18D7 0xA6 0x28 CODECOPY 0x26 PUSH10 0x4A0BB564736F6C634300 ADDMOD ADD STOP CALLER ",
							"sourceMap": "1356:1967:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2855:151;;;;;;:::i;:::-;;:::i;:::-;;1714:103:5;;;:::i;1063:87::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3014:306:2;;;;;;:::i;:::-;;:::i;1397:26::-;;;:::i;1972:201:5:-;;;;;;:::i;:::-;;:::i;2574:146:2:-;;;;;;:::i;:::-;;:::i;2343:117::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2855:151::-;1815:11;;-1:-1:-1;;;;;1815:11:2;1801:10;:25;1779:119;;;;-1:-1:-1;;;1779:119:2;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2930:21:2;::::1;2954:5;2930:21:::0;;;:11:::1;:21;::::0;;;;;:29;;-1:-1:-1;;2930:29:2::1;::::0;;2975:23;::::1;::::0;2954:5;2975:23:::1;2855:151:::0;:::o;1714:103:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;1063:87::-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:5;1063:87;:::o;3014:306:2:-;1294:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3118:29:2;::::1;3096:129;;;;-1:-1:-1::0;;;3096:129:2::1;;;;;;;:::i;:::-;3236:11;:29:::0;;-1:-1:-1;;;;;;3236:29:2::1;-1:-1:-1::0;;;;;3236:29:2;;::::1;::::0;;;::::1;::::0;;;;3281:31:::1;::::0;3300:11;::::1;::::0;3281:31:::1;::::0;-1:-1:-1;;3281:31:2::1;3014:306:::0;:::o;1397:26::-;;;-1:-1:-1;;;;;1397:26:2;;:::o;1972:201:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:5;::::1;2053:73;;;;-1:-1:-1::0;;;2053:73:5::1;;;;;;;:::i;:::-;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;2574:146:2:-;1815:11;;-1:-1:-1;;;;;1815:11:2;1801:10;:25;1779:119;;;;-1:-1:-1;;;1779:119:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2647:21:2;::::1;;::::0;;;:11:::1;:21;::::0;;;;;:28;;-1:-1:-1;;2647:28:2::1;2671:4;2647:28;::::0;;2691:21;::::1;::::0;2647;2691::::1;2574:146:::0;:::o;2343:117::-;-1:-1:-1;;;;;2431:21:2;2407:4;2431:21;;;:11;:21;;;;;;;;;2343:117::o;656:98:3:-;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;14:306:10:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:10;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:10:o;325:203::-;-1:-1:-1;;;;;489:32:10;;;;471:51;;459:2;444:18;;426:102::o;533:187::-;698:14;;691:22;673:41;;661:2;646:18;;628:92::o;725:402::-;927:2;909:21;;;966:2;946:18;;;939:30;1005:34;1000:2;985:18;;978:62;-1:-1:-1;;;1071:2:10;1056:18;;1049:36;1117:3;1102:19;;899:228::o;1132:408::-;1334:2;1316:21;;;1373:2;1353:18;;;1346:30;1412:34;1407:2;1392:18;;1385:62;-1:-1:-1;;;1478:2:10;1463:18;;1456:42;1530:3;1515:19;;1306:234::o;1545:356::-;1747:2;1729:21;;;1766:18;;;1759:30;1825:34;1820:2;1805:18;;1798:62;1892:2;1877:18;;1719:182::o;1906:414::-;2108:2;2090:21;;;2147:2;2127:18;;;2120:30;2186:34;2181:2;2166:18;;2159:62;-1:-1:-1;;;2252:2:10;2237:18;;2230:48;2310:3;2295:19;;2080:240::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "292800",
								"executionCost": "22799",
								"totalCost": "315599"
							},
							"external": {
								"blacklist(address)": "23204",
								"blacklister()": "1070",
								"isBlacklisted(address)": "1313",
								"owner()": "1115",
								"renounceOwnership()": "23527",
								"transferOwnership(address)": "23686",
								"unBlacklist(address)": "23155",
								"updateBlacklister(address)": "23325"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 3323,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7a7ef9172cdd0ae6d288e09d73dab4dfafbc176725a18d7a6283926694a0bb564736f6c63430008010033",
									".code": [
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "BD102430"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "BD102430"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "F9F92BE4"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "FE575A87"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "1A895266"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "AD38BF22"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1356,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E"
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3147,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "C67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2442,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 309,
											"end": 314,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 84,
											"end": 320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 528,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 325,
											"end": 528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 489,
											"end": 521,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 471,
											"end": 522,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 471,
											"end": 522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 459,
											"end": 461,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 444,
											"end": 462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 528,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 533,
											"end": 720,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 533,
											"end": 720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 698,
											"end": 712,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 698,
											"end": 712,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 691,
											"end": 713,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 673,
											"end": 714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 673,
											"end": 714,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 646,
											"end": 664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 628,
											"end": 720,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 725,
											"end": 1127,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 725,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 927,
											"end": 929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 909,
											"end": 930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 909,
											"end": 930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 946,
											"end": 964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 946,
											"end": 964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 946,
											"end": 964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 939,
											"end": 969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1005,
											"end": 1039,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 978,
											"end": 1040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1071,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1056,
											"end": 1074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1120,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1102,
											"end": 1121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1102,
											"end": 1121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 899,
											"end": 1127,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1540,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1132,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1446,
											"name": "PUSH",
											"source": 10,
											"value": "426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1385,
											"end": 1447,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10313630B1B5B634B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1498,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1530,
											"end": 1533,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1515,
											"end": 1534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1515,
											"end": 1534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1306,
											"end": 1540,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1545,
											"end": 1901,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1545,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1747,
											"end": 1749,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1766,
											"end": 1784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1859,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 1901,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1906,
											"end": 2320,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 1906,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2111,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2127,
											"end": 2145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2150,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2186,
											"end": 2220,
											"name": "PUSH",
											"source": 10,
											"value": "426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069"
										},
										{
											"begin": 2181,
											"end": 2183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2166,
											"end": 2184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7320746865207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2278,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2310,
											"end": 2313,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2295,
											"end": 2314,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2320,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blacklist(address)": "f9f92be4",
							"blacklister()": "bd102430",
							"isBlacklisted(address)": "fe575a87",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unBlacklist(address)": "1a895266",
							"updateBlacklister(address)": "ad38bf22"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows accounts to be blacklisted by a \\\"blacklister\\\" role\",\"kind\":\"dev\",\"methods\":{\"blacklist(address)\":{\"details\":\"Adds account to blacklist\",\"params\":{\"_account\":\"The address to blacklist\"}},\"isBlacklisted(address)\":{\"details\":\"Checks if account is blacklisted\",\"params\":{\"_account\":\"The address to check\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unBlacklist(address)\":{\"details\":\"Removes account from blacklist\",\"params\":{\"_account\":\"The address to remove from the blacklist\"}}},\"title\":\"Blacklistable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Blacklistable.sol\":\"Blacklistable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Blacklistable.sol\":{\"keccak256\":\"0xcfc1a39064a806b71586e19ea5db79c312d0ff679d4e283388a231d3296ffea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3fbe994985b7ee2569bca60f0b06b2ca0031d58e7ffb1b75c88eb047795b3d\",\"dweb:/ipfs/QmSQMix6QixoUTT7zdmj1Bi6t4vxgXTej7rNKor1231c9F\"]},\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 557,
								"contract": "Blacklistable.sol:Blacklistable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 327,
								"contract": "Blacklistable.sol:Blacklistable",
								"label": "blacklister",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 331,
								"contract": "Blacklistable.sol:Blacklistable",
								"label": "blacklisted",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 557,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PauserChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb",
							"pauser()": "9fd0506d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"Pausable.sol\":{\"keccak256\":\"0xac72f1e3d6876fc17cc25f07f8204ab361e60ef1d4ba9cb07817df1666dcd553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b5f53eba69b7d817e434aff4aed4c51a13d621ed5767119d13697da1e67b010\",\"dweb:/ipfs/QmaPqfvQbupTG6Dv9TbPkpg67qtX8KJhG8z1FEiGLoAd3P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 662,
								"contract": "Pausable.sol:Pausable",
								"label": "pauser",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 674,
								"contract": "Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Rescuable.sol": {
				"Rescuable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "RescuerChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rescuer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "updateRescuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"rescueERC20(address,address,uint256)": {
								"params": {
									"amount": "Amount to withdraw",
									"to": "Recipient address",
									"tokenContract": "ERC20 token contract address"
								}
							},
							"rescuer()": {
								"returns": {
									"_0": "Rescuer's address"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateRescuer(address)": {
								"params": {
									"newRescuer": "New rescuer's address"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Rescuable.sol\":1334:2722  contract Rescuable is Ownable {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  tag_5\n    /* \"Ownable.sol\":961:971  _msgSender */\n  tag_6\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  jump\t// in\ntag_5:\n    /* \"Ownable.sol\":942:960  _transferOwnership */\n  tag_7\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"Rescuable.sol\":1334:2722  contract Rescuable is Ownable {\r... */\n  jump(tag_8)\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\ntag_6:\n    /* \"Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_7:\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"Rescuable.sol\":1334:2722  contract Rescuable is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Rescuable.sol\":1334:2722  contract Rescuable is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2ab60045\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38a63183\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb2118a8d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_5:\n      tag_9\n      tag_18\n      jump\t// in\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_6:\n      tag_13\n      tag_20\n      jump\t// in\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n    tag_7:\n      tag_9\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_8:\n      tag_9\n      tag_27\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n    tag_12:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_30\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_31\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_32\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_20\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_32:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Rescuable.sol\":2543:2567  newRescuer != address(0) */\n      dup2\n      and\n        /* \"Rescuable.sol\":2521:2637  require(\r... */\n      tag_37\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_39\n      jump\t// in\n    tag_37:\n        /* \"Rescuable.sol\":2648:2656  _rescuer */\n      0x01\n        /* \"Rescuable.sol\":2648:2669  _rescuer = newRescuer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Rescuable.sol\":2685:2711  RescuerChanged(newRescuer) */\n      mload(0x40)\n      0xe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n    tag_14:\n        /* \"Rescuable.sol\":1657:1665  _rescuer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_18:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_42\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_31\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_43\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_20\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_47\n        /* \"Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Ownable.sol\":1779:1797  _transferOwnership */\n      tag_48\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_47:\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_20:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n    tag_25:\n        /* \"Rescuable.sol\":1827:1835  _rescuer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"Rescuable.sol\":1813:1823  msg.sender */\n      caller\n        /* \"Rescuable.sol\":1813:1835  msg.sender == _rescuer */\n      eq\n        /* \"Rescuable.sol\":1805:1876  require(msg.sender == _rescuer, \"Rescuable: caller is not the rescuer\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_53\n      jump\t// in\n    tag_51:\n        /* \"Rescuable.sol\":2268:2306  tokenContract.safeTransfer(to, amount) */\n      tag_55\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Rescuable.sol\":2268:2294  tokenContract.safeTransfer */\n      dup5\n      and\n        /* \"Rescuable.sol\":2295:2297  to */\n      dup4\n        /* \"Rescuable.sol\":2299:2305  amount */\n      dup4\n        /* \"Rescuable.sol\":2268:2294  tokenContract.safeTransfer */\n      tag_56\n        /* \"Rescuable.sol\":2268:2306  tokenContract.safeTransfer(to, amount) */\n      jump\t// in\n    tag_55:\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_28:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_58\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_31\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_59\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_20\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_65\n      jump\t// in\n    tag_63:\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_66\n        /* \"Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Ownable.sol\":2137:2155  _transferOwnership */\n      tag_48\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_66:\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_31:\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_48:\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"SafeERC20.sol\":707:918  function safeTransfer(\r... */\n    tag_56:\n        /* \"SafeERC20.sol\":824:910  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_55\n        /* \"SafeERC20.sol\":844:849  token */\n      dup4\n        /* \"SafeERC20.sol\":874:897  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"SafeERC20.sol\":899:901  to */\n      dup5\n        /* \"SafeERC20.sol\":903:908  value */\n      dup5\n        /* \"SafeERC20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"SafeERC20.sol\":3704:3727  bytes memory returndata */\n      0x00\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_75\n        /* \"SafeERC20.sol\":3758:3762  data */\n      dup3\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"SafeERC20.sol\":3738:3743  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SafeERC20.sol\":3730:3757  address(token).functionCall */\n      and\n      tag_76\n      swap1\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"SafeERC20.sol\":3814:3831  returndata.length */\n      dup1\n      mload\n        /* \"SafeERC20.sol\":3704:3799  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"SafeERC20.sol\":3814:3835  returndata.length > 0 */\n      iszero\n        /* \"SafeERC20.sol\":3810:3989  if (returndata.length > 0) {\r... */\n      tag_55\n      jumpi\n        /* \"SafeERC20.sol\":3911:3921  returndata */\n      dup1\n        /* \"SafeERC20.sol\":3900:3930  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"SafeERC20.sol\":3892:3977  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_82\n      jump\t// in\n        /* \"Address.sol\":3955:4184  function functionCall(\r... */\n    tag_76:\n        /* \"Address.sol\":4092:4104  bytes memory */\n      0x60\n        /* \"Address.sol\":4124:4176  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_84\n        /* \"Address.sol\":4146:4152  target */\n      dup5\n        /* \"Address.sol\":4154:4158  data */\n      dup5\n        /* \"Address.sol\":4160:4161  0 */\n      0x00\n        /* \"Address.sol\":4163:4175  errorMessage */\n      dup6\n        /* \"Address.sol\":4124:4145  functionCallWithValue */\n      tag_85\n        /* \"Address.sol\":4124:4176  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_84:\n        /* \"Address.sol\":4117:4176  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Address.sol\":3955:4184  function functionCall(\r... */\n    tag_83:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":5075:5585  function functionCallWithValue(\r... */\n    tag_85:\n        /* \"Address.sol\":5245:5257  bytes memory */\n      0x60\n        /* \"Address.sol\":5303:5308  value */\n      dup3\n        /* \"Address.sol\":5278:5299  address(this).balance */\n      selfbalance\n        /* \"Address.sol\":5278:5308  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Address.sol\":5270:5351  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_89\n      jump\t// in\n    tag_87:\n        /* \"Address.sol\":5370:5388  isContract(target) */\n      tag_90\n        /* \"Address.sol\":5381:5387  target */\n      dup6\n        /* \"Address.sol\":5370:5380  isContract */\n      tag_91\n        /* \"Address.sol\":5370:5388  isContract(target) */\n      jump\t// in\n    tag_90:\n        /* \"Address.sol\":5362:5422  require(isContract(target), \"Address: call to non-contract\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_94\n      jump\t// in\n    tag_92:\n        /* \"Address.sol\":5436:5448  bool success */\n      0x00\n        /* \"Address.sol\":5450:5473  bytes memory returndata */\n      dup1\n        /* \"Address.sol\":5477:5483  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Address.sol\":5477:5488  target.call */\n      and\n        /* \"Address.sol\":5496:5501  value */\n      dup6\n        /* \"Address.sol\":5503:5507  data */\n      dup8\n        /* \"Address.sol\":5477:5508  target.call{value: value}(data) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_99\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_98)\n    tag_99:\n      0x60\n      swap2\n      pop\n    tag_98:\n      pop\n        /* \"Address.sol\":5435:5508  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Address.sol\":5526:5577  verifyCallResult(success, returndata, errorMessage) */\n      tag_100\n        /* \"Address.sol\":5543:5550  success */\n      dup3\n        /* \"Address.sol\":5552:5562  returndata */\n      dup3\n        /* \"Address.sol\":5564:5576  errorMessage */\n      dup7\n        /* \"Address.sol\":5526:5542  verifyCallResult */\n      tag_101\n        /* \"Address.sol\":5526:5577  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_100:\n        /* \"Address.sol\":5519:5577  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"Address.sol\":5075:5585  function functionCallWithValue(\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Address.sol\":1505:1524  account.code.length */\n      and\n      extcodesize\n        /* \"Address.sol\":1505:1528  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"Address.sol\":7761:8523  function verifyCallResult(\r... */\n    tag_101:\n        /* \"Address.sol\":7911:7923  bytes memory */\n      0x60\n        /* \"Address.sol\":7940:7947  success */\n      dup4\n        /* \"Address.sol\":7936:8516  if (success) {\r... */\n      iszero\n      tag_104\n      jumpi\n      pop\n        /* \"Address.sol\":7971:7981  returndata */\n      dup2\n        /* \"Address.sol\":7964:7981  return returndata */\n      jump(tag_83)\n        /* \"Address.sol\":7936:8516  if (success) {\r... */\n    tag_104:\n        /* \"Address.sol\":8085:8102  returndata.length */\n      dup3\n      mload\n        /* \"Address.sol\":8085:8106  returndata.length > 0 */\n      iszero\n        /* \"Address.sol\":8081:8505  if (returndata.length > 0) {\r... */\n      tag_106\n      jumpi\n        /* \"Address.sol\":8333:8343  returndata */\n      dup3\n        /* \"Address.sol\":8327:8344  mload(returndata) */\n      mload\n        /* \"Address.sol\":8394:8409  returndata_size */\n      dup1\n        /* \"Address.sol\":8381:8391  returndata */\n      dup5\n        /* \"Address.sol\":8377:8379  32 */\n      0x20\n        /* \"Address.sol\":8373:8392  add(32, returndata) */\n      add\n        /* \"Address.sol\":8366:8410  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Address.sol\":8281:8429  {\r... */\n    tag_106:\n        /* \"Address.sol\":8476:8488  errorMessage */\n      dup2\n        /* \"Address.sol\":8469:8489  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n        /* \"#utility.yul\":14:273   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_112:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":210:243   */\n      tag_83\n        /* \"#utility.yul\":237:242   */\n      dup2\n        /* \"#utility.yul\":210:243   */\n      tag_114\n      jump\t// in\n        /* \"#utility.yul\":278:575   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":398:400   */\n      0x20\n        /* \"#utility.yul\":386:395   */\n      dup3\n        /* \"#utility.yul\":377:384   */\n      dup5\n        /* \"#utility.yul\":373:396   */\n      sub\n        /* \"#utility.yul\":369:401   */\n      slt\n        /* \"#utility.yul\":366:368   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":419:425   */\n      dup1\n        /* \"#utility.yul\":411:417   */\n      dup2\n        /* \"#utility.yul\":404:426   */\n      revert\n        /* \"#utility.yul\":366:368   */\n    tag_116:\n        /* \"#utility.yul\":456:465   */\n      dup2\n        /* \"#utility.yul\":450:466   */\n      mload\n        /* \"#utility.yul\":509:514   */\n      dup1\n        /* \"#utility.yul\":502:515   */\n      iszero\n        /* \"#utility.yul\":495:516   */\n      iszero\n        /* \"#utility.yul\":488:493   */\n      dup2\n        /* \"#utility.yul\":485:517   */\n      eq\n        /* \"#utility.yul\":475:477   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":536:542   */\n      dup2\n        /* \"#utility.yul\":528:534   */\n      dup3\n        /* \"#utility.yul\":521:543   */\n      revert\n        /* \"#utility.yul\":580:1064   */\n    tag_24:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":740:742   */\n      0x60\n        /* \"#utility.yul\":728:737   */\n      dup5\n        /* \"#utility.yul\":719:726   */\n      dup7\n        /* \"#utility.yul\":715:738   */\n      sub\n        /* \"#utility.yul\":711:743   */\n      slt\n        /* \"#utility.yul\":708:710   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":761:767   */\n      dup2\n        /* \"#utility.yul\":753:759   */\n      dup3\n        /* \"#utility.yul\":746:768   */\n      revert\n        /* \"#utility.yul\":708:710   */\n    tag_119:\n        /* \"#utility.yul\":805:814   */\n      dup4\n        /* \"#utility.yul\":792:815   */\n      calldataload\n        /* \"#utility.yul\":824:857   */\n      tag_120\n        /* \"#utility.yul\":851:856   */\n      dup2\n        /* \"#utility.yul\":824:857   */\n      tag_114\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":876:881   */\n      swap3\n      pop\n        /* \"#utility.yul\":933:935   */\n      0x20\n        /* \"#utility.yul\":918:936   */\n      dup5\n      add\n        /* \"#utility.yul\":905:937   */\n      calldataload\n        /* \"#utility.yul\":946:981   */\n      tag_121\n        /* \"#utility.yul\":905:937   */\n      dup2\n        /* \"#utility.yul\":946:981   */\n      tag_114\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":698:1064   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1000:1007   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1054:1056   */\n      0x40\n        /* \"#utility.yul\":1039:1057   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1026:1058   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":698:1064   */\n      jump\t// out\n        /* \"#utility.yul\":1069:1343   */\n    tag_96:\n      0x00\n        /* \"#utility.yul\":1236:1242   */\n      dup3\n        /* \"#utility.yul\":1230:1243   */\n      mload\n        /* \"#utility.yul\":1252:1305   */\n      tag_123\n        /* \"#utility.yul\":1298:1304   */\n      dup2\n        /* \"#utility.yul\":1293:1296   */\n      dup5\n        /* \"#utility.yul\":1286:1290   */\n      0x20\n        /* \"#utility.yul\":1278:1284   */\n      dup8\n        /* \"#utility.yul\":1274:1291   */\n      add\n        /* \"#utility.yul\":1252:1305   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1321:1337   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1206:1343   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1348:1551   */\n    tag_16:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1512:1544   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1494:1545   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1482:1484   */\n      0x20\n        /* \"#utility.yul\":1467:1485   */\n      add\n      swap1\n        /* \"#utility.yul\":1449:1551   */\n      jump\t// out\n        /* \"#utility.yul\":1556:1830   */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1748:1780   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":1730:1781   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1812:1814   */\n      0x20\n        /* \"#utility.yul\":1797:1815   */\n      dup3\n      add\n        /* \"#utility.yul\":1790:1824   */\n      mstore\n        /* \"#utility.yul\":1718:1720   */\n      0x40\n        /* \"#utility.yul\":1703:1721   */\n      add\n      swap1\n        /* \"#utility.yul\":1685:1830   */\n      jump\t// out\n        /* \"#utility.yul\":1835:2218   */\n    tag_109:\n      0x00\n        /* \"#utility.yul\":1984:1986   */\n      0x20\n        /* \"#utility.yul\":1973:1982   */\n      dup3\n        /* \"#utility.yul\":1966:1987   */\n      mstore\n        /* \"#utility.yul\":2016:2022   */\n      dup3\n        /* \"#utility.yul\":2010:2023   */\n      mload\n        /* \"#utility.yul\":2059:2065   */\n      dup1\n        /* \"#utility.yul\":2054:2056   */\n      0x20\n        /* \"#utility.yul\":2043:2052   */\n      dup5\n        /* \"#utility.yul\":2039:2057   */\n      add\n        /* \"#utility.yul\":2032:2066   */\n      mstore\n        /* \"#utility.yul\":2075:2141   */\n      tag_128\n        /* \"#utility.yul\":2134:2140   */\n      dup2\n        /* \"#utility.yul\":2129:2131   */\n      0x40\n        /* \"#utility.yul\":2118:2127   */\n      dup6\n        /* \"#utility.yul\":2114:2132   */\n      add\n        /* \"#utility.yul\":2109:2111   */\n      0x20\n        /* \"#utility.yul\":2101:2107   */\n      dup8\n        /* \"#utility.yul\":2097:2112   */\n      add\n        /* \"#utility.yul\":2075:2141   */\n      tag_124\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2202:2204   */\n      0x1f\n        /* \"#utility.yul\":2181:2196   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2177:2206   */\n      and\n        /* \"#utility.yul\":2162:2207   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2209:2211   */\n      0x40\n        /* \"#utility.yul\":2158:2212   */\n      add\n      swap3\n        /* \"#utility.yul\":1956:2218   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2223:2625   */\n    tag_65:\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2407:2428   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2464:2466   */\n      0x26\n        /* \"#utility.yul\":2444:2462   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2437:2467   */\n      mstore\n        /* \"#utility.yul\":2503:2537   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2498:2500   */\n      0x40\n        /* \"#utility.yul\":2483:2501   */\n      dup3\n      add\n        /* \"#utility.yul\":2476:2538   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":2569:2571   */\n      0x60\n        /* \"#utility.yul\":2554:2572   */\n      dup3\n      add\n        /* \"#utility.yul\":2547:2583   */\n      mstore\n        /* \"#utility.yul\":2615:2618   */\n      0x80\n        /* \"#utility.yul\":2600:2619   */\n      add\n      swap1\n        /* \"#utility.yul\":2397:2625   */\n      jump\t// out\n        /* \"#utility.yul\":2630:3036   */\n    tag_39:\n        /* \"#utility.yul\":2832:2834   */\n      0x20\n        /* \"#utility.yul\":2814:2835   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2871:2873   */\n      0x2a\n        /* \"#utility.yul\":2851:2869   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2844:2874   */\n      mstore\n        /* \"#utility.yul\":2910:2944   */\n      0x526573637561626c653a206e6577207265736375657220697320746865207a65\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2890:2908   */\n      dup3\n      add\n        /* \"#utility.yul\":2883:2945   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":2976:2978   */\n      0x60\n        /* \"#utility.yul\":2961:2979   */\n      dup3\n      add\n        /* \"#utility.yul\":2954:2994   */\n      mstore\n        /* \"#utility.yul\":3026:3029   */\n      0x80\n        /* \"#utility.yul\":3011:3030   */\n      add\n      swap1\n        /* \"#utility.yul\":2804:3036   */\n      jump\t// out\n        /* \"#utility.yul\":3041:3443   */\n    tag_89:\n        /* \"#utility.yul\":3243:3245   */\n      0x20\n        /* \"#utility.yul\":3225:3246   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3282:3284   */\n      0x26\n        /* \"#utility.yul\":3262:3280   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3255:3285   */\n      mstore\n        /* \"#utility.yul\":3321:3355   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":3316:3318   */\n      0x40\n        /* \"#utility.yul\":3301:3319   */\n      dup3\n      add\n        /* \"#utility.yul\":3294:3356   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":3387:3389   */\n      0x60\n        /* \"#utility.yul\":3372:3390   */\n      dup3\n      add\n        /* \"#utility.yul\":3365:3401   */\n      mstore\n        /* \"#utility.yul\":3433:3436   */\n      0x80\n        /* \"#utility.yul\":3418:3437   */\n      add\n      swap1\n        /* \"#utility.yul\":3215:3443   */\n      jump\t// out\n        /* \"#utility.yul\":3448:3848   */\n    tag_53:\n        /* \"#utility.yul\":3650:3652   */\n      0x20\n        /* \"#utility.yul\":3632:3653   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3689:3691   */\n      0x24\n        /* \"#utility.yul\":3669:3687   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3662:3692   */\n      mstore\n        /* \"#utility.yul\":3728:3762   */\n      0x526573637561626c653a2063616c6c6572206973206e6f742074686520726573\n        /* \"#utility.yul\":3723:3725   */\n      0x40\n        /* \"#utility.yul\":3708:3726   */\n      dup3\n      add\n        /* \"#utility.yul\":3701:3763   */\n      mstore\n      shl(0xe1, 0x31bab2b9)\n        /* \"#utility.yul\":3794:3796   */\n      0x60\n        /* \"#utility.yul\":3779:3797   */\n      dup3\n      add\n        /* \"#utility.yul\":3772:3806   */\n      mstore\n        /* \"#utility.yul\":3838:3841   */\n      0x80\n        /* \"#utility.yul\":3823:3842   */\n      add\n      swap1\n        /* \"#utility.yul\":3622:3848   */\n      jump\t// out\n        /* \"#utility.yul\":3853:4209   */\n    tag_35:\n        /* \"#utility.yul\":4055:4057   */\n      0x20\n        /* \"#utility.yul\":4037:4058   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4074:4092   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4067:4097   */\n      mstore\n        /* \"#utility.yul\":4133:4167   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4128:4130   */\n      0x40\n        /* \"#utility.yul\":4113:4131   */\n      dup3\n      add\n        /* \"#utility.yul\":4106:4168   */\n      mstore\n        /* \"#utility.yul\":4200:4202   */\n      0x60\n        /* \"#utility.yul\":4185:4203   */\n      add\n      swap1\n        /* \"#utility.yul\":4027:4209   */\n      jump\t// out\n        /* \"#utility.yul\":4214:4567   */\n    tag_94:\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4398:4419   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4455:4457   */\n      0x1d\n        /* \"#utility.yul\":4435:4453   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4428:4458   */\n      mstore\n        /* \"#utility.yul\":4494:4525   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":4489:4491   */\n      0x40\n        /* \"#utility.yul\":4474:4492   */\n      dup3\n      add\n        /* \"#utility.yul\":4467:4526   */\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x60\n        /* \"#utility.yul\":4543:4561   */\n      add\n      swap1\n        /* \"#utility.yul\":4388:4567   */\n      jump\t// out\n        /* \"#utility.yul\":4572:4978   */\n    tag_82:\n        /* \"#utility.yul\":4774:4776   */\n      0x20\n        /* \"#utility.yul\":4756:4777   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4813:4815   */\n      0x2a\n        /* \"#utility.yul\":4793:4811   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4786:4816   */\n      mstore\n        /* \"#utility.yul\":4852:4886   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":4847:4849   */\n      0x40\n        /* \"#utility.yul\":4832:4850   */\n      dup3\n      add\n        /* \"#utility.yul\":4825:4887   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":4918:4920   */\n      0x60\n        /* \"#utility.yul\":4903:4921   */\n      dup3\n      add\n        /* \"#utility.yul\":4896:4936   */\n      mstore\n        /* \"#utility.yul\":4968:4971   */\n      0x80\n        /* \"#utility.yul\":4953:4972   */\n      add\n      swap1\n        /* \"#utility.yul\":4746:4978   */\n      jump\t// out\n        /* \"#utility.yul\":4983:5241   */\n    tag_124:\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5065:5178   */\n    tag_137:\n        /* \"#utility.yul\":5079:5085   */\n      dup4\n        /* \"#utility.yul\":5076:5077   */\n      dup2\n        /* \"#utility.yul\":5073:5086   */\n      lt\n        /* \"#utility.yul\":5065:5178   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":5155:5166   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5149:5167   */\n      mload\n        /* \"#utility.yul\":5136:5147   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5129:5168   */\n      mstore\n        /* \"#utility.yul\":5101:5103   */\n      0x20\n        /* \"#utility.yul\":5094:5104   */\n      add\n        /* \"#utility.yul\":5065:5178   */\n      jump(tag_137)\n    tag_139:\n        /* \"#utility.yul\":5196:5202   */\n      dup4\n        /* \"#utility.yul\":5193:5194   */\n      dup2\n        /* \"#utility.yul\":5190:5203   */\n      gt\n        /* \"#utility.yul\":5187:5189   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":5231:5232   */\n      0x00\n        /* \"#utility.yul\":5222:5228   */\n      dup5\n        /* \"#utility.yul\":5217:5220   */\n      dup5\n        /* \"#utility.yul\":5213:5229   */\n      add\n        /* \"#utility.yul\":5206:5233   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n    tag_140:\n      pop\n        /* \"#utility.yul\":5036:5241   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5379   */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5323:5354   */\n      dup2\n      and\n        /* \"#utility.yul\":5313:5355   */\n      dup2\n      eq\n        /* \"#utility.yul\":5303:5305   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5366:5367   */\n      dup1\n        /* \"#utility.yul\":5359:5371   */\n      revert\n\n    auxdata: 0xa2646970667358221220d717142fa0d759304638ba5fd41f1b42e7b406e03da307460b94d370c285ea7664736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61083d806100896000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632ab600451461006757806338a631831461007c578063715018a61461009a5780638da5cb5b146100a2578063b2118a8d146100aa578063f2fde38b146100bd575b600080fd5b61007a6100753660046104fa565b6100d0565b005b610084610188565b6040516100919190610592565b60405180910390f35b61007a610197565b6100846101e2565b61007a6100b8366004610536565b6101f1565b61007a6100cb3660046104fa565b610234565b6100d86102a5565b6001600160a01b03166100e96101e2565b6001600160a01b0316146101185760405162461bcd60e51b815260040161010f9061070c565b60405180910390fd5b6001600160a01b03811661013e5760405162461bcd60e51b815260040161010f90610638565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b6001546001600160a01b031690565b61019f6102a5565b6001600160a01b03166101b06101e2565b6001600160a01b0316146101d65760405162461bcd60e51b815260040161010f9061070c565b6101e060006102a9565b565b6000546001600160a01b031690565b6001546001600160a01b0316331461021b5760405162461bcd60e51b815260040161010f906106c8565b61022f6001600160a01b03841683836102f9565b505050565b61023c6102a5565b6001600160a01b031661024d6101e2565b6001600160a01b0316146102735760405162461bcd60e51b815260040161010f9061070c565b6001600160a01b0381166102995760405162461bcd60e51b815260040161010f906105f2565b6102a2816102a9565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61022f8363a9059cbb60e01b84846040516024016103189291906105a6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061039f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d99092919063ffffffff16565b80519091501561022f57808060200190518101906103bd9190610516565b61022f5760405162461bcd60e51b815260040161010f90610778565b60606103e884846000856103f2565b90505b9392505050565b6060824710156104145760405162461bcd60e51b815260040161010f90610682565b61041d856104b2565b6104395760405162461bcd60e51b815260040161010f90610741565b600080866001600160a01b031685876040516104559190610576565b60006040518083038185875af1925050503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b50915091506104a78282866104c1565b979650505050505050565b6001600160a01b03163b151590565b606083156104d05750816103eb565b8251156104e05782518084602001fd5b8160405162461bcd60e51b815260040161010f91906105bf565b60006020828403121561050b578081fd5b81356103eb816107f2565b600060208284031215610527578081fd5b815180151581146103eb578182fd5b60008060006060848603121561054a578182fd5b8335610555816107f2565b92506020840135610565816107f2565b929592945050506040919091013590565b600082516105888184602087016107c2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105de8160408501602087016107c2565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f526573637561626c653a206e6577207265736375657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526024908201527f526573637561626c653a2063616c6c6572206973206e6f74207468652072657360408201526331bab2b960e11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60005b838110156107dd5781810151838201526020016107c5565b838111156107ec576000848401525b50505050565b6001600160a01b03811681146102a257600080fdfea2646970667358221220d717142fa0d759304638ba5fd41f1b42e7b406e03da307460b94d370c285ea7664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x83D DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x197 JUMP JUMPDEST PUSH2 0x84 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE9 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B0 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x0 PUSH2 0x2A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x2F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x2A2 DUP2 PUSH2 0x2A9 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x22F DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x39F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x682 JUMP JUMPDEST PUSH2 0x41D DUP6 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x497 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4A7 DUP3 DUP3 DUP7 PUSH2 0x4C1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D0 JUMPI POP DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4E0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EB DUP2 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x527 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3EB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x54A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x555 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x565 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x588 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5DE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A206E6577207265736375657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A2063616C6C6572206973206E6F742074686520726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31BAB2B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 OR EQ 0x2F LOG0 0xD7 MSIZE ADDRESS CHAINID CODESIZE 0xBA 0x5F 0xD4 0x1F SHL TIMESTAMP 0xE7 0xB4 MOD 0xE0 RETURNDATASIZE LOG3 SMOD CHAINID SIGNEXTEND SWAP5 0xD3 PUSH17 0xC285EA7664736F6C634300080100330000 ",
							"sourceMap": "1334:1388:7:-:0;;;;;;;;;;;;-1:-1:-1;942:32:5;961:12;:10;:12::i;:::-;942:18;:32::i;:::-;1334:1388:7;;656:98:3;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;1334:1388:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5381:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:189:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nodeType": "YulIf",
															"src": "94:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "237:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "210:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "210:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "252:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "262:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:259:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "356:219:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "402:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "411:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "419:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "404:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "377:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "386:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "373:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "398:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "369:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:32:10"
															},
															"nodeType": "YulIf",
															"src": "366:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "437:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "456:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "450:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "450:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "441:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "519:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "528:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "536:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "521:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "521:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "521:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "488:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "509:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "502:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "502:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "495:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "495:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "485:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "485:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "478:40:10"
															},
															"nodeType": "YulIf",
															"src": "475:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "554:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "564:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "322:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "333:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "345:6:10",
														"type": ""
													}
												],
												"src": "278:297:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:366:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "744:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "753:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "761:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "746:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "746:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "719:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "728:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:32:10"
															},
															"nodeType": "YulIf",
															"src": "708:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "779:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "792:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "783:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "851:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "824:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "824:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "866:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "876:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "866:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "890:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "922:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "933:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "918:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "905:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "894:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "973:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "946:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "946:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "990:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1000:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1016:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1054:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1026:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1016:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$549t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "648:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "659:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "671:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "679:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "687:6:10",
														"type": ""
													}
												],
												"src": "580:484:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1206:137:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1216:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1236:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1220:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1278:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1274:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1293:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1298:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1252:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1314:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1325:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1321:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1182:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1187:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1198:3:10",
														"type": ""
													}
												],
												"src": "1069:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1459:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1467:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1467:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1459:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1516:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1532:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1537:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1528:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1528:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1418:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1429:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1440:4:10",
														"type": ""
													}
												],
												"src": "1348:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1685:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1695:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1707:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1695:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1737:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1768:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1773:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1764:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1764:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1777:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1760:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1760:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1748:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1801:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1812:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1797:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1790:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1646:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1657:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1665:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1676:4:10",
														"type": ""
													}
												],
												"src": "1556:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1956:262:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1973:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1984:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1966:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1996:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2016:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2010:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2000:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2059:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2101:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2109:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2118:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2129:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2114:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2114:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2075:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2075:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2150:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2166:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2185:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2193:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2181:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2181:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2202:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2198:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2198:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2177:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2177:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2209:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2150:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1925:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1936:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1947:4:10",
														"type": ""
													}
												],
												"src": "1835:383:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2397:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2414:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2407:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2407:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2407:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2448:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2459:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2437:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2498:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2503:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2476:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2558:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2569:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2554:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2574:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2547:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2547:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2547:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2592:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2615:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2592:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2374:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2388:4:10",
														"type": ""
													}
												],
												"src": "2223:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2821:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2832:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2814:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2844:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2894:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2905:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2890:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2890:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2910:34:10",
																		"type": "",
																		"value": "Rescuable: new rescuer is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2883:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2965:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2976:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2981:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3003:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3015:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3026:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3011:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3011:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3003:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2781:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2795:4:10",
														"type": ""
													}
												],
												"src": "2630:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3232:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3243:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3225:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3266:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3277:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3262:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3305:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3316:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3321:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3294:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3294:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3387:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3392:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3365:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3365:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3410:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3422:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3410:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3192:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3206:4:10",
														"type": ""
													}
												],
												"src": "3041:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3622:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3639:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3673:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3684:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3669:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3669:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3662:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3723:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3708:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3728:34:10",
																		"type": "",
																		"value": "Rescuable: caller is not the res"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3783:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3794:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3799:6:10",
																		"type": "",
																		"value": "cuer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3815:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3827:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3815:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3599:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3613:4:10",
														"type": ""
													}
												],
												"src": "3448:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4027:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4037:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4037:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4089:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4094:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4067:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4067:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4128:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4133:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4177:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4189:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4185:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4177:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4004:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4018:4:10",
														"type": ""
													}
												],
												"src": "3853:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4388:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4405:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4398:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4398:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4439:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4450:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4435:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4435:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4455:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4428:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4428:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4478:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4489:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4494:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4467:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4467:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4467:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4535:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4543:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4535:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4365:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4379:4:10",
														"type": ""
													}
												],
												"src": "4214:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4746:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4763:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4774:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4756:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4756:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4797:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4808:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4793:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4813:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4786:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4847:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4852:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4825:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4825:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4918:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4923:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4945:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4957:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4968:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4953:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4945:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4723:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4737:4:10",
														"type": ""
													}
												],
												"src": "4572:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5036:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5046:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5055:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5050:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5115:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5140:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5145:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5136:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5136:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5159:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5164:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5155:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5155:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5149:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5149:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5129:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5129:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5129:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5076:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5079:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5073:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5073:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5087:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5089:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5098:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5094:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5069:3:10",
																"statements": []
															},
															"src": "5065:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5204:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5217:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5222:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5213:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5213:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5231:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5206:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5206:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5193:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5196:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:13:10"
															},
															"nodeType": "YulIf",
															"src": "5187:2:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5014:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5019:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5024:6:10",
														"type": ""
													}
												],
												"src": "4983:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5293:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5359:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5316:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5327:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5342:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5347:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "5338:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5338:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5351:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "5334:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5334:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5323:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5323:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5313:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5313:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5306:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5306:50:10"
															},
															"nodeType": "YulIf",
															"src": "5303:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5282:5:10",
														"type": ""
													}
												],
												"src": "5246:133:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$549t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Rescuable: new rescuer is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Rescuable: caller is not the res\")\n        mstore(add(headStart, 96), \"cuer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80632ab600451461006757806338a631831461007c578063715018a61461009a5780638da5cb5b146100a2578063b2118a8d146100aa578063f2fde38b146100bd575b600080fd5b61007a6100753660046104fa565b6100d0565b005b610084610188565b6040516100919190610592565b60405180910390f35b61007a610197565b6100846101e2565b61007a6100b8366004610536565b6101f1565b61007a6100cb3660046104fa565b610234565b6100d86102a5565b6001600160a01b03166100e96101e2565b6001600160a01b0316146101185760405162461bcd60e51b815260040161010f9061070c565b60405180910390fd5b6001600160a01b03811661013e5760405162461bcd60e51b815260040161010f90610638565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b6001546001600160a01b031690565b61019f6102a5565b6001600160a01b03166101b06101e2565b6001600160a01b0316146101d65760405162461bcd60e51b815260040161010f9061070c565b6101e060006102a9565b565b6000546001600160a01b031690565b6001546001600160a01b0316331461021b5760405162461bcd60e51b815260040161010f906106c8565b61022f6001600160a01b03841683836102f9565b505050565b61023c6102a5565b6001600160a01b031661024d6101e2565b6001600160a01b0316146102735760405162461bcd60e51b815260040161010f9061070c565b6001600160a01b0381166102995760405162461bcd60e51b815260040161010f906105f2565b6102a2816102a9565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61022f8363a9059cbb60e01b84846040516024016103189291906105a6565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152600061039f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103d99092919063ffffffff16565b80519091501561022f57808060200190518101906103bd9190610516565b61022f5760405162461bcd60e51b815260040161010f90610778565b60606103e884846000856103f2565b90505b9392505050565b6060824710156104145760405162461bcd60e51b815260040161010f90610682565b61041d856104b2565b6104395760405162461bcd60e51b815260040161010f90610741565b600080866001600160a01b031685876040516104559190610576565b60006040518083038185875af1925050503d8060008114610492576040519150601f19603f3d011682016040523d82523d6000602084013e610497565b606091505b50915091506104a78282866104c1565b979650505050505050565b6001600160a01b03163b151590565b606083156104d05750816103eb565b8251156104e05782518084602001fd5b8160405162461bcd60e51b815260040161010f91906105bf565b60006020828403121561050b578081fd5b81356103eb816107f2565b600060208284031215610527578081fd5b815180151581146103eb578182fd5b60008060006060848603121561054a578182fd5b8335610555816107f2565b92506020840135610565816107f2565b929592945050506040919091013590565b600082516105888184602087016107c2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105de8160408501602087016107c2565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602a908201527f526573637561626c653a206e6577207265736375657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526024908201527f526573637561626c653a2063616c6c6572206973206e6f74207468652072657360408201526331bab2b960e11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60005b838110156107dd5781810151838201526020016107c5565b838111156107ec576000848401525b50505050565b6001600160a01b03811681146102a257600080fdfea2646970667358221220d717142fa0d759304638ba5fd41f1b42e7b406e03da307460b94d370c285ea7664736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x84 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91 SWAP2 SWAP1 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0x197 JUMP JUMPDEST PUSH2 0x84 PUSH2 0x1E2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x536 JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xCB CALLDATASIZE PUSH1 0x4 PUSH2 0x4FA JUMP JUMPDEST PUSH2 0x234 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE9 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x118 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x638 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B0 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x0 PUSH2 0x2A9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x21B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x22F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x2F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x23C PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x24D PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x2A2 DUP2 PUSH2 0x2A9 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x22F DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x39F DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3D9 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x22F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3E8 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x414 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x682 JUMP JUMPDEST PUSH2 0x41D DUP6 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x497 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4A7 DUP3 DUP3 DUP7 PUSH2 0x4C1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D0 JUMPI POP DUP2 PUSH2 0x3EB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4E0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x50B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EB DUP2 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x527 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3EB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x54A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x555 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x565 DUP2 PUSH2 0x7F2 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x588 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x7C2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x5DE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A206E6577207265736375657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A2063616C6C6572206973206E6F742074686520726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31BAB2B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x7EC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 OR EQ 0x2F LOG0 0xD7 MSIZE ADDRESS CHAINID CODESIZE 0xBA 0x5F 0xD4 0x1F SHL TIMESTAMP 0xE7 0xB4 MOD 0xE0 RETURNDATASIZE LOG3 SMOD CHAINID SIGNEXTEND SWAP5 0xD3 PUSH17 0xC285EA7664736F6C634300080100330000 ",
							"sourceMap": "1334:1388:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:271;;;;;;:::i;:::-;;:::i;:::-;;1588:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1714:103:5;;;:::i;1063:87::-;;;:::i;2131:183:7:-;;;;;;:::i;:::-;;:::i;1972:201:5:-;;;;;;:::i;:::-;;:::i;2448:271:7:-;1294:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2543:24:7;::::1;2521:116;;;;-1:-1:-1::0;;;2521:116:7::1;;;;;;;:::i;:::-;2648:8;:21:::0;;-1:-1:-1;;;;;;2648:21:7::1;-1:-1:-1::0;;;;;2648:21:7;::::1;::::0;;::::1;::::0;;;2685:26:::1;::::0;::::1;::::0;-1:-1:-1;;2685:26:7::1;2448:271:::0;:::o;1588:85::-;1657:8;;-1:-1:-1;;;;;1657:8:7;1588:85;:::o;1714:103:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;1063:87::-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:5;1063:87;:::o;2131:183:7:-;1827:8;;-1:-1:-1;;;;;1827:8:7;1813:10;:22;1805:71;;;;-1:-1:-1;;;1805:71:7;;;;;;;:::i;:::-;2268:38:::1;-1:-1:-1::0;;;;;2268:26:7;::::1;2295:2:::0;2299:6;2268:26:::1;:38::i;:::-;2131:183:::0;;;:::o;1972:201:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:5;::::1;2053:73;;;;-1:-1:-1::0;;;2053:73:5::1;;;;;;;:::i;:::-;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;656:98:3:-;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;707:211:8:-;824:86;844:5;874:23;;;899:2;903:5;851:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;851:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;851:58:8;-1:-1:-1;;;;;;851:58:8;;;;;;;;;;3704:23;3730:69;3758:4;3730:69;;;;;;;;;;;;;;;;;3738:5;-1:-1:-1;;;;;3730:27:8;;;:69;;;;;:::i;:::-;3814:17;;3704:95;;-1:-1:-1;3814:21:8;3810:179;;3911:10;3900:30;;;;;;;;;;;;:::i;:::-;3892:85;;;;-1:-1:-1;;;3892:85:8;;;;;;;:::i;3955:229:1:-;4092:12;4124:52;4146:6;4154:4;4160:1;4163:12;4124:21;:52::i;:::-;4117:59;;3955:229;;;;;;:::o;5075:510::-;5245:12;5303:5;5278:21;:30;;5270:81;;;;-1:-1:-1;;;5270:81:1;;;;;;;:::i;:::-;5370:18;5381:6;5370:10;:18::i;:::-;5362:60;;;;-1:-1:-1;;;5362:60:1;;;;;;;:::i;:::-;5436:12;5450:23;5477:6;-1:-1:-1;;;;;5477:11:1;5496:5;5503:4;5477:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:73;;;;5526:51;5543:7;5552:10;5564:12;5526:16;:51::i;:::-;5519:58;5075:510;-1:-1:-1;;;;;;;5075:510:1:o;1210:326::-;-1:-1:-1;;;;;1505:19:1;;:23;;;1210:326::o;7761:762::-;7911:12;7940:7;7936:580;;;-1:-1:-1;7971:10:1;7964:17;;7936:580;8085:17;;:21;8081:424;;8333:10;8327:17;8394:15;8381:10;8377:2;8373:19;8366:44;8281:148;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;14:259:10:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:297::-;;398:2;386:9;377:7;373:23;369:32;366:2;;;419:6;411;404:22;366:2;456:9;450:16;509:5;502:13;495:21;488:5;485:32;475:2;;536:6;528;521:22;580:484;;;;740:2;728:9;719:7;715:23;711:32;708:2;;;761:6;753;746:22;708:2;805:9;792:23;824:33;851:5;824:33;:::i;:::-;876:5;-1:-1:-1;933:2:10;918:18;;905:32;946:35;905:32;946:35;:::i;:::-;698:366;;1000:7;;-1:-1:-1;;;1054:2:10;1039:18;;;;1026:32;;698:366::o;1069:274::-;;1236:6;1230:13;1252:53;1298:6;1293:3;1286:4;1278:6;1274:17;1252:53;:::i;:::-;1321:16;;;;;1206:137;-1:-1:-1;;1206:137:10:o;1348:203::-;-1:-1:-1;;;;;1512:32:10;;;;1494:51;;1482:2;1467:18;;1449:102::o;1556:274::-;-1:-1:-1;;;;;1748:32:10;;;;1730:51;;1812:2;1797:18;;1790:34;1718:2;1703:18;;1685:145::o;1835:383::-;;1984:2;1973:9;1966:21;2016:6;2010:13;2059:6;2054:2;2043:9;2039:18;2032:34;2075:66;2134:6;2129:2;2118:9;2114:18;2109:2;2101:6;2097:15;2075:66;:::i;:::-;2202:2;2181:15;-1:-1:-1;;2177:29:10;2162:45;;;;2209:2;2158:54;;1956:262;-1:-1:-1;;1956:262:10:o;2223:402::-;2425:2;2407:21;;;2464:2;2444:18;;;2437:30;2503:34;2498:2;2483:18;;2476:62;-1:-1:-1;;;2569:2:10;2554:18;;2547:36;2615:3;2600:19;;2397:228::o;2630:406::-;2832:2;2814:21;;;2871:2;2851:18;;;2844:30;2910:34;2905:2;2890:18;;2883:62;-1:-1:-1;;;2976:2:10;2961:18;;2954:40;3026:3;3011:19;;2804:232::o;3041:402::-;3243:2;3225:21;;;3282:2;3262:18;;;3255:30;3321:34;3316:2;3301:18;;3294:62;-1:-1:-1;;;3387:2:10;3372:18;;3365:36;3433:3;3418:19;;3215:228::o;3448:400::-;3650:2;3632:21;;;3689:2;3669:18;;;3662:30;3728:34;3723:2;3708:18;;3701:62;-1:-1:-1;;;3794:2:10;3779:18;;3772:34;3838:3;3823:19;;3622:226::o;3853:356::-;4055:2;4037:21;;;4074:18;;;4067:30;4133:34;4128:2;4113:18;;4106:62;4200:2;4185:18;;4027:182::o;4214:353::-;4416:2;4398:21;;;4455:2;4435:18;;;4428:30;4494:31;4489:2;4474:18;;4467:59;4558:2;4543:18;;4388:179::o;4572:406::-;4774:2;4756:21;;;4813:2;4793:18;;;4786:30;4852:34;4847:2;4832:18;;4825:62;-1:-1:-1;;;4918:2:10;4903:18;;4896:40;4968:3;4953:19;;4746:232::o;4983:258::-;5055:1;5065:113;5079:6;5076:1;5073:13;5065:113;;;5155:11;;;5149:18;5136:11;;;5129:39;5101:2;5094:10;5065:113;;;5196:6;5193:1;5190:13;5187:2;;;5231:1;5222:6;5217:3;5213:16;5206:27;5187:2;;5036:205;;;:::o;5246:133::-;-1:-1:-1;;;;;5323:31:10;;5313:42;;5303:2;;5369:1;5366;5359:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "421800",
								"executionCost": "22923",
								"totalCost": "444723"
							},
							"external": {
								"owner()": "1114",
								"renounceOwnership()": "23526",
								"rescueERC20(address,address,uint256)": "infinite",
								"rescuer()": "1070",
								"transferOwnership(address)": "infinite",
								"updateRescuer(address)": "23247"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1334,
									"end": 2722,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d717142fa0d759304638ba5fd41f1b42e7b406e03da307460b94d370c285ea7664736f6c63430008010033",
									".code": [
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "2AB60045"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "38A63183"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "B2118A8D"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 2722,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "E475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A"
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1835,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 707,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 824,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 899,
											"end": 901,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 903,
											"end": 908,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4175,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4124,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5257,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5308,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5576,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5577,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7761,
											"end": 8523,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7761,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7911,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7940,
											"end": 7947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7971,
											"end": 7981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7964,
											"end": 7981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8081,
											"end": 8505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8381,
											"end": 8391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8429,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8281,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 273,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 237,
											"end": 242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 210,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 210,
											"end": 243,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 278,
											"end": 575,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 278,
											"end": 575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 278,
											"end": 575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 400,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 377,
											"end": 384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 373,
											"end": 396,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 369,
											"end": 401,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 366,
											"end": 368,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 366,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 417,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 404,
											"end": 426,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 366,
											"end": 368,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 456,
											"end": 465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 450,
											"end": 466,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 509,
											"end": 514,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 502,
											"end": 515,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 495,
											"end": 516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 488,
											"end": 493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 485,
											"end": 517,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 475,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 475,
											"end": 477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 536,
											"end": 542,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 521,
											"end": 543,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 580,
											"end": 1064,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 580,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 1064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 1064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 1064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 715,
											"end": 738,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 711,
											"end": 743,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 708,
											"end": 710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 708,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 708,
											"end": 710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 761,
											"end": 767,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 746,
											"end": 768,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 708,
											"end": 710,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 708,
											"end": 710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 792,
											"end": 815,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 824,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 824,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 824,
											"end": 857,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 857,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 824,
											"end": 857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 881,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 933,
											"end": 935,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 936,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 918,
											"end": 936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 905,
											"end": 937,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 946,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 905,
											"end": 937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 946,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 946,
											"end": 981,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 981,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 946,
											"end": 981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 698,
											"end": 1064,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 698,
											"end": 1064,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1007,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1058,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1026,
											"end": 1058,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 698,
											"end": 1064,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1069,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1069,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1236,
											"end": 1242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1243,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1296,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1274,
											"end": 1291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1252,
											"end": 1305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1305,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 1252,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1206,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1343,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1348,
											"end": 1551,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1348,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1545,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1467,
											"end": 1485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1449,
											"end": 1551,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1830,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1556,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1730,
											"end": 1781,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1812,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1721,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1830,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1835,
											"end": 2218,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1835,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1835,
											"end": 2218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1984,
											"end": 1986,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2010,
											"end": 2023,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2059,
											"end": 2065,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2066,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2114,
											"end": 2132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2111,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2075,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2075,
											"end": 2141,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2075,
											"end": 2141,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2075,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2204,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2181,
											"end": 2196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2177,
											"end": 2206,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2207,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2162,
											"end": 2207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2212,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1956,
											"end": 2218,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2223,
											"end": 2625,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2223,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2428,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2437,
											"end": 2467,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2537,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2498,
											"end": 2500,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2538,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2554,
											"end": 2572,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2547,
											"end": 2583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2615,
											"end": 2618,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2397,
											"end": 2625,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2630,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2630,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2814,
											"end": 2835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2844,
											"end": 2874,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 2944,
											"name": "PUSH",
											"source": 10,
											"value": "526573637561626C653A206E6577207265736375657220697320746865207A65"
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2890,
											"end": 2908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2883,
											"end": 2945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 2978,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 2994,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3026,
											"end": 3029,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3011,
											"end": 3030,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 3036,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3041,
											"end": 3443,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3041,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3243,
											"end": 3245,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3262,
											"end": 3280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3255,
											"end": 3285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3321,
											"end": 3355,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 3316,
											"end": 3318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3294,
											"end": 3356,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3401,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3215,
											"end": 3443,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3448,
											"end": 3848,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3448,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3653,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3689,
											"end": 3691,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3728,
											"end": 3762,
											"name": "PUSH",
											"source": 10,
											"value": "526573637561626C653A2063616C6C6572206973206E6F742074686520726573"
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3701,
											"end": 3763,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31BAB2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 3796,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3841,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3823,
											"end": 3842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3842,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3848,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3853,
											"end": 4209,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3853,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4167,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4202,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4027,
											"end": 4209,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4214,
											"end": 4567,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 4214,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4398,
											"end": 4419,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4435,
											"end": 4453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4458,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4494,
											"end": 4525,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4526,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4567,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4572,
											"end": 4978,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4572,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4774,
											"end": 4776,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4756,
											"end": 4777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4756,
											"end": 4777,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4813,
											"end": 4815,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4852,
											"end": 4886,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 4847,
											"end": 4849,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4887,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4920,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4896,
											"end": 4936,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4968,
											"end": 4971,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4953,
											"end": 4972,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4953,
											"end": 4972,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4978,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4983,
											"end": 5241,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 4983,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5086,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5155,
											"end": 5166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5149,
											"end": 5167,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5147,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5101,
											"end": 5103,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5065,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5193,
											"end": 5194,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5190,
											"end": 5203,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5220,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5213,
											"end": 5229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5206,
											"end": 5233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5241,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5246,
											"end": 5379,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5246,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5323,
											"end": 5354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5323,
											"end": 5354,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5313,
											"end": 5355,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5303,
											"end": 5305,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rescueERC20(address,address,uint256)": "b2118a8d",
							"rescuer()": "38a63183",
							"transferOwnership(address)": "f2fde38b",
							"updateRescuer(address)": "2ab60045"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"RescuerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"updateRescuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescueERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Recipient address\",\"tokenContract\":\"ERC20 token contract address\"}},\"rescuer()\":{\"returns\":{\"_0\":\"Rescuer's address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRescuer(address)\":{\"params\":{\"newRescuer\":\"New rescuer's address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"rescueERC20(address,address,uint256)\":{\"notice\":\"Rescue ERC20 tokens locked up in this contract.\"},\"rescuer()\":{\"notice\":\"Returns current rescuer\"},\"updateRescuer(address)\":{\"notice\":\"Assign the rescuer role to a given address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Rescuable.sol\":\"Rescuable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0xf33245569f718dfb2958ee7e2015cd2112e9227803a5996ef89900a30d7698f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c891820b284a26f6d99811c7c37f7b430e07e98938b14940738e8b154ff54b\",\"dweb:/ipfs/QmaJ338qmrvWWRXtZKZqPc3cGT8wVH1inM5WgFtHfkMexg\"]},\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]},\"Rescuable.sol\":{\"keccak256\":\"0xe87b5fd6bc0f76c64c00ae67a1c48f3d165ff0e1b812fc0466166a431f4ba4ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80c6b6697a165386f11f05e503e23dd9431b22a351d7b905dca300c340a85587\",\"dweb:/ipfs/Qmb8Dm61grnN7TNuDKdbUjf8iAt2eT22hmdDiiDWgDDB5m\"]},\"SafeERC20.sol\":{\"keccak256\":\"0x252eafa9493f55739d597c91ac57367d2b748a259cc2fdaded507257fef821f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4871e6a10c357d24417a53e7e32d1f59518defb67ff4c2c16793ee4efef3a25\",\"dweb:/ipfs/QmYejDVZjHoeaqTx4ueia3x6EkvPUMdNvLsYD5mxzt6GA5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 557,
								"contract": "Rescuable.sol:Rescuable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 785,
								"contract": "Rescuable.sol:Rescuable",
								"label": "_rescuer",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"rescueERC20(address,address,uint256)": {
								"notice": "Rescue ERC20 tokens locked up in this contract."
							},
							"rescuer()": {
								"notice": "Returns current rescuer"
							},
							"updateRescuer(address)": {
								"notice": "Assign the rescuer role to a given address."
							}
						},
						"version": 1
					}
				}
			},
			"SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SafeERC20.sol\":648:3999  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeERC20.sol\":648:3999  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207b7cd5cbc88e403ddcafaa9d84367be05fc7fa511bdaadea6cf0a2eeb74c3df164736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7cd5cbc88e403ddcafaa9d84367be05fc7fa511bdaadea6cf0a2eeb74c3df164736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7CD5CBC88E403DDCAFAA9D84367BE05FC7FA511BDAADEA6CF0A2EEB7 0x4C RETURNDATASIZE CALL PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "648:3351:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;648:3351:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207b7cd5cbc88e403ddcafaa9d84367be05fc7fa511bdaadea6cf0a2eeb74c3df164736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x7CD5CBC88E403DDCAFAA9D84367BE05FC7FA511BDAADEA6CF0A2EEB7 0x4C RETURNDATASIZE CALL PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "648:3351:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 648,
									"end": 3999,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b7cd5cbc88e403ddcafaa9d84367be05fc7fa511bdaadea6cf0a2eeb74c3df164736f6c63430008010033",
									".code": [
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 648,
											"end": 3999,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Address.sol\":{\"keccak256\":\"0xf33245569f718dfb2958ee7e2015cd2112e9227803a5996ef89900a30d7698f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c891820b284a26f6d99811c7c37f7b430e07e98938b14940738e8b154ff54b\",\"dweb:/ipfs/QmaJ338qmrvWWRXtZKZqPc3cGT8wVH1inM5WgFtHfkMexg\"]},\"IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"SafeERC20.sol\":{\"keccak256\":\"0x252eafa9493f55739d597c91ac57367d2b748a259cc2fdaded507257fef821f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4871e6a10c357d24417a53e7e32d1f59518defb67ff4c2c16793ee4efef3a25\",\"dweb:/ipfs/QmYejDVZjHoeaqTx4ueia3x6EkvPUMdNvLsYD5mxzt6GA5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"USDm.sol": {
				"USDm": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBlacklister",
									"type": "address"
								}
							],
							"name": "BlacklisterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "burner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newMasterMinter",
									"type": "address"
								}
							],
							"name": "MasterMinterChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "masterMinter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "MintByMaster",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minterAllowedAmount",
									"type": "uint256"
								}
							],
							"name": "MinterConfigured",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldMinter",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "PauserChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "RescuerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "UnBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blacklister",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "minterAllowedAmount",
									"type": "uint256"
								}
							],
							"name": "configureMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currency",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenCurrency",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "tokenDecimals",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "newMasterMinter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newPauser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newBlacklister",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "masterMinter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "minterAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "minter",
									"type": "address"
								}
							],
							"name": "removeMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rescuer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "unBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBlacklister",
									"type": "address"
								}
							],
							"name": "updateBlacklister",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newMasterMinter",
									"type": "address"
								}
							],
							"name": "updateMasterMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRescuer",
									"type": "address"
								}
							],
							"name": "updateRescuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 Token backed by fiat reserves",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "Token owner's address",
									"spender": "Spender's address"
								},
								"returns": {
									"_0": "Allowance amount"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"spender": "Spender's address",
									"value": "Allowance amount"
								},
								"returns": {
									"_0": "True if successful"
								}
							},
							"balanceOf(address)": {
								"details": "Get token balance of an account",
								"params": {
									"account": "address The account"
								}
							},
							"blacklist(address)": {
								"details": "Adds account to blacklist",
								"params": {
									"_account": "The address to blacklist"
								}
							},
							"burn(uint256)": {
								"details": "allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance",
								"params": {
									"_amount": "uint256 the amount of tokens to be burned"
								}
							},
							"configureMinter(address,uint256)": {
								"details": "Function to add/update a new minter",
								"params": {
									"minter": "The address of the minter",
									"minterAllowedAmount": "The minting amount allowed for the minter"
								},
								"returns": {
									"_0": "True if the operation was successful."
								}
							},
							"isBlacklisted(address)": {
								"details": "Checks if account is blacklisted",
								"params": {
									"_account": "The address to check"
								}
							},
							"isMinter(address)": {
								"details": "Checks if account is a minter",
								"params": {
									"account": "The address to check"
								}
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens",
								"params": {
									"_amount": "The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.",
									"_to": "The address that will receive the minted tokens."
								},
								"returns": {
									"_0": "A boolean that indicates if the operation was successful."
								}
							},
							"minterAllowance(address)": {
								"details": "Get minter allowance for an account",
								"params": {
									"minter": "The address of the minter"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeMinter(address)": {
								"details": "Function to remove a minter",
								"params": {
									"minter": "The address of the minter to remove"
								},
								"returns": {
									"_0": "True if the operation was successful."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"rescueERC20(address,address,uint256)": {
								"params": {
									"amount": "Amount to withdraw",
									"to": "Recipient address",
									"tokenContract": "ERC20 token contract address"
								}
							},
							"rescuer()": {
								"returns": {
									"_0": "Rescuer's address"
								}
							},
							"totalSupply()": {
								"details": "Get totalSupply of token"
							},
							"transfer(address,uint256)": {
								"params": {
									"to": "Payee's address",
									"value": "Transfer amount"
								},
								"returns": {
									"_0": "True if successful"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"from": "Payer's address",
									"to": "Payee's address",
									"value": "Transfer amount"
								},
								"returns": {
									"_0": "True if successful"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unBlacklist(address)": {
								"details": "Removes account from blacklist",
								"params": {
									"_account": "The address to remove from the blacklist"
								}
							},
							"updateRescuer(address)": {
								"params": {
									"newRescuer": "New rescuer's address"
								}
							}
						},
						"title": "USDm",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"USDm.sol\":1417:11890  contract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r... */\n  mstore(0x40, 0x80)\n    /* \"USDm.sol\":1833:1834  0 */\n  0x00\n    /* \"USDm.sol\":1801:1834  uint256 internal totalSupply_ = 0 */\n  0x0c\n  sstore\n    /* \"USDm.sol\":1417:11890  contract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  tag_6\n    /* \"Ownable.sol\":961:971  _msgSender */\n  tag_7\n    /* \"Ownable.sol\":961:973  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"Ownable.sol\":942:960  _transferOwnership */\n  tag_8\n    /* \"Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"Pausable.sol\":1091:1098  _paused */\n  0x01\n    /* \"Pausable.sol\":1091:1106  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"USDm.sol\":1417:11890  contract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r... */\n  jump(tag_10)\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\ntag_7:\n    /* \"Context.sol\":736:746  msg.sender */\n  caller\n    /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_8:\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2426:2432  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"Ownable.sol\":2426:2432  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"Ownable.sol\":2407:2423  address oldOwner */\n  swap1\n    /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"USDm.sol\":1417:11890  contract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"USDm.sol\":1417:11890  contract USDm is AbstractUSDm, Ownable, Pausable, Blacklistable, Rescuable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xad38bf22\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe5a6b10f\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe5a6b10f\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xad38bf22\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb2118a8d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xbd102430\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x9fd0506d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x9fd0506d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xaa20e1e4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8a6db9c3\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x3357162b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4e44d956\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x3357162b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35d99f35\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x38a63183\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x23b872dd\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ab60045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3092afd5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1a895266\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"USDm.sol\":1501:1519  string public name */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"USDm.sol\":6890:7173  function approve(address spender, uint256 value)\r... */\n    tag_4:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"USDm.sol\":6273:6375  function totalSupply() external override view returns (uint256) {\r... */\n    tag_5:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n    tag_6:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"USDm.sol\":7977:8532  function transferFrom(\r... */\n    tag_7:\n      tag_46\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n    tag_8:\n      tag_56\n      tag_66\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"USDm.sol\":10493:10741  function removeMinter(address minter)\r... */\n    tag_9:\n      tag_46\n      tag_69\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"USDm.sol\":1553:1574  uint8 public decimals */\n    tag_10:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"USDm.sol\":2375:3557  function initialize(\r... */\n    tag_11:\n      tag_56\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n        /* \"USDm.sol\":1610:1637  address public masterMinter */\n    tag_12:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n    tag_13:\n      tag_80\n      tag_85\n      jump\t// in\n        /* \"USDm.sol\":4093:5035  function mint(address _to, uint256 _amount)\r... */\n    tag_14:\n      tag_46\n      tag_88\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"USDm.sol\":11038:11574  function burn(uint256 _amount)\r... */\n    tag_15:\n      tag_56\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"USDm.sol\":9970:10314  function configureMinter(address minter, uint256 minterAllowedAmount)\r... */\n    tag_16:\n      tag_46\n      tag_96\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"Pausable.sol\":1429:1515  function paused() public view virtual returns (bool) {\r... */\n    tag_17:\n      tag_46\n      tag_100\n      jump\t// in\n        /* \"USDm.sol\":6489:6650  function balanceOf(address account)\r... */\n    tag_18:\n      tag_52\n      tag_103\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_19:\n      tag_56\n      tag_107\n      jump\t// in\n        /* \"USDm.sol\":5428:5548  function minterAllowance(address minter) external view returns (uint256) {\r... */\n    tag_20:\n      tag_52\n      tag_109\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_21:\n      tag_80\n      tag_113\n      jump\t// in\n        /* \"USDm.sol\":1526:1546  string public symbol */\n    tag_22:\n      tag_42\n      tag_116\n      jump\t// in\n        /* \"Pausable.sol\":641:662  address public pauser */\n    tag_23:\n      tag_80\n      tag_119\n      jump\t// in\n        /* \"USDm.sol\":8715:8985  function transfer(address to, uint256 value)\r... */\n    tag_24:\n      tag_46\n      tag_122\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"USDm.sol\":11582:11887  function updateMasterMinter(address _newMasterMinter) external onlyOwner {\r... */\n    tag_25:\n      tag_56\n      tag_126\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"USDm.sol\":5661:5767  function isMinter(address account) external view returns (bool) {\r... */\n    tag_26:\n      tag_46\n      tag_129\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n    tag_27:\n      tag_56\n      tag_133\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n    tag_28:\n      tag_56\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"Blacklistable.sol\":1397:1423  address public blacklister */\n    tag_29:\n      tag_80\n      tag_140\n      jump\t// in\n        /* \"USDm.sol\":6027:6209  function allowance(address owner, address spender)\r... */\n    tag_30:\n      tag_52\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"USDm.sol\":1581:1603  string public currency */\n    tag_31:\n      tag_42\n      tag_148\n      jump\t// in\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_32:\n      tag_56\n      tag_151\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n    tag_33:\n      tag_56\n      tag_154\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n    tag_34:\n      tag_46\n      tag_157\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"USDm.sol\":1501:1519  string public name */\n    tag_43:\n      0x05\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_161\n      jump\t// in\n    tag_162:\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_164\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_163)\n    tag_164:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_165:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_165\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"USDm.sol\":6890:7173  function approve(address spender, uint256 value)\r... */\n    tag_49:\n        /* \"USDm.sol\":7085:7089  bool */\n      0x00\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_167\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_167:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"USDm.sol\":7022:7032  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":7058:7065  spender */\n      dup5\n      swap1\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_176:\n        /* \"USDm.sol\":7107:7143  _approve(msg.sender, spender, value) */\n      tag_179\n        /* \"USDm.sol\":7116:7126  msg.sender */\n      caller\n        /* \"USDm.sol\":7128:7135  spender */\n      dup7\n        /* \"USDm.sol\":7137:7142  value */\n      dup7\n        /* \"USDm.sol\":7107:7115  _approve */\n      tag_180\n        /* \"USDm.sol\":7107:7143  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_179:\n      pop\n        /* \"USDm.sol\":7161:7165  true */\n      0x01\n      swap5\n        /* \"USDm.sol\":6890:7173  function approve(address spender, uint256 value)\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"USDm.sol\":6273:6375  function totalSupply() external override view returns (uint256) {\r... */\n    tag_53:\n        /* \"USDm.sol\":6355:6367  totalSupply_ */\n      sload(0x0c)\n        /* \"USDm.sol\":6273:6375  function totalSupply() external override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n    tag_59:\n        /* \"Blacklistable.sol\":1815:1826  blacklister */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"Blacklistable.sol\":1801:1811  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":1801:1826  msg.sender == blacklister */\n      eq\n        /* \"Blacklistable.sol\":1779:1898  require(\r... */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_185\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      dup2\n      and\n        /* \"Blacklistable.sol\":2954:2959  false */\n      0x00\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2930:2941  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2930:2951  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Blacklistable.sol\":2930:2959  blacklisted[_account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":2975:2998  UnBlacklisted(_account) */\n      mload\n      0x117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e\n      swap2\n        /* \"Blacklistable.sol\":2954:2959  false */\n      swap1\n        /* \"Blacklistable.sol\":2975:2998  UnBlacklisted(_account) */\n      log2\n        /* \"Blacklistable.sol\":2855:3006  function unBlacklist(address _account) external onlyBlacklister {\r... */\n      pop\n      jump\t// out\n        /* \"USDm.sol\":7977:8532  function transferFrom(\r... */\n    tag_63:\n        /* \"USDm.sol\":8245:8249  bool */\n      0x00\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_188\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_188:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_189:\n        /* \"USDm.sol\":8157:8167  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":8193:8197  from */\n      dup6\n      swap1\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":8223:8225  to */\n      dup6\n      swap1\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":8298:8311  allowed[from] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":8298:8305  allowed */\n      0x0b\n        /* \"USDm.sol\":8298:8311  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":8312:8322  msg.sender */\n      caller\n        /* \"USDm.sol\":8298:8323  allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":8289:8323  value <= allowed[from][msg.sender] */\n      dup6\n      gt\n      iszero\n        /* \"USDm.sol\":8267:8391  require(\r... */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_203\n      jump\t// in\n    tag_201:\n        /* \"USDm.sol\":8402:8428  _transfer(from, to, value) */\n      tag_204\n        /* \"USDm.sol\":8412:8416  from */\n      dup8\n        /* \"USDm.sol\":8418:8420  to */\n      dup8\n        /* \"USDm.sol\":8422:8427  value */\n      dup8\n        /* \"USDm.sol\":8402:8411  _transfer */\n      tag_205\n        /* \"USDm.sol\":8402:8428  _transfer(from, to, value) */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":8467:8480  allowed[from] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":8467:8474  allowed */\n      0x0b\n        /* \"USDm.sol\":8467:8480  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":8481:8491  msg.sender */\n      caller\n        /* \"USDm.sol\":8467:8492  allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":8467:8502  allowed[from][msg.sender] - (value) */\n      tag_206\n      swap1\n        /* \"USDm.sol\":8496:8501  value */\n      dup7\n      swap1\n        /* \"USDm.sol\":8467:8502  allowed[from][msg.sender] - (value) */\n      tag_207\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":8439:8452  allowed[from] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":8439:8446  allowed */\n      0x0b\n        /* \"USDm.sol\":8439:8452  allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":8453:8463  msg.sender */\n      caller\n        /* \"USDm.sol\":8439:8464  allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"USDm.sol\":8439:8502  allowed[from][msg.sender] = allowed[from][msg.sender] - (value) */\n      sstore\n        /* \"USDm.sol\":8520:8524  true */\n      0x01\n      swap4\n      pop\n        /* \"Blacklistable.sol\":2217:2218  _ */\n      pop\n      pop\n        /* \"Pausable.sol\":1795:1796  _ */\n      pop\n        /* \"USDm.sol\":7977:8532  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n    tag_67:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_209\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_210\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_211\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_113\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_214\n      jump\t// in\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Rescuable.sol\":2543:2567  newRescuer != address(0) */\n      dup2\n      and\n        /* \"Rescuable.sol\":2521:2637  require(\r... */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_218\n      jump\t// in\n    tag_216:\n        /* \"Rescuable.sol\":2648:2656  _rescuer */\n      0x04\n        /* \"Rescuable.sol\":2648:2669  _rescuer = newRescuer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Rescuable.sol\":2685:2711  RescuerChanged(newRescuer) */\n      mload(0x40)\n      0xe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Rescuable.sol\":2448:2719  function updateRescuer(address newRescuer) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"USDm.sol\":10493:10741  function removeMinter(address minter)\r... */\n    tag_70:\n        /* \"USDm.sol\":5209:5221  masterMinter */\n      sload(0x09)\n        /* \"USDm.sol\":10593:10597  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":5209:5221  masterMinter */\n      and\n        /* \"USDm.sol\":5195:5205  msg.sender */\n      caller\n        /* \"USDm.sol\":5195:5221  msg.sender == masterMinter */\n      eq\n        /* \"USDm.sol\":5173:5285  require(\r... */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_222\n      jump\t// in\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":10615:10630  minters[minter] */\n      dup3\n      and\n        /* \"USDm.sol\":10633:10638  false */\n      0x00\n        /* \"USDm.sol\":10615:10630  minters[minter] */\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":10615:10622  minters */\n      0x0d\n        /* \"USDm.sol\":10615:10630  minters[minter] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":10615:10638  minters[minter] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"USDm.sol\":10649:10662  minterAllowed */\n      0x0e\n        /* \"USDm.sol\":10649:10670  minterAllowed[minter] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"USDm.sol\":10649:10674  minterAllowed[minter] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"USDm.sol\":10690:10711  MinterRemoved(minter) */\n      mload\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      swap2\n        /* \"USDm.sol\":10633:10638  false */\n      swap1\n        /* \"USDm.sol\":10690:10711  MinterRemoved(minter) */\n      log2\n      pop\n        /* \"USDm.sol\":10729:10733  true */\n      0x01\n        /* \"USDm.sol\":5296:5297  _ */\n    tag_223:\n        /* \"USDm.sol\":10493:10741  function removeMinter(address minter)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"USDm.sol\":1553:1574  uint8 public decimals */\n    tag_73:\n      and(0xff, sload(0x07))\n      dup2\n      jump\t// out\n        /* \"USDm.sol\":2375:3557  function initialize(\r... */\n    tag_79:\n        /* \"USDm.sol\":2689:2700  initialized */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"USDm.sol\":2688:2700  !initialized */\n      iszero\n        /* \"USDm.sol\":2680:2742  require(!initialized, \"USDm: contract is already initialized\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_227\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":2775:2804  newMasterMinter != address(0) */\n      dup5\n      and\n        /* \"USDm.sol\":2753:2874  require(\r... */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_230\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":2907:2930  newPauser != address(0) */\n      dup4\n      and\n        /* \"USDm.sol\":2885:2994  require(\r... */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_233\n      jump\t// in\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":3027:3055  newBlacklister != address(0) */\n      dup3\n      and\n        /* \"USDm.sol\":3005:3124  require(\r... */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_236\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":3157:3179  newOwner != address(0) */\n      dup2\n      and\n        /* \"USDm.sol\":3135:3242  require(\r... */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_239\n      jump\t// in\n    tag_237:\n        /* \"USDm.sol\":3255:3271  name = tokenName */\n      dup8\n      mload\n      tag_240\n      swap1\n        /* \"USDm.sol\":3255:3259  name */\n      0x05\n      swap1\n        /* \"USDm.sol\":3255:3271  name = tokenName */\n      0x20\n      dup12\n      add\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      pop\n        /* \"USDm.sol\":3282:3302  symbol = tokenSymbol */\n      dup7\n      mload\n      tag_242\n      swap1\n        /* \"USDm.sol\":3282:3288  symbol */\n      0x06\n      swap1\n        /* \"USDm.sol\":3282:3302  symbol = tokenSymbol */\n      0x20\n      dup11\n      add\n      swap1\n      tag_241\n      jump\t// in\n    tag_242:\n      pop\n        /* \"USDm.sol\":3313:3337  currency = tokenCurrency */\n      dup6\n      mload\n      tag_243\n      swap1\n        /* \"USDm.sol\":3313:3321  currency */\n      0x08\n      swap1\n        /* \"USDm.sol\":3313:3337  currency = tokenCurrency */\n      0x20\n      dup10\n      add\n      swap1\n      tag_241\n      jump\t// in\n    tag_243:\n      pop\n        /* \"USDm.sol\":3348:3356  decimals */\n      0x07\n        /* \"USDm.sol\":3348:3372  decimals = tokenDecimals */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"USDm.sol\":3383:3395  masterMinter */\n      0x09\n        /* \"USDm.sol\":3383:3413  masterMinter = newMasterMinter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"USDm.sol\":3424:3442  pauser = newPauser */\n      dup1\n      sload\n      dup3\n      and\n      dup7\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"USDm.sol\":3453:3464  blacklister */\n      0x02\n        /* \"USDm.sol\":3453:3481  blacklister = newBlacklister */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap2\n      dup5\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"USDm.sol\":3492:3520  _transferOwnership(newOwner) */\n      tag_244\n        /* \"USDm.sol\":3511:3519  newOwner */\n      dup2\n        /* \"USDm.sol\":3492:3510  _transferOwnership */\n      tag_245\n        /* \"USDm.sol\":3492:3520  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_244:\n      pop\n      pop\n        /* \"USDm.sol\":3531:3542  initialized */\n      0x09\n        /* \"USDm.sol\":3531:3549  initialized = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"USDm.sol\":2375:3557  function initialize(\r... */\n      jump\t// out\n        /* \"USDm.sol\":1610:1637  address public masterMinter */\n    tag_81:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n    tag_85:\n        /* \"Rescuable.sol\":1657:1665  _rescuer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"Rescuable.sol\":1588:1673  function rescuer() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"USDm.sol\":4093:5035  function mint(address _to, uint256 _amount)\r... */\n    tag_89:\n        /* \"USDm.sol\":4282:4286  bool */\n      0x00\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_248\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_248:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_249:\n        /* \"USDm.sol\":3698:3708  msg.sender */\n      caller\n        /* \"USDm.sol\":3690:3709  minters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":3690:3697  minters */\n      0x0d\n        /* \"USDm.sol\":3690:3709  minters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"USDm.sol\":3682:3742  require(minters[msg.sender], \"USDm: caller is not a minter\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_254\n      jump\t// in\n    tag_252:\n        /* \"USDm.sol\":4223:4233  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":4259:4262  _to */\n      dup5\n      swap1\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4312:4329  _to != address(0) */\n      dup6\n      and\n        /* \"USDm.sol\":4304:4364  require(_to != address(0), \"USDm: mint to the zero address\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_264\n      jump\t// in\n    tag_262:\n        /* \"USDm.sol\":4393:4394  0 */\n      0x00\n        /* \"USDm.sol\":4383:4390  _amount */\n      dup5\n        /* \"USDm.sol\":4383:4394  _amount > 0 */\n      gt\n        /* \"USDm.sol\":4375:4435  require(_amount > 0, \"USDm: mint amount not greater than 0\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_267\n      jump\t// in\n    tag_265:\n        /* \"USDm.sol\":4461:4473  masterMinter */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4454:4473  _to == masterMinter */\n      dup7\n      dup2\n      and\n        /* \"USDm.sol\":4461:4473  masterMinter */\n      swap2\n      and\n        /* \"USDm.sol\":4454:4473  _to == masterMinter */\n      eq\n        /* \"USDm.sol\":4446:4536  require(_to == masterMinter,\"USDm: Minters can only mint tokens to master minter address\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_270\n      jump\t// in\n    tag_268:\n        /* \"USDm.sol\":4594:4604  msg.sender */\n      caller\n        /* \"USDm.sol\":4549:4577  uint256 mintingAllowedAmount */\n      0x00\n        /* \"USDm.sol\":4580:4605  minterAllowed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":4580:4593  minterAllowed */\n      0x0e\n        /* \"USDm.sol\":4580:4605  minterAllowed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":4638:4669  _amount <= mintingAllowedAmount */\n      dup1\n      dup6\n      gt\n      iszero\n        /* \"USDm.sol\":4616:4738  require(\r... */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_273\n      jump\t// in\n    tag_271:\n        /* \"USDm.sol\":4781:4788  _amount */\n      dup5\n        /* \"USDm.sol\":4766:4778  totalSupply_ */\n      sload(0x0c)\n        /* \"USDm.sol\":4766:4788  totalSupply_ + _amount */\n      tag_274\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"USDm.sol\":4751:4763  totalSupply_ */\n      0x0c\n        /* \"USDm.sol\":4751:4788  totalSupply_ = totalSupply_ + _amount */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4815:4828  balances[_to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":4815:4823  balances */\n      0x0a\n        /* \"USDm.sol\":4815:4828  balances[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":4815:4838  balances[_to] + _amount */\n      tag_276\n      swap1\n        /* \"USDm.sol\":4831:4838  _amount */\n      dup7\n      swap1\n        /* \"USDm.sol\":4815:4838  balances[_to] + _amount */\n      tag_275\n      jump\t// in\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4799:4812  balances[_to] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":4799:4807  balances */\n      0x0a\n        /* \"USDm.sol\":4799:4812  balances[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"USDm.sol\":4799:4838  balances[_to] = balances[_to] + _amount */\n      sstore\n        /* \"USDm.sol\":4877:4909  mintingAllowedAmount - (_amount) */\n      tag_277\n        /* \"USDm.sol\":4901:4908  _amount */\n      dup6\n        /* \"USDm.sol\":4877:4897  mintingAllowedAmount */\n      dup3\n        /* \"USDm.sol\":4877:4909  mintingAllowedAmount - (_amount) */\n      tag_207\n      jump\t// in\n    tag_277:\n        /* \"USDm.sol\":4863:4873  msg.sender */\n      caller\n        /* \"USDm.sol\":4849:4874  minterAllowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":4849:4862  minterAllowed */\n      0x0e\n        /* \"USDm.sol\":4849:4874  minterAllowed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"USDm.sol\":4849:4909  minterAllowed[msg.sender] = mintingAllowedAmount - (_amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"USDm.sol\":4925:4955  Mint(msg.sender, _to, _amount) */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      and\n      swap2\n        /* \"USDm.sol\":4863:4873  msg.sender */\n      swap1\n        /* \"USDm.sol\":4925:4955  Mint(msg.sender, _to, _amount) */\n      0xab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8\n      swap1\n      tag_278\n      swap1\n        /* \"USDm.sol\":4947:4954  _amount */\n      dup10\n      swap1\n        /* \"USDm.sol\":4925:4955  Mint(msg.sender, _to, _amount) */\n      tag_55\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"USDm.sol\":4992:4995  _to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4971:5005  Transfer(address(0), _to, _amount) */\n      and\n        /* \"USDm.sol\":4988:4989  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":4971:5005  Transfer(address(0), _to, _amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"USDm.sol\":4997:5004  _amount */\n      dup8\n        /* \"USDm.sol\":4971:5005  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      tag_279\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"USDm.sol\":5023:5027  true */\n      0x01\n      swap6\n        /* \"USDm.sol\":4093:5035  function mint(address _to, uint256 _amount)\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"USDm.sol\":11038:11574  function burn(uint256 _amount)\r... */\n    tag_94:\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_281\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_281:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_282:\n        /* \"USDm.sol\":3698:3708  msg.sender */\n      caller\n        /* \"USDm.sol\":3690:3709  minters[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":3690:3697  minters */\n      0x0d\n        /* \"USDm.sol\":3690:3709  minters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"USDm.sol\":3682:3742  require(minters[msg.sender], \"USDm: caller is not a minter\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_254\n      jump\t// in\n    tag_285:\n        /* \"USDm.sol\":11155:11165  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_288:\n        /* \"USDm.sol\":11210:11220  msg.sender */\n      caller\n        /* \"USDm.sol\":11183:11198  uint256 balance */\n      0x00\n        /* \"USDm.sol\":11201:11221  balances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":11201:11209  balances */\n      0x0a\n        /* \"USDm.sol\":11201:11221  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":11240:11251  _amount > 0 */\n      dup3\n        /* \"USDm.sol\":11232:11292  require(_amount > 0, \"USDm: burn amount not greater than 0\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_293\n      jump\t// in\n    tag_291:\n        /* \"USDm.sol\":11322:11329  _amount */\n      dup3\n        /* \"USDm.sol\":11311:11318  balance */\n      dup2\n        /* \"USDm.sol\":11311:11329  balance >= _amount */\n      lt\n      iszero\n        /* \"USDm.sol\":11303:11367  require(balance >= _amount, \"USDm: burn amount exceeds balance\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_296\n      jump\t// in\n    tag_294:\n        /* \"USDm.sol\":11410:11417  _amount */\n      dup3\n        /* \"USDm.sol\":11395:11407  totalSupply_ */\n      sload(0x0c)\n        /* \"USDm.sol\":11395:11417  totalSupply_ - _amount */\n      tag_297\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_297:\n        /* \"USDm.sol\":11380:11392  totalSupply_ */\n      0x0c\n        /* \"USDm.sol\":11380:11417  totalSupply_ = totalSupply_ - _amount */\n      sstore\n        /* \"USDm.sol\":11451:11468  balance - _amount */\n      tag_298\n        /* \"USDm.sol\":11461:11468  _amount */\n      dup4\n        /* \"USDm.sol\":11451:11458  balance */\n      dup3\n        /* \"USDm.sol\":11451:11468  balance - _amount */\n      tag_207\n      jump\t// in\n    tag_298:\n        /* \"USDm.sol\":11437:11447  msg.sender */\n      caller\n        /* \"USDm.sol\":11428:11448  balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":11428:11436  balances */\n      0x0a\n        /* \"USDm.sol\":11428:11448  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"USDm.sol\":11428:11468  balances[msg.sender] = balance - _amount */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"USDm.sol\":11484:11509  Burn(msg.sender, _amount) */\n      swap1\n      mload\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap1\n      tag_299\n      swap1\n        /* \"USDm.sol\":11501:11508  _amount */\n      dup7\n      swap1\n        /* \"USDm.sol\":11484:11509  Burn(msg.sender, _amount) */\n      tag_55\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"USDm.sol\":11525:11566  Transfer(msg.sender, address(0), _amount) */\n      mload(0x40)\n        /* \"USDm.sol\":11554:11555  0 */\n      0x00\n      swap1\n        /* \"USDm.sol\":11534:11544  msg.sender */\n      caller\n      swap1\n        /* \"USDm.sol\":11525:11566  Transfer(msg.sender, address(0), _amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_300\n      swap1\n        /* \"USDm.sol\":11558:11565  _amount */\n      dup8\n      swap1\n        /* \"USDm.sol\":11525:11566  Transfer(msg.sender, address(0), _amount) */\n      tag_55\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Blacklistable.sol\":2217:2218  _ */\n      pop\n        /* \"USDm.sol\":3753:3754  _ */\n      pop\n        /* \"USDm.sol\":11038:11574  function burn(uint256 _amount)\r... */\n      pop\n      jump\t// out\n        /* \"USDm.sol\":9970:10314  function configureMinter(address minter, uint256 minterAllowedAmount)\r... */\n    tag_97:\n        /* \"USDm.sol\":10125:10129  bool */\n      0x00\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_302\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_302:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_303:\n        /* \"USDm.sol\":5209:5221  masterMinter */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"USDm.sol\":5195:5205  msg.sender */\n      caller\n        /* \"USDm.sol\":5195:5221  msg.sender == masterMinter */\n      eq\n        /* \"USDm.sol\":5173:5285  require(\r... */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_222\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":10147:10162  minters[minter] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":10147:10154  minters */\n      0x0d\n        /* \"USDm.sol\":10147:10162  minters[minter] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":10147:10169  minters[minter] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"USDm.sol\":10165:10169  true */\n      0x01\n        /* \"USDm.sol\":10147:10169  minters[minter] = true */\n      or\n      swap1\n      sstore\n        /* \"USDm.sol\":10180:10193  minterAllowed */\n      0x0e\n        /* \"USDm.sol\":10180:10201  minterAllowed[minter] */\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"USDm.sol\":10180:10223  minterAllowed[minter] = minterAllowedAmount */\n      dup5\n      swap1\n      sstore\n        /* \"USDm.sol\":10239:10284  MinterConfigured(minter, minterAllowedAmount) */\n      mload\n      0x46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d20\n      swap1\n      tag_309\n      swap1\n        /* \"USDm.sol\":10204:10223  minterAllowedAmount */\n      dup6\n      swap1\n        /* \"USDm.sol\":10239:10284  MinterConfigured(minter, minterAllowedAmount) */\n      tag_55\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n        /* \"USDm.sol\":10302:10306  true */\n      0x01\n        /* \"USDm.sol\":9970:10314  function configureMinter(address minter, uint256 minterAllowedAmount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Pausable.sol\":1429:1515  function paused() public view virtual returns (bool) {\r... */\n    tag_100:\n        /* \"Pausable.sol\":1500:1507  _paused */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"Pausable.sol\":1429:1515  function paused() public view virtual returns (bool) {\r... */\n      jump\t// out\n        /* \"USDm.sol\":6489:6650  function balanceOf(address account)\r... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":6625:6642  balances[account] */\n      and\n        /* \"USDm.sol\":6593:6600  uint256 */\n      0x00\n        /* \"USDm.sol\":6625:6642  balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":6625:6633  balances */\n      0x0a\n        /* \"USDm.sol\":6625:6642  balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"USDm.sol\":6489:6650  function balanceOf(address account)\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_107:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_313\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_210\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_314\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_113\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_214\n      jump\t// in\n    tag_315:\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      tag_318\n        /* \"Ownable.sol\":1806:1807  0 */\n      0x00\n        /* \"Ownable.sol\":1779:1797  _transferOwnership */\n      tag_245\n        /* \"Ownable.sol\":1779:1809  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_318:\n        /* \"Ownable.sol\":1714:1817  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"USDm.sol\":5428:5548  function minterAllowance(address minter) external view returns (uint256) {\r... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":5519:5540  minterAllowed[minter] */\n      and\n        /* \"USDm.sol\":5492:5499  uint256 */\n      0x00\n        /* \"USDm.sol\":5519:5540  minterAllowed[minter] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":5519:5532  minterAllowed */\n      0x0e\n        /* \"USDm.sol\":5519:5540  minterAllowed[minter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"USDm.sol\":5428:5548  function minterAllowance(address minter) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_113:\n        /* \"Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Ownable.sol\":1136:1142  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"USDm.sol\":1526:1546  string public symbol */\n    tag_116:\n      0x06\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n        /* \"Pausable.sol\":641:662  address public pauser */\n    tag_119:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"USDm.sol\":8715:8985  function transfer(address to, uint256 value)\r... */\n    tag_123:\n        /* \"USDm.sol\":8901:8905  bool */\n      0x00\n        /* \"Pausable.sol\":1755:1763  paused() */\n      tag_327\n        /* \"Pausable.sol\":1755:1761  paused */\n      tag_100\n        /* \"Pausable.sol\":1755:1763  paused() */\n      jump\t// in\n    tag_327:\n        /* \"Pausable.sol\":1754:1763  !paused() */\n      iszero\n        /* \"Pausable.sol\":1746:1784  require(!paused(), \"Pausable: paused\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_328:\n        /* \"USDm.sol\":8843:8853  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2120:2131  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":8879:8881  to */\n      dup5\n      swap1\n        /* \"Blacklistable.sol\":2120:2141  blacklisted[_account] */\n      0xff\n      and\n        /* \"Blacklistable.sol\":2119:2141  !blacklisted[_account] */\n      iszero\n        /* \"Blacklistable.sol\":2097:2206  require(\r... */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_174\n      jump\t// in\n    tag_334:\n        /* \"USDm.sol\":8923:8955  _transfer(msg.sender, to, value) */\n      tag_179\n        /* \"USDm.sol\":8933:8943  msg.sender */\n      caller\n        /* \"USDm.sol\":8945:8947  to */\n      dup7\n        /* \"USDm.sol\":8949:8954  value */\n      dup7\n        /* \"USDm.sol\":8923:8932  _transfer */\n      tag_205\n        /* \"USDm.sol\":8923:8955  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"USDm.sol\":11582:11887  function updateMasterMinter(address _newMasterMinter) external onlyOwner {\r... */\n    tag_127:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_339\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_210\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_340\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_113\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_214\n      jump\t// in\n    tag_341:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":11688:11718  _newMasterMinter != address(0) */\n      dup2\n      and\n        /* \"USDm.sol\":11666:11788  require(\r... */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_230\n      jump\t// in\n    tag_344:\n        /* \"USDm.sol\":11799:11811  masterMinter */\n      0x09\n        /* \"USDm.sol\":11799:11830  masterMinter = _newMasterMinter */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"USDm.sol\":11846:11879  MasterMinterChanged(masterMinter) */\n      mload(0x40)\n        /* \"USDm.sol\":11866:11878  masterMinter */\n      swap2\n      and\n      swap1\n        /* \"USDm.sol\":11846:11879  MasterMinterChanged(masterMinter) */\n      0xdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e6\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"USDm.sol\":11582:11887  function updateMasterMinter(address _newMasterMinter) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"USDm.sol\":5661:5767  function isMinter(address account) external view returns (bool) {\r... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":5743:5759  minters[account] */\n      and\n        /* \"USDm.sol\":5719:5723  bool */\n      0x00\n        /* \"USDm.sol\":5743:5759  minters[account] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":5743:5750  minters */\n      0x0d\n        /* \"USDm.sol\":5743:5759  minters[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"USDm.sol\":5661:5767  function isMinter(address account) external view returns (bool) {\r... */\n      jump\t// out\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n    tag_134:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_348\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_210\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_349\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_113\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_214\n      jump\t// in\n    tag_350:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":3118:3147  _newBlacklister != address(0) */\n      dup2\n      and\n        /* \"Blacklistable.sol\":3096:3225  require(\r... */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_355\n      jump\t// in\n    tag_353:\n        /* \"Blacklistable.sol\":3236:3247  blacklister */\n      0x02\n        /* \"Blacklistable.sol\":3236:3265  blacklister = _newBlacklister */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":3281:3312  BlacklisterChanged(blacklister) */\n      mload(0x40)\n        /* \"Blacklistable.sol\":3300:3311  blacklister */\n      swap2\n      and\n      swap1\n        /* \"Blacklistable.sol\":3281:3312  BlacklisterChanged(blacklister) */\n      0xc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Blacklistable.sol\":3014:3320  function updateBlacklister(address _newBlacklister) external onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n    tag_138:\n        /* \"Rescuable.sol\":1827:1835  _rescuer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"Rescuable.sol\":1813:1823  msg.sender */\n      caller\n        /* \"Rescuable.sol\":1813:1835  msg.sender == _rescuer */\n      eq\n        /* \"Rescuable.sol\":1805:1876  require(msg.sender == _rescuer, \"Rescuable: caller is not the rescuer\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_359\n      jump\t// in\n    tag_357:\n        /* \"Rescuable.sol\":2268:2306  tokenContract.safeTransfer(to, amount) */\n      tag_361\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Rescuable.sol\":2268:2294  tokenContract.safeTransfer */\n      dup5\n      and\n        /* \"Rescuable.sol\":2295:2297  to */\n      dup4\n        /* \"Rescuable.sol\":2299:2305  amount */\n      dup4\n        /* \"Rescuable.sol\":2268:2294  tokenContract.safeTransfer */\n      tag_362\n        /* \"Rescuable.sol\":2268:2306  tokenContract.safeTransfer(to, amount) */\n      jump\t// in\n    tag_361:\n        /* \"Rescuable.sol\":2131:2314  function rescueERC20(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":1397:1423  address public blacklister */\n    tag_140:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"USDm.sol\":6027:6209  function allowance(address owner, address spender)\r... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":6178:6192  allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"USDm.sol\":6146:6153  uint256 */\n      0x00\n        /* \"USDm.sol\":6178:6192  allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":6178:6185  allowed */\n      0x0b\n        /* \"USDm.sol\":6178:6192  allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":6178:6201  allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"USDm.sol\":6027:6209  function allowance(address owner, address spender)\r... */\n      jump\t// out\n        /* \"USDm.sol\":1581:1603  string public currency */\n    tag_148:\n      0x08\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_152:\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      tag_370\n        /* \"Ownable.sol\":1294:1304  _msgSender */\n      tag_210\n        /* \"Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n        /* \"Ownable.sol\":1283:1290  owner() */\n      tag_371\n        /* \"Ownable.sol\":1283:1288  owner */\n      tag_113\n        /* \"Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_371:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":1283:1306  owner() == _msgSender() */\n      and\n      eq\n        /* \"Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_214\n      jump\t// in\n    tag_372:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2061:2083  newOwner != address(0) */\n      dup2\n      and\n        /* \"Ownable.sol\":2053:2126  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_377\n      jump\t// in\n    tag_375:\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      tag_378\n        /* \"Ownable.sol\":2156:2164  newOwner */\n      dup2\n        /* \"Ownable.sol\":2137:2155  _transferOwnership */\n      tag_245\n        /* \"Ownable.sol\":2137:2165  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_378:\n        /* \"Ownable.sol\":1972:2173  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n    tag_155:\n        /* \"Blacklistable.sol\":1815:1826  blacklister */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"Blacklistable.sol\":1801:1811  msg.sender */\n      caller\n        /* \"Blacklistable.sol\":1801:1826  msg.sender == blacklister */\n      eq\n        /* \"Blacklistable.sol\":1779:1898  require(\r... */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_185\n      jump\t// in\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2647:2658  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Blacklistable.sol\":2647:2675  blacklisted[_account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Blacklistable.sol\":2671:2675  true */\n      0x01\n        /* \"Blacklistable.sol\":2647:2675  blacklisted[_account] = true */\n      or\n      swap1\n      sstore\n        /* \"Blacklistable.sol\":2691:2712  Blacklisted(_account) */\n      mload\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n      swap2\n        /* \"Blacklistable.sol\":2647:2668  blacklisted[_account] */\n      swap1\n        /* \"Blacklistable.sol\":2691:2712  Blacklisted(_account) */\n      log2\n        /* \"Blacklistable.sol\":2574:2720  function blacklist(address _account) external onlyBlacklister {\r... */\n      pop\n      jump\t// out\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      and\n        /* \"Blacklistable.sol\":2407:2411  bool */\n      0x00\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"Blacklistable.sol\":2431:2442  blacklisted */\n      0x03\n        /* \"Blacklistable.sol\":2431:2452  blacklisted[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Blacklistable.sol\":2343:2460  function isBlacklisted(address _account) external view returns (bool) {\r... */\n      jump\t// out\n        /* \"USDm.sol\":7379:7751  function _approve(\r... */\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":7515:7534  owner != address(0) */\n      dup4\n      and\n        /* \"USDm.sol\":7507:7575  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_387\n      jump\t// in\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":7594:7615  spender != address(0) */\n      dup3\n      and\n        /* \"USDm.sol\":7586:7654  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_390\n      jump\t// in\n    tag_388:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":7665:7679  allowed[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":7665:7672  allowed */\n      0x0b\n        /* \"USDm.sol\":7665:7679  allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"USDm.sol\":7665:7688  allowed[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"USDm.sol\":7665:7696  allowed[owner][spender] = value */\n      dup5\n      swap1\n      sstore\n        /* \"USDm.sol\":7712:7743  Approval(owner, spender, value) */\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_300\n      swap1\n        /* \"USDm.sol\":7691:7696  value */\n      dup6\n      swap1\n        /* \"USDm.sol\":7712:7743  Approval(owner, spender, value) */\n      tag_55\n      jump\t// in\n        /* \"USDm.sol\":9177:9716  function _transfer(\r... */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9308:9326  from != address(0) */\n      dup4\n      and\n        /* \"USDm.sol\":9300:9368  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_393\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_395\n      jump\t// in\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9387:9403  to != address(0) */\n      dup3\n      and\n        /* \"USDm.sol\":9379:9443  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_396\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_398\n      jump\t// in\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9485:9499  balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":9485:9493  balances */\n      0x0a\n        /* \"USDm.sol\":9485:9499  balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":9476:9499  value <= balances[from] */\n      dup2\n      gt\n      iszero\n        /* \"USDm.sol\":9454:9565  require(\r... */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_401\n      jump\t// in\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9595:9609  balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":9595:9603  balances */\n      0x0a\n        /* \"USDm.sol\":9595:9609  balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"USDm.sol\":9595:9619  balances[from] - (value) */\n      tag_402\n      swap1\n        /* \"USDm.sol\":9613:9618  value */\n      dup3\n      swap1\n        /* \"USDm.sol\":9595:9619  balances[from] - (value) */\n      tag_207\n      jump\t// in\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9578:9592  balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"USDm.sol\":9578:9586  balances */\n      0x0a\n        /* \"USDm.sol\":9578:9592  balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"USDm.sol\":9578:9619  balances[from] = balances[from] - (value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"USDm.sol\":9645:9657  balances[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"USDm.sol\":9645:9667  balances[to] + (value) */\n      tag_403\n      swap1\n        /* \"USDm.sol\":9661:9666  value */\n      dup3\n      swap1\n        /* \"USDm.sol\":9645:9667  balances[to] + (value) */\n      tag_275\n      jump\t// in\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"USDm.sol\":9630:9642  balances[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"USDm.sol\":9630:9638  balances */\n      0x0a\n        /* \"USDm.sol\":9630:9642  balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"USDm.sol\":9630:9667  balances[to] = balances[to] + (value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"USDm.sol\":9683:9708  Transfer(from, to, value) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_300\n      swap1\n        /* \"USDm.sol\":9702:9707  value */\n      dup6\n      swap1\n        /* \"USDm.sol\":9683:9708  Transfer(from, to, value) */\n      tag_55\n      jump\t// in\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_210:\n        /* \"Context.sol\":736:746  msg.sender */\n      caller\n        /* \"Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_245:\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2426:2432  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ownable.sol\":2443:2460  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"Ownable.sol\":2426:2432  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"Ownable.sol\":2407:2423  address oldOwner */\n      swap1\n        /* \"Ownable.sol\":2476:2516  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"Ownable.sol\":2333:2524  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"SafeERC20.sol\":707:918  function safeTransfer(\r... */\n    tag_362:\n        /* \"SafeERC20.sol\":824:910  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_361\n        /* \"SafeERC20.sol\":844:849  token */\n      dup4\n        /* \"SafeERC20.sol\":874:897  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"SafeERC20.sol\":899:901  to */\n      dup5\n        /* \"SafeERC20.sol\":903:908  value */\n      dup5\n        /* \"SafeERC20.sol\":851:909  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_409\n      swap3\n      swap2\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"SafeERC20.sol\":3704:3727  bytes memory returndata */\n      0x00\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_413\n        /* \"SafeERC20.sol\":3758:3762  data */\n      dup3\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"SafeERC20.sol\":3738:3743  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SafeERC20.sol\":3730:3757  address(token).functionCall */\n      and\n      tag_414\n      swap1\n        /* \"SafeERC20.sol\":3730:3799  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"SafeERC20.sol\":3814:3831  returndata.length */\n      dup1\n      mload\n        /* \"SafeERC20.sol\":3704:3799  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"SafeERC20.sol\":3814:3835  returndata.length > 0 */\n      iszero\n        /* \"SafeERC20.sol\":3810:3989  if (returndata.length > 0) {\r... */\n      tag_361\n      jumpi\n        /* \"SafeERC20.sol\":3911:3921  returndata */\n      dup1\n        /* \"SafeERC20.sol\":3900:3930  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_416\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"SafeERC20.sol\":3892:3977  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_420\n      jump\t// in\n        /* \"Address.sol\":3955:4184  function functionCall(\r... */\n    tag_414:\n        /* \"Address.sol\":4092:4104  bytes memory */\n      0x60\n        /* \"Address.sol\":4124:4176  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_422\n        /* \"Address.sol\":4146:4152  target */\n      dup5\n        /* \"Address.sol\":4154:4158  data */\n      dup5\n        /* \"Address.sol\":4160:4161  0 */\n      0x00\n        /* \"Address.sol\":4163:4175  errorMessage */\n      dup6\n        /* \"Address.sol\":4124:4145  functionCallWithValue */\n      tag_423\n        /* \"Address.sol\":4124:4176  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_422:\n        /* \"Address.sol\":4117:4176  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Address.sol\":3955:4184  function functionCall(\r... */\n    tag_421:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":5075:5585  function functionCallWithValue(\r... */\n    tag_423:\n        /* \"Address.sol\":5245:5257  bytes memory */\n      0x60\n        /* \"Address.sol\":5303:5308  value */\n      dup3\n        /* \"Address.sol\":5278:5299  address(this).balance */\n      selfbalance\n        /* \"Address.sol\":5278:5308  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Address.sol\":5270:5351  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_427\n      jump\t// in\n    tag_425:\n        /* \"Address.sol\":5370:5388  isContract(target) */\n      tag_428\n        /* \"Address.sol\":5381:5387  target */\n      dup6\n        /* \"Address.sol\":5370:5380  isContract */\n      tag_429\n        /* \"Address.sol\":5370:5388  isContract(target) */\n      jump\t// in\n    tag_428:\n        /* \"Address.sol\":5362:5422  require(isContract(target), \"Address: call to non-contract\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_432\n      jump\t// in\n    tag_430:\n        /* \"Address.sol\":5436:5448  bool success */\n      0x00\n        /* \"Address.sol\":5450:5473  bytes memory returndata */\n      dup1\n        /* \"Address.sol\":5477:5483  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Address.sol\":5477:5488  target.call */\n      and\n        /* \"Address.sol\":5496:5501  value */\n      dup6\n        /* \"Address.sol\":5503:5507  data */\n      dup8\n        /* \"Address.sol\":5477:5508  target.call{value: value}(data) */\n      mload(0x40)\n      tag_433\n      swap2\n      swap1\n      tag_434\n      jump\t// in\n    tag_433:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_437\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_436)\n    tag_437:\n      0x60\n      swap2\n      pop\n    tag_436:\n      pop\n        /* \"Address.sol\":5435:5508  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Address.sol\":5526:5577  verifyCallResult(success, returndata, errorMessage) */\n      tag_438\n        /* \"Address.sol\":5543:5550  success */\n      dup3\n        /* \"Address.sol\":5552:5562  returndata */\n      dup3\n        /* \"Address.sol\":5564:5576  errorMessage */\n      dup7\n        /* \"Address.sol\":5526:5542  verifyCallResult */\n      tag_439\n        /* \"Address.sol\":5526:5577  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_438:\n        /* \"Address.sol\":5519:5577  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"Address.sol\":5075:5585  function functionCallWithValue(\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n    tag_429:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Address.sol\":1505:1524  account.code.length */\n      and\n      extcodesize\n        /* \"Address.sol\":1505:1528  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"Address.sol\":1210:1536  function isContract(address account) internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"Address.sol\":7761:8523  function verifyCallResult(\r... */\n    tag_439:\n        /* \"Address.sol\":7911:7923  bytes memory */\n      0x60\n        /* \"Address.sol\":7940:7947  success */\n      dup4\n        /* \"Address.sol\":7936:8516  if (success) {\r... */\n      iszero\n      tag_442\n      jumpi\n      pop\n        /* \"Address.sol\":7971:7981  returndata */\n      dup2\n        /* \"Address.sol\":7964:7981  return returndata */\n      jump(tag_421)\n        /* \"Address.sol\":7936:8516  if (success) {\r... */\n    tag_442:\n        /* \"Address.sol\":8085:8102  returndata.length */\n      dup3\n      mload\n        /* \"Address.sol\":8085:8106  returndata.length > 0 */\n      iszero\n        /* \"Address.sol\":8081:8505  if (returndata.length > 0) {\r... */\n      tag_444\n      jumpi\n        /* \"Address.sol\":8333:8343  returndata */\n      dup3\n        /* \"Address.sol\":8327:8344  mload(returndata) */\n      mload\n        /* \"Address.sol\":8394:8409  returndata_size */\n      dup1\n        /* \"Address.sol\":8381:8391  returndata */\n      dup5\n        /* \"Address.sol\":8377:8379  32 */\n      0x20\n        /* \"Address.sol\":8373:8392  add(32, returndata) */\n      add\n        /* \"Address.sol\":8366:8410  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Address.sol\":8281:8429  {\r... */\n    tag_444:\n        /* \"Address.sol\":8476:8488  errorMessage */\n      dup2\n        /* \"Address.sol\":8469:8489  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_241:\n      dup3\n      dup1\n      sload\n      tag_447\n      swap1\n      tag_161\n      jump\t// in\n    tag_447:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_449\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_452)\n    tag_449:\n      dup3\n      0x1f\n      lt\n      tag_450\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_452)\n    tag_450:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_452\n      jumpi\n      swap2\n      dup3\n      add\n    tag_451:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_452\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_451)\n    tag_452:\n      pop\n      tag_453\n      swap3\n      swap2\n      pop\n      tag_454\n      jump\t// in\n    tag_453:\n      pop\n      swap1\n      jump\t// out\n    tag_454:\n    tag_455:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_453\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_455)\n        /* \"#utility.yul\":14:152   */\n    tag_458:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":113:146   */\n      tag_223\n        /* \"#utility.yul\":84:104   */\n      dup2\n        /* \"#utility.yul\":113:146   */\n      tag_461\n      jump\t// in\n        /* \"#utility.yul\":157:898   */\n    tag_462:\n      0x00\n        /* \"#utility.yul\":255:258   */\n      dup3\n        /* \"#utility.yul\":248:252   */\n      0x1f\n        /* \"#utility.yul\":240:246   */\n      dup4\n        /* \"#utility.yul\":236:253   */\n      add\n        /* \"#utility.yul\":232:259   */\n      slt\n        /* \"#utility.yul\":222:224   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":277:282   */\n      dup1\n        /* \"#utility.yul\":270:275   */\n      dup2\n        /* \"#utility.yul\":263:283   */\n      revert\n        /* \"#utility.yul\":222:224   */\n    tag_464:\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":304:324   */\n      calldataload\n        /* \"#utility.yul\":343:361   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":380:382   */\n      dup1\n        /* \"#utility.yul\":376:378   */\n      dup3\n        /* \"#utility.yul\":373:383   */\n      gt\n        /* \"#utility.yul\":370:372   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":386:404   */\n      tag_466\n      tag_467\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":461:463   */\n      0x40\n        /* \"#utility.yul\":455:464   */\n      mload\n        /* \"#utility.yul\":429:431   */\n      0x1f\n        /* \"#utility.yul\":515:528   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":511:533   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":535:537   */\n      0x3f\n        /* \"#utility.yul\":507:538   */\n      add\n        /* \"#utility.yul\":503:543   */\n      and\n        /* \"#utility.yul\":491:544   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":559:577   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":579:601   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":556:602   */\n      or\n        /* \"#utility.yul\":553:555   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":605:623   */\n      tag_469\n      tag_467\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":645:655   */\n      dup2\n        /* \"#utility.yul\":641:643   */\n      0x40\n        /* \"#utility.yul\":634:656   */\n      mstore\n        /* \"#utility.yul\":680:682   */\n      dup4\n        /* \"#utility.yul\":672:678   */\n      dup2\n        /* \"#utility.yul\":665:683   */\n      mstore\n        /* \"#utility.yul\":726:729   */\n      dup7\n        /* \"#utility.yul\":719:723   */\n      0x20\n        /* \"#utility.yul\":714:716   */\n      dup6\n        /* \"#utility.yul\":706:712   */\n      dup9\n        /* \"#utility.yul\":702:717   */\n      add\n        /* \"#utility.yul\":698:724   */\n      add\n        /* \"#utility.yul\":695:730   */\n      gt\n        /* \"#utility.yul\":692:694   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":747:752   */\n      dup5\n        /* \"#utility.yul\":740:745   */\n      dup6\n        /* \"#utility.yul\":733:753   */\n      revert\n        /* \"#utility.yul\":692:694   */\n    tag_470:\n        /* \"#utility.yul\":815:817   */\n      dup4\n        /* \"#utility.yul\":808:812   */\n      0x20\n        /* \"#utility.yul\":800:806   */\n      dup8\n        /* \"#utility.yul\":796:813   */\n      add\n        /* \"#utility.yul\":789:793   */\n      0x20\n        /* \"#utility.yul\":781:787   */\n      dup4\n        /* \"#utility.yul\":777:794   */\n      add\n        /* \"#utility.yul\":764:818   */\n      calldatacopy\n        /* \"#utility.yul\":838:853   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":855:859   */\n      0x20\n        /* \"#utility.yul\":834:860   */\n      add\n        /* \"#utility.yul\":827:868   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n        /* \"#utility.yul\":842:848   */\n      swap4\n        /* \"#utility.yul\":212:898   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":903:1061   */\n    tag_471:\n        /* \"#utility.yul\":971:991   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1031:1035   */\n      0xff\n        /* \"#utility.yul\":1020:1036   */\n      dup2\n      and\n        /* \"#utility.yul\":1010:1037   */\n      dup2\n      eq\n        /* \"#utility.yul\":1000:1002   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":1051:1052   */\n      0x00\n        /* \"#utility.yul\":1048:1049   */\n      dup1\n        /* \"#utility.yul\":1041:1053   */\n      revert\n        /* \"#utility.yul\":1066:1325   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":1178:1180   */\n      0x20\n        /* \"#utility.yul\":1166:1175   */\n      dup3\n        /* \"#utility.yul\":1157:1164   */\n      dup5\n        /* \"#utility.yul\":1153:1176   */\n      sub\n        /* \"#utility.yul\":1149:1181   */\n      slt\n        /* \"#utility.yul\":1146:1148   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":1199:1205   */\n      dup1\n        /* \"#utility.yul\":1191:1197   */\n      dup2\n        /* \"#utility.yul\":1184:1206   */\n      revert\n        /* \"#utility.yul\":1146:1148   */\n    tag_475:\n        /* \"#utility.yul\":1243:1252   */\n      dup2\n        /* \"#utility.yul\":1230:1253   */\n      calldataload\n        /* \"#utility.yul\":1262:1295   */\n      tag_421\n        /* \"#utility.yul\":1289:1294   */\n      dup2\n        /* \"#utility.yul\":1262:1295   */\n      tag_461\n      jump\t// in\n        /* \"#utility.yul\":1330:1732   */\n    tag_144:\n      0x00\n      dup1\n        /* \"#utility.yul\":1459:1461   */\n      0x40\n        /* \"#utility.yul\":1447:1456   */\n      dup4\n        /* \"#utility.yul\":1438:1445   */\n      dup6\n        /* \"#utility.yul\":1434:1457   */\n      sub\n        /* \"#utility.yul\":1430:1462   */\n      slt\n        /* \"#utility.yul\":1427:1429   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":1480:1486   */\n      dup1\n        /* \"#utility.yul\":1472:1478   */\n      dup2\n        /* \"#utility.yul\":1465:1487   */\n      revert\n        /* \"#utility.yul\":1427:1429   */\n    tag_478:\n        /* \"#utility.yul\":1524:1533   */\n      dup3\n        /* \"#utility.yul\":1511:1534   */\n      calldataload\n        /* \"#utility.yul\":1543:1576   */\n      tag_479\n        /* \"#utility.yul\":1570:1575   */\n      dup2\n        /* \"#utility.yul\":1543:1576   */\n      tag_461\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1595:1600   */\n      swap2\n      pop\n        /* \"#utility.yul\":1652:1654   */\n      0x20\n        /* \"#utility.yul\":1637:1655   */\n      dup4\n      add\n        /* \"#utility.yul\":1624:1656   */\n      calldataload\n        /* \"#utility.yul\":1665:1700   */\n      tag_480\n        /* \"#utility.yul\":1624:1656   */\n      dup2\n        /* \"#utility.yul\":1665:1700   */\n      tag_461\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":1719:1726   */\n      dup1\n        /* \"#utility.yul\":1709:1726   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1417:1732   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1737:2207   */\n    tag_62:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1883:1885   */\n      0x60\n        /* \"#utility.yul\":1871:1880   */\n      dup5\n        /* \"#utility.yul\":1862:1869   */\n      dup7\n        /* \"#utility.yul\":1858:1881   */\n      sub\n        /* \"#utility.yul\":1854:1886   */\n      slt\n        /* \"#utility.yul\":1851:1853   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":1904:1910   */\n      dup1\n        /* \"#utility.yul\":1896:1902   */\n      dup2\n        /* \"#utility.yul\":1889:1911   */\n      revert\n        /* \"#utility.yul\":1851:1853   */\n    tag_482:\n        /* \"#utility.yul\":1948:1957   */\n      dup4\n        /* \"#utility.yul\":1935:1958   */\n      calldataload\n        /* \"#utility.yul\":1967:2000   */\n      tag_483\n        /* \"#utility.yul\":1994:1999   */\n      dup2\n        /* \"#utility.yul\":1967:2000   */\n      tag_461\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":2019:2024   */\n      swap3\n      pop\n        /* \"#utility.yul\":2076:2078   */\n      0x20\n        /* \"#utility.yul\":2061:2079   */\n      dup5\n      add\n        /* \"#utility.yul\":2048:2080   */\n      calldataload\n        /* \"#utility.yul\":2089:2124   */\n      tag_484\n        /* \"#utility.yul\":2048:2080   */\n      dup2\n        /* \"#utility.yul\":2089:2124   */\n      tag_461\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":1841:2207   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2143:2150   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2197:2199   */\n      0x40\n        /* \"#utility.yul\":2182:2200   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2169:2201   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1841:2207   */\n      jump\t// out\n        /* \"#utility.yul\":2212:2539   */\n    tag_48:\n      0x00\n      dup1\n        /* \"#utility.yul\":2341:2343   */\n      0x40\n        /* \"#utility.yul\":2329:2338   */\n      dup4\n        /* \"#utility.yul\":2320:2327   */\n      dup6\n        /* \"#utility.yul\":2316:2339   */\n      sub\n        /* \"#utility.yul\":2312:2344   */\n      slt\n        /* \"#utility.yul\":2309:2311   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":2362:2368   */\n      dup2\n        /* \"#utility.yul\":2354:2360   */\n      dup3\n        /* \"#utility.yul\":2347:2369   */\n      revert\n        /* \"#utility.yul\":2309:2311   */\n    tag_486:\n        /* \"#utility.yul\":2406:2415   */\n      dup3\n        /* \"#utility.yul\":2393:2416   */\n      calldataload\n        /* \"#utility.yul\":2425:2458   */\n      tag_487\n        /* \"#utility.yul\":2452:2457   */\n      dup2\n        /* \"#utility.yul\":2425:2458   */\n      tag_461\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":2477:2482   */\n      swap5\n        /* \"#utility.yul\":2529:2531   */\n      0x20\n        /* \"#utility.yul\":2514:2532   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2501:2533   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2299:2539   */\n      jump\t// out\n        /* \"#utility.yul\":2544:2841   */\n    tag_417:\n      0x00\n        /* \"#utility.yul\":2664:2666   */\n      0x20\n        /* \"#utility.yul\":2652:2661   */\n      dup3\n        /* \"#utility.yul\":2643:2650   */\n      dup5\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2634   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":2685:2691   */\n      dup1\n        /* \"#utility.yul\":2677:2683   */\n      dup2\n        /* \"#utility.yul\":2670:2692   */\n      revert\n        /* \"#utility.yul\":2632:2634   */\n    tag_489:\n        /* \"#utility.yul\":2722:2731   */\n      dup2\n        /* \"#utility.yul\":2716:2732   */\n      mload\n        /* \"#utility.yul\":2775:2780   */\n      dup1\n        /* \"#utility.yul\":2768:2781   */\n      iszero\n        /* \"#utility.yul\":2761:2782   */\n      iszero\n        /* \"#utility.yul\":2754:2759   */\n      dup2\n        /* \"#utility.yul\":2751:2783   */\n      eq\n        /* \"#utility.yul\":2741:2743   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":2802:2808   */\n      dup2\n        /* \"#utility.yul\":2794:2800   */\n      dup3\n        /* \"#utility.yul\":2787:2809   */\n      revert\n        /* \"#utility.yul\":2846:3330   */\n    tag_137:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":3006:3008   */\n      0x60\n        /* \"#utility.yul\":2994:3003   */\n      dup5\n        /* \"#utility.yul\":2985:2992   */\n      dup7\n        /* \"#utility.yul\":2981:3004   */\n      sub\n        /* \"#utility.yul\":2977:3009   */\n      slt\n        /* \"#utility.yul\":2974:2976   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3019:3025   */\n      dup4\n        /* \"#utility.yul\":3012:3034   */\n      revert\n        /* \"#utility.yul\":3335:4505   */\n    tag_78:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":3594:3597   */\n      0x0100\n        /* \"#utility.yul\":3582:3591   */\n      dup10\n        /* \"#utility.yul\":3573:3580   */\n      dup12\n        /* \"#utility.yul\":3569:3592   */\n      sub\n        /* \"#utility.yul\":3565:3598   */\n      slt\n        /* \"#utility.yul\":3562:3564   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3616:3622   */\n      dup4\n        /* \"#utility.yul\":3608:3614   */\n      dup5\n        /* \"#utility.yul\":3601:3623   */\n      revert\n        /* \"#utility.yul\":3562:3564   */\n    tag_496:\n        /* \"#utility.yul\":3661:3670   */\n      dup9\n        /* \"#utility.yul\":3648:3671   */\n      calldataload\n        /* \"#utility.yul\":3690:3708   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3731:3733   */\n      dup1\n        /* \"#utility.yul\":3723:3729   */\n      dup3\n        /* \"#utility.yul\":3720:3734   */\n      gt\n        /* \"#utility.yul\":3717:3719   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":3752:3758   */\n      dup6\n        /* \"#utility.yul\":3744:3750   */\n      dup7\n        /* \"#utility.yul\":3737:3759   */\n      revert\n        /* \"#utility.yul\":3717:3719   */\n    tag_497:\n        /* \"#utility.yul\":3780:3832   */\n      tag_498\n        /* \"#utility.yul\":3824:3831   */\n      dup13\n        /* \"#utility.yul\":3815:3821   */\n      dup4\n        /* \"#utility.yul\":3804:3813   */\n      dup14\n        /* \"#utility.yul\":3800:3822   */\n      add\n        /* \"#utility.yul\":3780:3832   */\n      tag_462\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":3770:3832   */\n      swap10\n      pop\n        /* \"#utility.yul\":3885:3887   */\n      0x20\n        /* \"#utility.yul\":3874:3883   */\n      dup12\n        /* \"#utility.yul\":3870:3888   */\n      add\n        /* \"#utility.yul\":3857:3889   */\n      calldataload\n        /* \"#utility.yul\":3841:3889   */\n      swap2\n      pop\n        /* \"#utility.yul\":3914:3916   */\n      dup1\n        /* \"#utility.yul\":3904:3912   */\n      dup3\n        /* \"#utility.yul\":3901:3917   */\n      gt\n        /* \"#utility.yul\":3898:3900   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":3935:3941   */\n      dup6\n        /* \"#utility.yul\":3927:3933   */\n      dup7\n        /* \"#utility.yul\":3920:3942   */\n      revert\n        /* \"#utility.yul\":3898:3900   */\n    tag_499:\n        /* \"#utility.yul\":3963:4017   */\n      tag_500\n        /* \"#utility.yul\":4009:4016   */\n      dup13\n        /* \"#utility.yul\":3998:4006   */\n      dup4\n        /* \"#utility.yul\":3987:3996   */\n      dup14\n        /* \"#utility.yul\":3983:4007   */\n      add\n        /* \"#utility.yul\":3963:4017   */\n      tag_462\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3953:4017   */\n      swap9\n      pop\n        /* \"#utility.yul\":4070:4072   */\n      0x40\n        /* \"#utility.yul\":4059:4068   */\n      dup12\n        /* \"#utility.yul\":4055:4073   */\n      add\n        /* \"#utility.yul\":4042:4074   */\n      calldataload\n        /* \"#utility.yul\":4026:4074   */\n      swap2\n      pop\n        /* \"#utility.yul\":4099:4101   */\n      dup1\n        /* \"#utility.yul\":4089:4097   */\n      dup3\n        /* \"#utility.yul\":4086:4102   */\n      gt\n        /* \"#utility.yul\":4083:4085   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4120:4126   */\n      dup6\n        /* \"#utility.yul\":4112:4118   */\n      dup7\n        /* \"#utility.yul\":4105:4127   */\n      revert\n        /* \"#utility.yul\":4083:4085   */\n    tag_501:\n      pop\n        /* \"#utility.yul\":4148:4202   */\n      tag_502\n        /* \"#utility.yul\":4194:4201   */\n      dup12\n        /* \"#utility.yul\":4183:4191   */\n      dup3\n        /* \"#utility.yul\":4172:4181   */\n      dup13\n        /* \"#utility.yul\":4168:4192   */\n      add\n        /* \"#utility.yul\":4148:4202   */\n      tag_462\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4138:4202   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":4221:4259   */\n      tag_503\n        /* \"#utility.yul\":4255:4257   */\n      0x60\n        /* \"#utility.yul\":4244:4253   */\n      dup11\n        /* \"#utility.yul\":4240:4258   */\n      add\n        /* \"#utility.yul\":4221:4259   */\n      tag_471\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4211:4259   */\n      swap5\n      pop\n        /* \"#utility.yul\":4278:4319   */\n      tag_504\n        /* \"#utility.yul\":4314:4317   */\n      0x80\n        /* \"#utility.yul\":4303:4312   */\n      dup11\n        /* \"#utility.yul\":4299:4318   */\n      add\n        /* \"#utility.yul\":4278:4319   */\n      tag_458\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4268:4319   */\n      swap4\n      pop\n        /* \"#utility.yul\":4338:4379   */\n      tag_505\n        /* \"#utility.yul\":4374:4377   */\n      0xa0\n        /* \"#utility.yul\":4363:4372   */\n      dup11\n        /* \"#utility.yul\":4359:4378   */\n      add\n        /* \"#utility.yul\":4338:4379   */\n      tag_458\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":4328:4379   */\n      swap3\n      pop\n        /* \"#utility.yul\":4398:4439   */\n      tag_506\n        /* \"#utility.yul\":4434:4437   */\n      0xc0\n        /* \"#utility.yul\":4423:4432   */\n      dup11\n        /* \"#utility.yul\":4419:4438   */\n      add\n        /* \"#utility.yul\":4398:4439   */\n      tag_458\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4388:4439   */\n      swap2\n      pop\n        /* \"#utility.yul\":4458:4499   */\n      tag_507\n        /* \"#utility.yul\":4494:4497   */\n      0xe0\n        /* \"#utility.yul\":4483:4492   */\n      dup11\n        /* \"#utility.yul\":4479:4498   */\n      add\n        /* \"#utility.yul\":4458:4499   */\n      tag_458\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":4448:4499   */\n      swap1\n      pop\n        /* \"#utility.yul\":3552:4505   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4510:4700   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":4622:4624   */\n      0x20\n        /* \"#utility.yul\":4610:4619   */\n      dup3\n        /* \"#utility.yul\":4601:4608   */\n      dup5\n        /* \"#utility.yul\":4597:4620   */\n      sub\n        /* \"#utility.yul\":4593:4625   */\n      slt\n        /* \"#utility.yul\":4590:4592   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":4643:4649   */\n      dup1\n        /* \"#utility.yul\":4635:4641   */\n      dup2\n        /* \"#utility.yul\":4628:4650   */\n      revert\n        /* \"#utility.yul\":4590:4592   */\n    tag_509:\n      pop\n        /* \"#utility.yul\":4671:4694   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4580:4700   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4705:4979   */\n    tag_434:\n      0x00\n        /* \"#utility.yul\":4872:4878   */\n      dup3\n        /* \"#utility.yul\":4866:4879   */\n      mload\n        /* \"#utility.yul\":4888:4941   */\n      tag_511\n        /* \"#utility.yul\":4934:4940   */\n      dup2\n        /* \"#utility.yul\":4929:4932   */\n      dup5\n        /* \"#utility.yul\":4922:4926   */\n      0x20\n        /* \"#utility.yul\":4914:4920   */\n      dup8\n        /* \"#utility.yul\":4910:4927   */\n      add\n        /* \"#utility.yul\":4888:4941   */\n      tag_512\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":4957:4973   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":4842:4979   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4984:5187   */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5148:5180   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5130:5181   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5118:5120   */\n      0x20\n        /* \"#utility.yul\":5103:5121   */\n      add\n      swap1\n        /* \"#utility.yul\":5085:5187   */\n      jump\t// out\n        /* \"#utility.yul\":5192:5466   */\n    tag_410:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5384:5416   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5366:5417   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5448:5450   */\n      0x20\n        /* \"#utility.yul\":5433:5451   */\n      dup3\n      add\n        /* \"#utility.yul\":5426:5460   */\n      mstore\n        /* \"#utility.yul\":5354:5356   */\n      0x40\n        /* \"#utility.yul\":5339:5357   */\n      add\n      swap1\n        /* \"#utility.yul\":5321:5466   */\n      jump\t// out\n        /* \"#utility.yul\":5471:5658   */\n    tag_51:\n        /* \"#utility.yul\":5636:5650   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5629:5651   */\n      iszero\n        /* \"#utility.yul\":5611:5652   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5599:5601   */\n      0x20\n        /* \"#utility.yul\":5584:5602   */\n      add\n      swap1\n        /* \"#utility.yul\":5566:5658   */\n      jump\t// out\n        /* \"#utility.yul\":5663:6046   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":5812:5814   */\n      0x20\n        /* \"#utility.yul\":5801:5810   */\n      dup3\n        /* \"#utility.yul\":5794:5815   */\n      mstore\n        /* \"#utility.yul\":5844:5850   */\n      dup3\n        /* \"#utility.yul\":5838:5851   */\n      mload\n        /* \"#utility.yul\":5887:5893   */\n      dup1\n        /* \"#utility.yul\":5882:5884   */\n      0x20\n        /* \"#utility.yul\":5871:5880   */\n      dup5\n        /* \"#utility.yul\":5867:5885   */\n      add\n        /* \"#utility.yul\":5860:5894   */\n      mstore\n        /* \"#utility.yul\":5903:5969   */\n      tag_517\n        /* \"#utility.yul\":5962:5968   */\n      dup2\n        /* \"#utility.yul\":5957:5959   */\n      0x40\n        /* \"#utility.yul\":5946:5955   */\n      dup6\n        /* \"#utility.yul\":5942:5960   */\n      add\n        /* \"#utility.yul\":5937:5939   */\n      0x20\n        /* \"#utility.yul\":5929:5935   */\n      dup8\n        /* \"#utility.yul\":5925:5940   */\n      add\n        /* \"#utility.yul\":5903:5969   */\n      tag_512\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6030:6032   */\n      0x1f\n        /* \"#utility.yul\":6009:6024   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6005:6034   */\n      and\n        /* \"#utility.yul\":5990:6035   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6037:6039   */\n      0x40\n        /* \"#utility.yul\":5986:6040   */\n      add\n      swap3\n        /* \"#utility.yul\":5784:6046   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6450   */\n    tag_398:\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6235:6256   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6292:6294   */\n      0x23\n        /* \"#utility.yul\":6272:6290   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6265:6295   */\n      mstore\n        /* \"#utility.yul\":6331:6365   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6326:6328   */\n      0x40\n        /* \"#utility.yul\":6311:6329   */\n      dup3\n      add\n        /* \"#utility.yul\":6304:6366   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6397:6399   */\n      0x60\n        /* \"#utility.yul\":6382:6400   */\n      dup3\n      add\n        /* \"#utility.yul\":6375:6408   */\n      mstore\n        /* \"#utility.yul\":6440:6443   */\n      0x80\n        /* \"#utility.yul\":6425:6444   */\n      add\n      swap1\n        /* \"#utility.yul\":6225:6450   */\n      jump\t// out\n        /* \"#utility.yul\":6455:6854   */\n    tag_239:\n        /* \"#utility.yul\":6657:6659   */\n      0x20\n        /* \"#utility.yul\":6639:6660   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6696:6698   */\n      0x23\n        /* \"#utility.yul\":6676:6694   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6669:6699   */\n      mstore\n        /* \"#utility.yul\":6735:6769   */\n      0x5553446d3a206e6577206f776e657220697320746865207a65726f2061646472\n        /* \"#utility.yul\":6730:6732   */\n      0x40\n        /* \"#utility.yul\":6715:6733   */\n      dup3\n      add\n        /* \"#utility.yul\":6708:6770   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6801:6803   */\n      0x60\n        /* \"#utility.yul\":6786:6804   */\n      dup3\n      add\n        /* \"#utility.yul\":6779:6812   */\n      mstore\n        /* \"#utility.yul\":6844:6847   */\n      0x80\n        /* \"#utility.yul\":6829:6848   */\n      add\n      swap1\n        /* \"#utility.yul\":6629:6854   */\n      jump\t// out\n        /* \"#utility.yul\":6859:7261   */\n    tag_377:\n        /* \"#utility.yul\":7061:7063   */\n      0x20\n        /* \"#utility.yul\":7043:7064   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7100:7102   */\n      0x26\n        /* \"#utility.yul\":7080:7098   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7073:7103   */\n      mstore\n        /* \"#utility.yul\":7139:7173   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7134:7136   */\n      0x40\n        /* \"#utility.yul\":7119:7137   */\n      dup3\n      add\n        /* \"#utility.yul\":7112:7174   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7205:7207   */\n      0x60\n        /* \"#utility.yul\":7190:7208   */\n      dup3\n      add\n        /* \"#utility.yul\":7183:7219   */\n      mstore\n        /* \"#utility.yul\":7251:7254   */\n      0x80\n        /* \"#utility.yul\":7236:7255   */\n      add\n      swap1\n        /* \"#utility.yul\":7033:7261   */\n      jump\t// out\n        /* \"#utility.yul\":7266:7664   */\n    tag_390:\n        /* \"#utility.yul\":7468:7470   */\n      0x20\n        /* \"#utility.yul\":7450:7471   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7507:7509   */\n      0x22\n        /* \"#utility.yul\":7487:7505   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7480:7510   */\n      mstore\n        /* \"#utility.yul\":7546:7580   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7541:7543   */\n      0x40\n        /* \"#utility.yul\":7526:7544   */\n      dup3\n      add\n        /* \"#utility.yul\":7519:7581   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7612:7614   */\n      0x60\n        /* \"#utility.yul\":7597:7615   */\n      dup3\n      add\n        /* \"#utility.yul\":7590:7622   */\n      mstore\n        /* \"#utility.yul\":7654:7657   */\n      0x80\n        /* \"#utility.yul\":7639:7658   */\n      add\n      swap1\n        /* \"#utility.yul\":7440:7664   */\n      jump\t// out\n        /* \"#utility.yul\":7669:8075   */\n    tag_218:\n        /* \"#utility.yul\":7871:7873   */\n      0x20\n        /* \"#utility.yul\":7853:7874   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7910:7912   */\n      0x2a\n        /* \"#utility.yul\":7890:7908   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7883:7913   */\n      mstore\n        /* \"#utility.yul\":7949:7983   */\n      0x526573637561626c653a206e6577207265736375657220697320746865207a65\n        /* \"#utility.yul\":7944:7946   */\n      0x40\n        /* \"#utility.yul\":7929:7947   */\n      dup3\n      add\n        /* \"#utility.yul\":7922:7984   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":8015:8017   */\n      0x60\n        /* \"#utility.yul\":8000:8018   */\n      dup3\n      add\n        /* \"#utility.yul\":7993:8033   */\n      mstore\n        /* \"#utility.yul\":8065:8068   */\n      0x80\n        /* \"#utility.yul\":8050:8069   */\n      add\n      swap1\n        /* \"#utility.yul\":7843:8075   */\n      jump\t// out\n        /* \"#utility.yul\":8080:8482   */\n    tag_401:\n        /* \"#utility.yul\":8282:8284   */\n      0x20\n        /* \"#utility.yul\":8264:8285   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8321:8323   */\n      0x26\n        /* \"#utility.yul\":8301:8319   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8294:8324   */\n      mstore\n        /* \"#utility.yul\":8360:8394   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":8355:8357   */\n      0x40\n        /* \"#utility.yul\":8340:8358   */\n      dup3\n      add\n        /* \"#utility.yul\":8333:8395   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":8426:8428   */\n      0x60\n        /* \"#utility.yul\":8411:8429   */\n      dup3\n      add\n        /* \"#utility.yul\":8404:8440   */\n      mstore\n        /* \"#utility.yul\":8472:8475   */\n      0x80\n        /* \"#utility.yul\":8457:8476   */\n      add\n      swap1\n        /* \"#utility.yul\":8254:8482   */\n      jump\t// out\n        /* \"#utility.yul\":8487:8895   */\n    tag_185:\n        /* \"#utility.yul\":8689:8691   */\n      0x20\n        /* \"#utility.yul\":8671:8692   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8728:8730   */\n      0x2c\n        /* \"#utility.yul\":8708:8726   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8701:8731   */\n      mstore\n        /* \"#utility.yul\":8767:8801   */\n      0x426c61636b6c69737461626c653a2063616c6c6572206973206e6f7420746865\n        /* \"#utility.yul\":8762:8764   */\n      0x40\n        /* \"#utility.yul\":8747:8765   */\n      dup3\n      add\n        /* \"#utility.yul\":8740:8802   */\n      mstore\n      shl(0xa1, 0x10313630b1b5b634b9ba32b9)\n        /* \"#utility.yul\":8833:8835   */\n      0x60\n        /* \"#utility.yul\":8818:8836   */\n      dup3\n      add\n        /* \"#utility.yul\":8811:8853   */\n      mstore\n        /* \"#utility.yul\":8885:8888   */\n      0x80\n        /* \"#utility.yul\":8870:8889   */\n      add\n      swap1\n        /* \"#utility.yul\":8661:8895   */\n      jump\t// out\n        /* \"#utility.yul\":8900:9301   */\n    tag_227:\n        /* \"#utility.yul\":9102:9104   */\n      0x20\n        /* \"#utility.yul\":9084:9105   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9141:9143   */\n      0x25\n        /* \"#utility.yul\":9121:9139   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9114:9144   */\n      mstore\n        /* \"#utility.yul\":9180:9214   */\n      0x5553446d3a20636f6e747261637420697320616c726561647920696e69746961\n        /* \"#utility.yul\":9175:9177   */\n      0x40\n        /* \"#utility.yul\":9160:9178   */\n      dup3\n      add\n        /* \"#utility.yul\":9153:9215   */\n      mstore\n      shl(0xda, 0x1b1a5e9959)\n        /* \"#utility.yul\":9246:9248   */\n      0x60\n        /* \"#utility.yul\":9231:9249   */\n      dup3\n      add\n        /* \"#utility.yul\":9224:9259   */\n      mstore\n        /* \"#utility.yul\":9291:9294   */\n      0x80\n        /* \"#utility.yul\":9276:9295   */\n      add\n      swap1\n        /* \"#utility.yul\":9074:9301   */\n      jump\t// out\n        /* \"#utility.yul\":9306:9711   */\n    tag_273:\n        /* \"#utility.yul\":9508:9510   */\n      0x20\n        /* \"#utility.yul\":9490:9511   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9547:9549   */\n      0x29\n        /* \"#utility.yul\":9527:9545   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9520:9550   */\n      mstore\n        /* \"#utility.yul\":9586:9620   */\n      0x5553446d3a206d696e7420616d6f756e742065786365656473206d696e746572\n        /* \"#utility.yul\":9581:9583   */\n      0x40\n        /* \"#utility.yul\":9566:9584   */\n      dup3\n      add\n        /* \"#utility.yul\":9559:9621   */\n      mstore\n      shl(0xb8, 0x416c6c6f77616e6365)\n        /* \"#utility.yul\":9652:9654   */\n      0x60\n        /* \"#utility.yul\":9637:9655   */\n      dup3\n      add\n        /* \"#utility.yul\":9630:9669   */\n      mstore\n        /* \"#utility.yul\":9701:9704   */\n      0x80\n        /* \"#utility.yul\":9686:9705   */\n      add\n      swap1\n        /* \"#utility.yul\":9480:9711   */\n      jump\t// out\n        /* \"#utility.yul\":9716:10118   */\n    tag_427:\n        /* \"#utility.yul\":9918:9920   */\n      0x20\n        /* \"#utility.yul\":9900:9921   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9957:9959   */\n      0x26\n        /* \"#utility.yul\":9937:9955   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9930:9960   */\n      mstore\n        /* \"#utility.yul\":9996:10030   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":9991:9993   */\n      0x40\n        /* \"#utility.yul\":9976:9994   */\n      dup3\n      add\n        /* \"#utility.yul\":9969:10031   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":10062:10064   */\n      0x60\n        /* \"#utility.yul\":10047:10065   */\n      dup3\n      add\n        /* \"#utility.yul\":10040:10076   */\n      mstore\n        /* \"#utility.yul\":10108:10111   */\n      0x80\n        /* \"#utility.yul\":10093:10112   */\n      add\n      swap1\n        /* \"#utility.yul\":9890:10118   */\n      jump\t// out\n        /* \"#utility.yul\":10123:10463   */\n    tag_170:\n        /* \"#utility.yul\":10325:10327   */\n      0x20\n        /* \"#utility.yul\":10307:10328   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10364:10366   */\n      0x10\n        /* \"#utility.yul\":10344:10362   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10337:10367   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":10398:10400   */\n      0x40\n        /* \"#utility.yul\":10383:10401   */\n      dup3\n      add\n        /* \"#utility.yul\":10376:10422   */\n      mstore\n        /* \"#utility.yul\":10454:10456   */\n      0x60\n        /* \"#utility.yul\":10439:10457   */\n      add\n      swap1\n        /* \"#utility.yul\":10297:10463   */\n      jump\t// out\n        /* \"#utility.yul\":10468:10820   */\n    tag_254:\n        /* \"#utility.yul\":10670:10672   */\n      0x20\n        /* \"#utility.yul\":10652:10673   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10709:10711   */\n      0x1c\n        /* \"#utility.yul\":10689:10707   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10682:10712   */\n      mstore\n        /* \"#utility.yul\":10748:10778   */\n      0x5553446d3a2063616c6c6572206973206e6f742061206d696e74657200000000\n        /* \"#utility.yul\":10743:10745   */\n      0x40\n        /* \"#utility.yul\":10728:10746   */\n      dup3\n      add\n        /* \"#utility.yul\":10721:10779   */\n      mstore\n        /* \"#utility.yul\":10811:10813   */\n      0x60\n        /* \"#utility.yul\":10796:10814   */\n      add\n      swap1\n        /* \"#utility.yul\":10642:10820   */\n      jump\t// out\n        /* \"#utility.yul\":10825:11230   */\n    tag_236:\n        /* \"#utility.yul\":11027:11029   */\n      0x20\n        /* \"#utility.yul\":11009:11030   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11066:11068   */\n      0x29\n        /* \"#utility.yul\":11046:11064   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11039:11069   */\n      mstore\n        /* \"#utility.yul\":11105:11139   */\n      0x5553446d3a206e657720626c61636b6c697374657220697320746865207a6572\n        /* \"#utility.yul\":11100:11102   */\n      0x40\n        /* \"#utility.yul\":11085:11103   */\n      dup3\n      add\n        /* \"#utility.yul\":11078:11140   */\n      mstore\n      shl(0xb8, 0x6f2061646472657373)\n        /* \"#utility.yul\":11171:11173   */\n      0x60\n        /* \"#utility.yul\":11156:11174   */\n      dup3\n      add\n        /* \"#utility.yul\":11149:11188   */\n      mstore\n        /* \"#utility.yul\":11220:11223   */\n      0x80\n        /* \"#utility.yul\":11205:11224   */\n      add\n      swap1\n        /* \"#utility.yul\":10999:11230   */\n      jump\t// out\n        /* \"#utility.yul\":11235:11635   */\n    tag_359:\n        /* \"#utility.yul\":11437:11439   */\n      0x20\n        /* \"#utility.yul\":11419:11440   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11476:11478   */\n      0x24\n        /* \"#utility.yul\":11456:11474   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11449:11479   */\n      mstore\n        /* \"#utility.yul\":11515:11549   */\n      0x526573637561626c653a2063616c6c6572206973206e6f742074686520726573\n        /* \"#utility.yul\":11510:11512   */\n      0x40\n        /* \"#utility.yul\":11495:11513   */\n      dup3\n      add\n        /* \"#utility.yul\":11488:11550   */\n      mstore\n      shl(0xe1, 0x31bab2b9)\n        /* \"#utility.yul\":11581:11583   */\n      0x60\n        /* \"#utility.yul\":11566:11584   */\n      dup3\n      add\n        /* \"#utility.yul\":11559:11593   */\n      mstore\n        /* \"#utility.yul\":11625:11628   */\n      0x80\n        /* \"#utility.yul\":11610:11629   */\n      add\n      swap1\n        /* \"#utility.yul\":11409:11635   */\n      jump\t// out\n        /* \"#utility.yul\":11640:12044   */\n    tag_203:\n        /* \"#utility.yul\":11842:11844   */\n      0x20\n        /* \"#utility.yul\":11824:11845   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11881:11883   */\n      0x28\n        /* \"#utility.yul\":11861:11879   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11854:11884   */\n      mstore\n        /* \"#utility.yul\":11920:11954   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":11915:11917   */\n      0x40\n        /* \"#utility.yul\":11900:11918   */\n      dup3\n      add\n        /* \"#utility.yul\":11893:11955   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":11986:11988   */\n      0x60\n        /* \"#utility.yul\":11971:11989   */\n      dup3\n      add\n        /* \"#utility.yul\":11964:12002   */\n      mstore\n        /* \"#utility.yul\":12034:12037   */\n      0x80\n        /* \"#utility.yul\":12019:12038   */\n      add\n      swap1\n        /* \"#utility.yul\":11814:12044   */\n      jump\t// out\n        /* \"#utility.yul\":12049:12405   */\n    tag_214:\n        /* \"#utility.yul\":12251:12253   */\n      0x20\n        /* \"#utility.yul\":12233:12254   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12270:12288   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":12263:12293   */\n      mstore\n        /* \"#utility.yul\":12329:12363   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12324:12326   */\n      0x40\n        /* \"#utility.yul\":12309:12327   */\n      dup3\n      add\n        /* \"#utility.yul\":12302:12364   */\n      mstore\n        /* \"#utility.yul\":12396:12398   */\n      0x60\n        /* \"#utility.yul\":12381:12399   */\n      add\n      swap1\n        /* \"#utility.yul\":12223:12405   */\n      jump\t// out\n        /* \"#utility.yul\":12410:12810   */\n    tag_267:\n        /* \"#utility.yul\":12612:12614   */\n      0x20\n        /* \"#utility.yul\":12594:12615   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12651:12653   */\n      0x24\n        /* \"#utility.yul\":12631:12649   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12624:12654   */\n      mstore\n        /* \"#utility.yul\":12690:12724   */\n      0x5553446d3a206d696e7420616d6f756e74206e6f742067726561746572207468\n        /* \"#utility.yul\":12685:12687   */\n      0x40\n        /* \"#utility.yul\":12670:12688   */\n      dup3\n      add\n        /* \"#utility.yul\":12663:12725   */\n      mstore\n      shl(0xe4, 0x0616e203)\n        /* \"#utility.yul\":12756:12758   */\n      0x60\n        /* \"#utility.yul\":12741:12759   */\n      dup3\n      add\n        /* \"#utility.yul\":12734:12768   */\n      mstore\n        /* \"#utility.yul\":12800:12803   */\n      0x80\n        /* \"#utility.yul\":12785:12804   */\n      add\n      swap1\n        /* \"#utility.yul\":12584:12810   */\n      jump\t// out\n        /* \"#utility.yul\":12815:13216   */\n    tag_395:\n        /* \"#utility.yul\":13017:13019   */\n      0x20\n        /* \"#utility.yul\":12999:13020   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13056:13058   */\n      0x25\n        /* \"#utility.yul\":13036:13054   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13029:13059   */\n      mstore\n        /* \"#utility.yul\":13095:13129   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13090:13092   */\n      0x40\n        /* \"#utility.yul\":13075:13093   */\n      dup3\n      add\n        /* \"#utility.yul\":13068:13130   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13161:13163   */\n      0x60\n        /* \"#utility.yul\":13146:13164   */\n      dup3\n      add\n        /* \"#utility.yul\":13139:13174   */\n      mstore\n        /* \"#utility.yul\":13206:13209   */\n      0x80\n        /* \"#utility.yul\":13191:13210   */\n      add\n      swap1\n        /* \"#utility.yul\":12989:13216   */\n      jump\t// out\n        /* \"#utility.yul\":13221:13621   */\n    tag_293:\n        /* \"#utility.yul\":13423:13425   */\n      0x20\n        /* \"#utility.yul\":13405:13426   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13462:13464   */\n      0x24\n        /* \"#utility.yul\":13442:13460   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13435:13465   */\n      mstore\n        /* \"#utility.yul\":13501:13535   */\n      0x5553446d3a206275726e20616d6f756e74206e6f742067726561746572207468\n        /* \"#utility.yul\":13496:13498   */\n      0x40\n        /* \"#utility.yul\":13481:13499   */\n      dup3\n      add\n        /* \"#utility.yul\":13474:13536   */\n      mstore\n      shl(0xe4, 0x0616e203)\n        /* \"#utility.yul\":13567:13569   */\n      0x60\n        /* \"#utility.yul\":13552:13570   */\n      dup3\n      add\n        /* \"#utility.yul\":13545:13579   */\n      mstore\n        /* \"#utility.yul\":13611:13614   */\n      0x80\n        /* \"#utility.yul\":13596:13615   */\n      add\n      swap1\n        /* \"#utility.yul\":13395:13621   */\n      jump\t// out\n        /* \"#utility.yul\":13626:14032   */\n    tag_230:\n        /* \"#utility.yul\":13828:13830   */\n      0x20\n        /* \"#utility.yul\":13810:13831   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13867:13869   */\n      0x2a\n        /* \"#utility.yul\":13847:13865   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13840:13870   */\n      mstore\n        /* \"#utility.yul\":13906:13940   */\n      0x5553446d3a206e6577206d61737465724d696e74657220697320746865207a65\n        /* \"#utility.yul\":13901:13903   */\n      0x40\n        /* \"#utility.yul\":13886:13904   */\n      dup3\n      add\n        /* \"#utility.yul\":13879:13941   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":13972:13974   */\n      0x60\n        /* \"#utility.yul\":13957:13975   */\n      dup3\n      add\n        /* \"#utility.yul\":13950:13990   */\n      mstore\n        /* \"#utility.yul\":14022:14025   */\n      0x80\n        /* \"#utility.yul\":14007:14026   */\n      add\n      swap1\n        /* \"#utility.yul\":13800:14032   */\n      jump\t// out\n        /* \"#utility.yul\":14037:14437   */\n    tag_233:\n        /* \"#utility.yul\":14239:14241   */\n      0x20\n        /* \"#utility.yul\":14221:14242   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14278:14280   */\n      0x24\n        /* \"#utility.yul\":14258:14276   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14251:14281   */\n      mstore\n        /* \"#utility.yul\":14317:14351   */\n      0x5553446d3a206e65772070617573657220697320746865207a65726f20616464\n        /* \"#utility.yul\":14312:14314   */\n      0x40\n        /* \"#utility.yul\":14297:14315   */\n      dup3\n      add\n        /* \"#utility.yul\":14290:14352   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":14383:14385   */\n      0x60\n        /* \"#utility.yul\":14368:14386   */\n      dup3\n      add\n        /* \"#utility.yul\":14361:14395   */\n      mstore\n        /* \"#utility.yul\":14427:14430   */\n      0x80\n        /* \"#utility.yul\":14412:14431   */\n      add\n      swap1\n        /* \"#utility.yul\":14211:14437   */\n      jump\t// out\n        /* \"#utility.yul\":14442:14842   */\n    tag_387:\n        /* \"#utility.yul\":14644:14646   */\n      0x20\n        /* \"#utility.yul\":14626:14647   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14683:14685   */\n      0x24\n        /* \"#utility.yul\":14663:14681   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14656:14686   */\n      mstore\n        /* \"#utility.yul\":14722:14756   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14717:14719   */\n      0x40\n        /* \"#utility.yul\":14702:14720   */\n      dup3\n      add\n        /* \"#utility.yul\":14695:14757   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":14788:14790   */\n      0x60\n        /* \"#utility.yul\":14773:14791   */\n      dup3\n      add\n        /* \"#utility.yul\":14766:14800   */\n      mstore\n        /* \"#utility.yul\":14832:14835   */\n      0x80\n        /* \"#utility.yul\":14817:14836   */\n      add\n      swap1\n        /* \"#utility.yul\":14616:14842   */\n      jump\t// out\n        /* \"#utility.yul\":14847:15200   */\n    tag_432:\n        /* \"#utility.yul\":15049:15051   */\n      0x20\n        /* \"#utility.yul\":15031:15052   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15088:15090   */\n      0x1d\n        /* \"#utility.yul\":15068:15086   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15061:15091   */\n      mstore\n        /* \"#utility.yul\":15127:15158   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":15122:15124   */\n      0x40\n        /* \"#utility.yul\":15107:15125   */\n      dup3\n      add\n        /* \"#utility.yul\":15100:15159   */\n      mstore\n        /* \"#utility.yul\":15191:15193   */\n      0x60\n        /* \"#utility.yul\":15176:15194   */\n      add\n      swap1\n        /* \"#utility.yul\":15021:15200   */\n      jump\t// out\n        /* \"#utility.yul\":15205:15628   */\n    tag_270:\n        /* \"#utility.yul\":15407:15409   */\n      0x20\n        /* \"#utility.yul\":15389:15410   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15446:15448   */\n      0x3b\n        /* \"#utility.yul\":15426:15444   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15419:15449   */\n      mstore\n        /* \"#utility.yul\":15485:15519   */\n      0x5553446d3a204d696e746572732063616e206f6e6c79206d696e7420746f6b65\n        /* \"#utility.yul\":15480:15482   */\n      0x40\n        /* \"#utility.yul\":15465:15483   */\n      dup3\n      add\n        /* \"#utility.yul\":15458:15520   */\n      mstore\n        /* \"#utility.yul\":15556:15585   */\n      0x6e7320746f206d6173746572206d696e74657220616464726573730000000000\n        /* \"#utility.yul\":15551:15553   */\n      0x60\n        /* \"#utility.yul\":15536:15554   */\n      dup3\n      add\n        /* \"#utility.yul\":15529:15586   */\n      mstore\n        /* \"#utility.yul\":15618:15621   */\n      0x80\n        /* \"#utility.yul\":15603:15622   */\n      add\n      swap1\n        /* \"#utility.yul\":15379:15628   */\n      jump\t// out\n        /* \"#utility.yul\":15633:16033   */\n    tag_222:\n        /* \"#utility.yul\":15835:15837   */\n      0x20\n        /* \"#utility.yul\":15817:15838   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15874:15876   */\n      0x24\n        /* \"#utility.yul\":15854:15872   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15847:15877   */\n      mstore\n        /* \"#utility.yul\":15913:15947   */\n      0x5553446d3a2063616c6c6572206973206e6f7420746865206d61737465724d69\n        /* \"#utility.yul\":15908:15910   */\n      0x40\n        /* \"#utility.yul\":15893:15911   */\n      dup3\n      add\n        /* \"#utility.yul\":15886:15948   */\n      mstore\n      shl(0xe1, 0x373a32b9)\n        /* \"#utility.yul\":15979:15981   */\n      0x60\n        /* \"#utility.yul\":15964:15982   */\n      dup3\n      add\n        /* \"#utility.yul\":15957:15991   */\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0x80\n        /* \"#utility.yul\":16008:16027   */\n      add\n      swap1\n        /* \"#utility.yul\":15807:16033   */\n      jump\t// out\n        /* \"#utility.yul\":16038:16444   */\n    tag_420:\n        /* \"#utility.yul\":16240:16242   */\n      0x20\n        /* \"#utility.yul\":16222:16243   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16279:16281   */\n      0x2a\n        /* \"#utility.yul\":16259:16277   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16252:16282   */\n      mstore\n        /* \"#utility.yul\":16318:16352   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":16313:16315   */\n      0x40\n        /* \"#utility.yul\":16298:16316   */\n      dup3\n      add\n        /* \"#utility.yul\":16291:16353   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":16384:16386   */\n      0x60\n        /* \"#utility.yul\":16369:16387   */\n      dup3\n      add\n        /* \"#utility.yul\":16362:16402   */\n      mstore\n        /* \"#utility.yul\":16434:16437   */\n      0x80\n        /* \"#utility.yul\":16419:16438   */\n      add\n      swap1\n        /* \"#utility.yul\":16212:16444   */\n      jump\t// out\n        /* \"#utility.yul\":16449:16863   */\n    tag_355:\n        /* \"#utility.yul\":16651:16653   */\n      0x20\n        /* \"#utility.yul\":16633:16654   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16690:16692   */\n      0x32\n        /* \"#utility.yul\":16670:16688   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16663:16693   */\n      mstore\n        /* \"#utility.yul\":16729:16763   */\n      0x426c61636b6c69737461626c653a206e657720626c61636b6c69737465722069\n        /* \"#utility.yul\":16724:16726   */\n      0x40\n        /* \"#utility.yul\":16709:16727   */\n      dup3\n      add\n        /* \"#utility.yul\":16702:16764   */\n      mstore\n      shl(0x70, 0x7320746865207a65726f2061646472657373)\n        /* \"#utility.yul\":16795:16797   */\n      0x60\n        /* \"#utility.yul\":16780:16798   */\n      dup3\n      add\n        /* \"#utility.yul\":16773:16821   */\n      mstore\n        /* \"#utility.yul\":16853:16856   */\n      0x80\n        /* \"#utility.yul\":16838:16857   */\n      add\n      swap1\n        /* \"#utility.yul\":16623:16863   */\n      jump\t// out\n        /* \"#utility.yul\":16868:17269   */\n    tag_174:\n        /* \"#utility.yul\":17070:17072   */\n      0x20\n        /* \"#utility.yul\":17052:17073   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17109:17111   */\n      0x25\n        /* \"#utility.yul\":17089:17107   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17082:17112   */\n      mstore\n        /* \"#utility.yul\":17148:17182   */\n      0x426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c\n        /* \"#utility.yul\":17143:17145   */\n      0x40\n        /* \"#utility.yul\":17128:17146   */\n      dup3\n      add\n        /* \"#utility.yul\":17121:17183   */\n      mstore\n      shl(0xda, 0x1a5cdd1959)\n        /* \"#utility.yul\":17214:17216   */\n      0x60\n        /* \"#utility.yul\":17199:17217   */\n      dup3\n      add\n        /* \"#utility.yul\":17192:17227   */\n      mstore\n        /* \"#utility.yul\":17259:17262   */\n      0x80\n        /* \"#utility.yul\":17244:17263   */\n      add\n      swap1\n        /* \"#utility.yul\":17042:17269   */\n      jump\t// out\n        /* \"#utility.yul\":17274:17628   */\n    tag_264:\n        /* \"#utility.yul\":17476:17478   */\n      0x20\n        /* \"#utility.yul\":17458:17479   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17515:17517   */\n      0x1e\n        /* \"#utility.yul\":17495:17513   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17488:17518   */\n      mstore\n        /* \"#utility.yul\":17554:17586   */\n      0x5553446d3a206d696e7420746f20746865207a65726f20616464726573730000\n        /* \"#utility.yul\":17549:17551   */\n      0x40\n        /* \"#utility.yul\":17534:17552   */\n      dup3\n      add\n        /* \"#utility.yul\":17527:17587   */\n      mstore\n        /* \"#utility.yul\":17619:17621   */\n      0x60\n        /* \"#utility.yul\":17604:17622   */\n      add\n      swap1\n        /* \"#utility.yul\":17448:17628   */\n      jump\t// out\n        /* \"#utility.yul\":17633:18030   */\n    tag_296:\n        /* \"#utility.yul\":17835:17837   */\n      0x20\n        /* \"#utility.yul\":17817:17838   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17874:17876   */\n      0x21\n        /* \"#utility.yul\":17854:17872   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17847:17877   */\n      mstore\n        /* \"#utility.yul\":17913:17947   */\n      0x5553446d3a206275726e20616d6f756e7420657863656564732062616c616e63\n        /* \"#utility.yul\":17908:17910   */\n      0x40\n        /* \"#utility.yul\":17893:17911   */\n      dup3\n      add\n        /* \"#utility.yul\":17886:17948   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":17979:17981   */\n      0x60\n        /* \"#utility.yul\":17964:17982   */\n      dup3\n      add\n        /* \"#utility.yul\":17957:17988   */\n      mstore\n        /* \"#utility.yul\":18020:18023   */\n      0x80\n        /* \"#utility.yul\":18005:18024   */\n      add\n      swap1\n        /* \"#utility.yul\":17807:18030   */\n      jump\t// out\n        /* \"#utility.yul\":18035:18212   */\n    tag_55:\n        /* \"#utility.yul\":18181:18206   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":18169:18171   */\n      0x20\n        /* \"#utility.yul\":18154:18172   */\n      add\n      swap1\n        /* \"#utility.yul\":18136:18212   */\n      jump\t// out\n        /* \"#utility.yul\":18217:18401   */\n    tag_75:\n        /* \"#utility.yul\":18389:18393   */\n      0xff\n        /* \"#utility.yul\":18377:18394   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":18359:18395   */\n      dup2\n      mstore\n        /* \"#utility.yul\":18347:18349   */\n      0x20\n        /* \"#utility.yul\":18332:18350   */\n      add\n      swap1\n        /* \"#utility.yul\":18314:18401   */\n      jump\t// out\n        /* \"#utility.yul\":18406:18534   */\n    tag_275:\n      0x00\n        /* \"#utility.yul\":18477:18478   */\n      dup3\n        /* \"#utility.yul\":18473:18479   */\n      not\n        /* \"#utility.yul\":18470:18471   */\n      dup3\n        /* \"#utility.yul\":18467:18480   */\n      gt\n        /* \"#utility.yul\":18464:18466   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":18483:18501   */\n      tag_552\n      tag_553\n      jump\t// in\n    tag_552:\n      pop\n        /* \"#utility.yul\":18519:18528   */\n      add\n      swap1\n        /* \"#utility.yul\":18454:18534   */\n      jump\t// out\n        /* \"#utility.yul\":18539:18664   */\n    tag_207:\n      0x00\n        /* \"#utility.yul\":18607:18608   */\n      dup3\n        /* \"#utility.yul\":18604:18605   */\n      dup3\n        /* \"#utility.yul\":18601:18609   */\n      lt\n        /* \"#utility.yul\":18598:18600   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":18612:18630   */\n      tag_556\n      tag_553\n      jump\t// in\n    tag_556:\n      pop\n        /* \"#utility.yul\":18649:18658   */\n      sub\n      swap1\n        /* \"#utility.yul\":18588:18664   */\n      jump\t// out\n        /* \"#utility.yul\":18669:18927   */\n    tag_512:\n        /* \"#utility.yul\":18741:18742   */\n      0x00\n        /* \"#utility.yul\":18751:18864   */\n    tag_558:\n        /* \"#utility.yul\":18765:18771   */\n      dup4\n        /* \"#utility.yul\":18762:18763   */\n      dup2\n        /* \"#utility.yul\":18759:18772   */\n      lt\n        /* \"#utility.yul\":18751:18864   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":18841:18852   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":18835:18853   */\n      mload\n        /* \"#utility.yul\":18822:18833   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":18815:18854   */\n      mstore\n        /* \"#utility.yul\":18787:18789   */\n      0x20\n        /* \"#utility.yul\":18780:18790   */\n      add\n        /* \"#utility.yul\":18751:18864   */\n      jump(tag_558)\n    tag_560:\n        /* \"#utility.yul\":18882:18888   */\n      dup4\n        /* \"#utility.yul\":18879:18880   */\n      dup2\n        /* \"#utility.yul\":18876:18889   */\n      gt\n        /* \"#utility.yul\":18873:18875   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":18917:18918   */\n      0x00\n        /* \"#utility.yul\":18908:18914   */\n      dup5\n        /* \"#utility.yul\":18903:18906   */\n      dup5\n        /* \"#utility.yul\":18899:18915   */\n      add\n        /* \"#utility.yul\":18892:18919   */\n      mstore\n        /* \"#utility.yul\":18873:18875   */\n    tag_561:\n      pop\n        /* \"#utility.yul\":18722:18927   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18932:19312   */\n    tag_161:\n        /* \"#utility.yul\":19017:19018   */\n      0x02\n        /* \"#utility.yul\":19007:19019   */\n      dup2\n      div\n        /* \"#utility.yul\":19064:19065   */\n      0x01\n        /* \"#utility.yul\":19054:19066   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":19075:19077   */\n      tag_563\n      jumpi\n        /* \"#utility.yul\":19129:19133   */\n      0x7f\n        /* \"#utility.yul\":19121:19127   */\n      dup3\n        /* \"#utility.yul\":19117:19134   */\n      and\n        /* \"#utility.yul\":19107:19134   */\n      swap2\n      pop\n        /* \"#utility.yul\":19075:19077   */\n    tag_563:\n        /* \"#utility.yul\":19182:19184   */\n      0x20\n        /* \"#utility.yul\":19174:19180   */\n      dup3\n        /* \"#utility.yul\":19171:19185   */\n      lt\n        /* \"#utility.yul\":19151:19169   */\n      dup2\n        /* \"#utility.yul\":19148:19186   */\n      eq\n        /* \"#utility.yul\":19145:19147   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":19228:19238   */\n      0x4e487b71\n        /* \"#utility.yul\":19223:19226   */\n      0xe0\n        /* \"#utility.yul\":19219:19239   */\n      shl\n        /* \"#utility.yul\":19216:19217   */\n      0x00\n        /* \"#utility.yul\":19209:19240   */\n      mstore\n        /* \"#utility.yul\":19263:19267   */\n      0x22\n        /* \"#utility.yul\":19260:19261   */\n      0x04\n        /* \"#utility.yul\":19253:19268   */\n      mstore\n        /* \"#utility.yul\":19291:19295   */\n      0x24\n        /* \"#utility.yul\":19288:19289   */\n      0x00\n        /* \"#utility.yul\":19281:19296   */\n      revert\n        /* \"#utility.yul\":19145:19147   */\n    tag_564:\n      pop\n        /* \"#utility.yul\":18987:19312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19317:19444   */\n    tag_553:\n        /* \"#utility.yul\":19378:19388   */\n      0x4e487b71\n        /* \"#utility.yul\":19373:19376   */\n      0xe0\n        /* \"#utility.yul\":19369:19389   */\n      shl\n        /* \"#utility.yul\":19366:19367   */\n      0x00\n        /* \"#utility.yul\":19359:19390   */\n      mstore\n        /* \"#utility.yul\":19409:19413   */\n      0x11\n        /* \"#utility.yul\":19406:19407   */\n      0x04\n        /* \"#utility.yul\":19399:19414   */\n      mstore\n        /* \"#utility.yul\":19433:19437   */\n      0x24\n        /* \"#utility.yul\":19430:19431   */\n      0x00\n        /* \"#utility.yul\":19423:19438   */\n      revert\n        /* \"#utility.yul\":19449:19576   */\n    tag_467:\n        /* \"#utility.yul\":19510:19520   */\n      0x4e487b71\n        /* \"#utility.yul\":19505:19508   */\n      0xe0\n        /* \"#utility.yul\":19501:19521   */\n      shl\n        /* \"#utility.yul\":19498:19499   */\n      0x00\n        /* \"#utility.yul\":19491:19522   */\n      mstore\n        /* \"#utility.yul\":19541:19545   */\n      0x41\n        /* \"#utility.yul\":19538:19539   */\n      0x04\n        /* \"#utility.yul\":19531:19546   */\n      mstore\n        /* \"#utility.yul\":19565:19569   */\n      0x24\n        /* \"#utility.yul\":19562:19563   */\n      0x00\n        /* \"#utility.yul\":19555:19570   */\n      revert\n        /* \"#utility.yul\":19581:19714   */\n    tag_461:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19658:19689   */\n      dup2\n      and\n        /* \"#utility.yul\":19648:19690   */\n      dup2\n      eq\n        /* \"#utility.yul\":19638:19640   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":19704:19705   */\n      0x00\n        /* \"#utility.yul\":19701:19702   */\n      dup1\n        /* \"#utility.yul\":19694:19706   */\n      revert\n\n    auxdata: 0xa2646970667358221220b2bb6e313408e8027960d000e1d974f2d5bf9d576eb666ca334048cbb38ada9c64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000600c5534801561001557600080fd5b50610026610021610038565b61003c565b6001805460ff60a01b1916905561008c565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612426806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063ad38bf22116100a2578063e5a6b10f11610071578063e5a6b10f146103dc578063f2fde38b146103e4578063f9f92be4146103f7578063fe575a871461040a576101f0565b8063ad38bf221461039b578063b2118a8d146103ae578063bd102430146103c1578063dd62ed3e146103c9576101f0565b80639fd0506d116100de5780639fd0506d1461035a578063a9059cbb14610362578063aa20e1e414610375578063aa271e1a14610388576101f0565b8063715018a61461032f5780638a6db9c3146103375780638da5cb5b1461034a57806395d89b4114610352576101f0565b80633357162b1161018757806342966c681161015657806342966c68146102ee5780634e44d956146103015780635c975abb1461031457806370a082311461031c576101f0565b80633357162b146102ab57806335d99f35146102be57806338a63183146102d357806340c10f19146102db576101f0565b806323b872dd116101c357806323b872dd1461025d5780632ab60045146102705780633092afd514610283578063313ce56714610296576101f0565b806306fdde03146101f5578063095ea7b31461021357806318160ddd146102335780631a89526614610248575b600080fd5b6101fd61041d565b60405161020a9190611ad2565b60405180910390f35b61022661022136600461192f565b6104ab565b60405161020a9190611ac7565b61023b61055c565b60405161020a91906122fe565b61025b61025636600461189b565b610562565b005b61022661026b3660046118ef565b6105d5565b61025b61027e36600461189b565b610751565b61022661029136600461189b565b610800565b61029e610889565b60405161020a9190612307565b61025b6102b936600461198e565b610892565b6102c6610a03565b60405161020a9190611a9a565b6102c6610a12565b6102266102e936600461192f565b610a21565b61025b6102fc366004611a66565b610c8d565b61022661030f36600461192f565b610e07565b610226610ec9565b61023b61032a36600461189b565b610ed9565b61025b610ef4565b61023b61034536600461189b565b610f3f565b6102c6610f5a565b6101fd610f69565b6102c6610f76565b61022661037036600461192f565b610f85565b61025b61038336600461189b565b611022565b61022661039636600461189b565b6110d7565b61025b6103a936600461189b565b6110f5565b61025b6103bc36600461197a565b6111aa565b6102c66111ed565b61023b6103d73660046118b7565b6111fc565b6101fd611227565b61025b6103f236600461189b565b611234565b61025b61040536600461189b565b6112a5565b61022661041836600461189b565b61131b565b6005805461042a90612374565b80601f016020809104026020016040519081016040528092919081815260200182805461045690612374565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b505050505081565b60006104b5610ec9565b156104db5760405162461bcd60e51b81526004016104d290611dc3565b60405180910390fd5b3360008181526003602052604090205460ff161561050b5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff16156105465760405162461bcd60e51b81526004016104d290612241565b610551338686611339565b506001949350505050565b600c5490565b6002546001600160a01b0316331461058c5760405162461bcd60e51b81526004016104d290611ca3565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b60006105df610ec9565b156105fc5760405162461bcd60e51b81526004016104d290611dc3565b3360008181526003602052604090205460ff161561062c5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516600090815260036020526040902054859060ff16156106675760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516600090815260036020526040902054859060ff16156106a25760405162461bcd60e51b81526004016104d290612241565b6001600160a01b0387166000908152600b602090815260408083203384529091529020548511156106e55760405162461bcd60e51b81526004016104d290611eb1565b6106f08787876113e0565b6001600160a01b0387166000908152600b6020908152604080832033845290915290205461071f90869061232d565b6001600160a01b0388166000908152600b60209081526040808320338452909152902055600193505050509392505050565b61075961150a565b6001600160a01b031661076a610f5a565b6001600160a01b0316146107905760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166107b65760405162461bcd60e51b81526004016104d290611c13565b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b6009546000906001600160a01b0316331461082d5760405162461bcd60e51b81526004016104d290612161565b6001600160a01b0382166000818152600d60209081526040808320805460ff19169055600e909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b60075460ff1681565b600954600160a01b900460ff16156108bc5760405162461bcd60e51b81526004016104d290611cef565b6001600160a01b0384166108e25760405162461bcd60e51b81526004016104d290611ffb565b6001600160a01b0383166109085760405162461bcd60e51b81526004016104d290612045565b6001600160a01b03821661092e5760405162461bcd60e51b81526004016104d290611e24565b6001600160a01b0381166109545760405162461bcd60e51b81526004016104d290611b48565b87516109679060059060208b019061175f565b50865161097b9060069060208a019061175f565b50855161098f90600890602089019061175f565b506007805460ff191660ff8716179055600980546001600160a01b03199081166001600160a01b0387811691909117909255600180548216868416179055600280549091169184169190911790556109e68161150e565b50506009805460ff60a01b1916600160a01b179055505050505050565b6009546001600160a01b031681565b6004546001600160a01b031690565b6000610a2b610ec9565b15610a485760405162461bcd60e51b81526004016104d290611dc3565b336000908152600d602052604090205460ff16610a775760405162461bcd60e51b81526004016104d290611ded565b3360008181526003602052604090205460ff1615610aa75760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff1615610ae25760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516610b085760405162461bcd60e51b81526004016104d290612286565b60008411610b285760405162461bcd60e51b81526004016104d290611f2e565b6009546001600160a01b03868116911614610b555760405162461bcd60e51b81526004016104d290612104565b336000908152600e602052604090205480851115610b855760405162461bcd60e51b81526004016104d290611d34565b84600c54610b939190612315565b600c556001600160a01b0386166000908152600a6020526040902054610bba908690612315565b6001600160a01b0387166000908152600a6020526040902055610bdd858261232d565b336000818152600e6020526040908190209290925590516001600160a01b03881691907fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f890610c2d9089906122fe565b60405180910390a3856001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87604051610c7991906122fe565b60405180910390a350600195945050505050565b610c95610ec9565b15610cb25760405162461bcd60e51b81526004016104d290611dc3565b336000908152600d602052604090205460ff16610ce15760405162461bcd60e51b81526004016104d290611ded565b3360008181526003602052604090205460ff1615610d115760405162461bcd60e51b81526004016104d290612241565b336000908152600a602052604090205482610d3e5760405162461bcd60e51b81526004016104d290611fb7565b82811015610d5e5760405162461bcd60e51b81526004016104d2906122bd565b82600c54610d6c919061232d565b600c55610d79838261232d565b336000818152600a6020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590610dbd9086906122fe565b60405180910390a260405160009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dfa9087906122fe565b60405180910390a3505050565b6000610e11610ec9565b15610e2e5760405162461bcd60e51b81526004016104d290611dc3565b6009546001600160a01b03163314610e585760405162461bcd60e51b81526004016104d290612161565b6001600160a01b0383166000818152600d60209081526040808320805460ff19166001179055600e90915290819020849055517f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d2090610eb89085906122fe565b60405180910390a250600192915050565b600154600160a01b900460ff1690565b6001600160a01b03166000908152600a602052604090205490565b610efc61150a565b6001600160a01b0316610f0d610f5a565b6001600160a01b031614610f335760405162461bcd60e51b81526004016104d290611ef9565b610f3d600061150e565b565b6001600160a01b03166000908152600e602052604090205490565b6000546001600160a01b031690565b6006805461042a90612374565b6001546001600160a01b031681565b6000610f8f610ec9565b15610fac5760405162461bcd60e51b81526004016104d290611dc3565b3360008181526003602052604090205460ff1615610fdc5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff16156110175760405162461bcd60e51b81526004016104d290612241565b6105513386866113e0565b61102a61150a565b6001600160a01b031661103b610f5a565b6001600160a01b0316146110615760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166110875760405162461bcd60e51b81526004016104d290611ffb565b600980546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6001600160a01b03166000908152600d602052604090205460ff1690565b6110fd61150a565b6001600160a01b031661110e610f5a565b6001600160a01b0316146111345760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b03811661115a5760405162461bcd60e51b81526004016104d2906121ef565b600280546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6004546001600160a01b031633146111d45760405162461bcd60e51b81526004016104d290611e6d565b6111e86001600160a01b038416838361155e565b505050565b6002546001600160a01b031681565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205490565b6008805461042a90612374565b61123c61150a565b6001600160a01b031661124d610f5a565b6001600160a01b0316146112735760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166112995760405162461bcd60e51b81526004016104d290611b8b565b6112a28161150e565b50565b6002546001600160a01b031633146112cf5760405162461bcd60e51b81526004016104d290611ca3565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526003602052604090205460ff1690565b6001600160a01b03831661135f5760405162461bcd60e51b81526004016104d290612089565b6001600160a01b0382166113855760405162461bcd60e51b81526004016104d290611bd1565b6001600160a01b038084166000818152600b602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610dfa9085906122fe565b6001600160a01b0383166114065760405162461bcd60e51b81526004016104d290611f72565b6001600160a01b03821661142c5760405162461bcd60e51b81526004016104d290611b05565b6001600160a01b0383166000908152600a60205260409020548111156114645760405162461bcd60e51b81526004016104d290611c5d565b6001600160a01b0383166000908152600a602052604090205461148890829061232d565b6001600160a01b038085166000908152600a602052604080822093909355908416815220546114b8908290612315565b6001600160a01b038084166000818152600a602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dfa9085906122fe565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111e88363a9059cbb60e01b848460405160240161157d929190611aae565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000611604826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661163e9092919063ffffffff16565b8051909150156111e85780806020019051810190611622919061195a565b6111e85760405162461bcd60e51b81526004016104d2906121a5565b606061164d8484600085611657565b90505b9392505050565b6060824710156116795760405162461bcd60e51b81526004016104d290611d7d565b61168285611717565b61169e5760405162461bcd60e51b81526004016104d2906120cd565b600080866001600160a01b031685876040516116ba9190611a7e565b60006040518083038185875af1925050503d80600081146116f7576040519150601f19603f3d011682016040523d82523d6000602084013e6116fc565b606091505b509150915061170c828286611726565b979650505050505050565b6001600160a01b03163b151590565b60608315611735575081611650565b8251156117455782518084602001fd5b8160405162461bcd60e51b81526004016104d29190611ad2565b82805461176b90612374565b90600052602060002090601f01602090048101928261178d57600085556117d3565b82601f106117a657805160ff19168380011785556117d3565b828001600101855582156117d3579182015b828111156117d35782518255916020019190600101906117b8565b506117df9291506117e3565b5090565b5b808211156117df57600081556001016117e4565b8035610884816123db565b600082601f830112611813578081fd5b813567ffffffffffffffff8082111561182e5761182e6123c5565b604051601f8301601f19908116603f01168101908282118183101715611856576118566123c5565b8160405283815286602085880101111561186e578485fd5b8360208701602083013792830160200193909352509392505050565b803560ff8116811461088457600080fd5b6000602082840312156118ac578081fd5b8135611650816123db565b600080604083850312156118c9578081fd5b82356118d4816123db565b915060208301356118e4816123db565b809150509250929050565b600080600060608486031215611903578081fd5b833561190e816123db565b9250602084013561191e816123db565b929592945050506040919091013590565b60008060408385031215611941578182fd5b823561194c816123db565b946020939093013593505050565b60006020828403121561196b578081fd5b81518015158114611650578182fd5b600080600060608486031215611903578283fd5b600080600080600080600080610100898b0312156119aa578384fd5b883567ffffffffffffffff808211156119c1578586fd5b6119cd8c838d01611803565b995060208b01359150808211156119e2578586fd5b6119ee8c838d01611803565b985060408b0135915080821115611a03578586fd5b50611a108b828c01611803565b965050611a1f60608a0161188a565b9450611a2d60808a016117f8565b9350611a3b60a08a016117f8565b9250611a4960c08a016117f8565b9150611a5760e08a016117f8565b90509295985092959890939650565b600060208284031215611a77578081fd5b5035919050565b60008251611a90818460208701612344565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611af1816040850160208701612344565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5553446d3a206e6577206f776e657220697320746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602a908201527f526573637561626c653a206e6577207265736375657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526025908201527f5553446d3a20636f6e747261637420697320616c726561647920696e697469616040820152641b1a5e995960da1b606082015260800190565b60208082526029908201527f5553446d3a206d696e7420616d6f756e742065786365656473206d696e746572604082015268416c6c6f77616e636560b81b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601c908201527f5553446d3a2063616c6c6572206973206e6f742061206d696e74657200000000604082015260600190565b60208082526029908201527f5553446d3a206e657720626c61636b6c697374657220697320746865207a65726040820152686f206164647265737360b81b606082015260800190565b60208082526024908201527f526573637561626c653a2063616c6c6572206973206e6f74207468652072657360408201526331bab2b960e11b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526024908201527f5553446d3a206d696e7420616d6f756e74206e6f7420677265617465722074686040820152630616e20360e41b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f5553446d3a206275726e20616d6f756e74206e6f7420677265617465722074686040820152630616e20360e41b606082015260800190565b6020808252602a908201527f5553446d3a206e6577206d61737465724d696e74657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526024908201527f5553446d3a206e65772070617573657220697320746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252603b908201527f5553446d3a204d696e746572732063616e206f6e6c79206d696e7420746f6b6560408201527f6e7320746f206d6173746572206d696e74657220616464726573730000000000606082015260800190565b60208082526024908201527f5553446d3a2063616c6c6572206973206e6f7420746865206d61737465724d69604082015263373a32b960e11b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526032908201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696040820152717320746865207a65726f206164647265737360701b606082015260800190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252601e908201527f5553446d3a206d696e7420746f20746865207a65726f20616464726573730000604082015260600190565b60208082526021908201527f5553446d3a206275726e20616d6f756e7420657863656564732062616c616e636040820152606560f81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115612328576123286123af565b500190565b60008282101561233f5761233f6123af565b500390565b60005b8381101561235f578181015183820152602001612347565b8381111561236e576000848401525b50505050565b60028104600182168061238857607f821691505b602082108114156123a957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112a257600080fdfea2646970667358221220b2bb6e313408e8027960d000e1d974f2d5bf9d576eb666ca334048cbb38ada9c64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26 PUSH2 0x21 PUSH2 0x38 JUMP JUMPDEST PUSH2 0x3C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x8C JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2426 DUP1 PUSH3 0x9C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xAD38BF22 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5A6B10F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x40A JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xAD38BF22 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xBD102430 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x9FD0506D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xAA20E1E4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x388 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8A6DB9C3 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x352 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3357162B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x4E44D956 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3357162B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x35D99F35 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x296 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x1A895266 EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x226 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x25B PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x197A JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x131B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x2374 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x551 CALLER DUP7 DUP7 PUSH2 0x1339 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x6F0 DUP8 DUP8 DUP8 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x71F SWAP1 DUP7 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x759 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP2 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x967 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP12 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP DUP7 MLOAD PUSH2 0x97B SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x98F SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x9E6 DUP2 PUSH2 0x150E JUMP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP6 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBBA SWAP1 DUP7 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xBDD DUP6 DUP3 PUSH2 0x232D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH32 0xAB8530F87DC9B59234C4623BF917212BB2536D647574C8E7E5DA92C2EDE0C9F8 SWAP1 PUSH2 0xC2D SWAP1 DUP10 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC95 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST DUP3 PUSH1 0xC SLOAD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xD79 DUP4 DUP3 PUSH2 0x232D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH2 0xDBD SWAP1 DUP7 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDFA SWAP1 DUP8 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x46980FCA912EF9BCDBD36877427B6B90E860769F604E89C0E67720CECE530D20 SWAP1 PUSH2 0xEB8 SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEFC PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF0D PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0xF3D PUSH1 0x0 PUSH2 0x150E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1017 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x551 CALLER DUP7 DUP7 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x102A PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103B PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xDB66DFA9C6B8F5226FE9AAC7E51897AE8EE94AC31DC70BB6C9900B2574B707E6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x10FD PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x110E PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xC67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x11E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x155E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH2 0x123C PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x124D PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x12A2 DUP2 PUSH2 0x150E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xDFA SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x142C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1488 SWAP1 DUP3 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14B8 SWAP1 DUP3 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDFA SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11E8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x157D SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1604 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x163E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11E8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x11E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x164D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1682 DUP6 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16BA SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x170C DUP3 DUP3 DUP7 PUSH2 0x1726 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1735 JUMPI POP DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1745 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x176B SWAP1 PUSH2 0x2374 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x178D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x17D3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17D3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17D3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17D3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17B8 JUMP JUMPDEST POP PUSH2 0x17DF SWAP3 SWAP2 POP PUSH2 0x17E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17DF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17E4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x884 DUP2 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1813 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182E PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1856 PUSH2 0x23C5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x186E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1650 DUP2 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18D4 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18E4 DUP2 PUSH2 0x23DB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x190E DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x191E DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1941 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x194C DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1650 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x19AA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C1 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x19CD DUP13 DUP4 DUP14 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E2 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x19EE DUP13 DUP4 DUP14 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A03 JUMPI DUP6 DUP7 REVERT JUMPDEST POP PUSH2 0x1A10 DUP12 DUP3 DUP13 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x1A1F PUSH1 0x60 DUP11 ADD PUSH2 0x188A JUMP JUMPDEST SWAP5 POP PUSH2 0x1A2D PUSH1 0x80 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B PUSH1 0xA0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A49 PUSH1 0xC0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 PUSH1 0xE0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A90 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2344 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AF1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E6577206F776E657220697320746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A206E6577207265736375657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x10313630B1B5B634B9BA32B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A20636F6E747261637420697320616C726561647920696E69746961 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x1B1A5E9959 PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420616D6F756E742065786365656473206D696E746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x416C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A2063616C6C6572206973206E6F742061206D696E74657200000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E657720626C61636B6C697374657220697320746865207A6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A2063616C6C6572206973206E6F742074686520726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31BAB2B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420616D6F756E74206E6F742067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206275726E20616D6F756E74206E6F742067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E6577206D61737465724D696E74657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E65772070617573657220697320746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A204D696E746572732063616E206F6E6C79206D696E7420746F6B65 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E7320746F206D6173746572206D696E74657220616464726573730000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A2063616C6C6572206973206E6F7420746865206D61737465724D69 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x373A32B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x7320746865207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206163636F756E7420697320626C61636B6C PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x1A5CDD1959 PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420746F20746865207A65726F20616464726573730000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206275726E20616D6F756E7420657863656564732062616C616E63 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2328 PUSH2 0x23AF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233F PUSH2 0x23AF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x235F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2347 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x236E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2388 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBB PUSH15 0x313408E8027960D000E1D974F2D5BF SWAP14 JUMPI PUSH15 0xB666CA334048CBB38ADA9C64736F6C PUSH4 0x43000801 STOP CALLER ",
							"sourceMap": "1417:10473:9:-:0;;;1833:1;1801:33;;1417:10473;;;;;;;;;-1:-1:-1;942:32:5;961:12;:10;:12::i;:::-;942:18;:32::i;:::-;1091:7:6;:15;;-1:-1:-1;;;;1091:15:6;;;1417:10473:9;;656:98:3;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;1417:10473:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19716:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "140:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "113:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:10",
														"type": ""
													}
												],
												"src": "14:138:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:686:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "261:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "270:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "277:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "263:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "263:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "263:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "240:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "248:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "236:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "236:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "232:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "232:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:35:10"
															},
															"nodeType": "YulIf",
															"src": "222:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "294:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "317:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "298:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "333:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "343:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "337:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "384:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "386:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "386:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "386:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "376:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "380:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:10:10"
															},
															"nodeType": "YulIf",
															"src": "370:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "429:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "425:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:7:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "419:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "441:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "461:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "455:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "445:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "473:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "519:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "523:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "515:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "515:13:10"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "530:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "511:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "511:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "535:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "507:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "507:31:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "540:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "503:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "491:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "477:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "605:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "574:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "559:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "559:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "582:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "594:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "579:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "579:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "556:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:46:10"
															},
															"nodeType": "YulIf",
															"src": "553:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "645:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "634:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "634:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "672:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "680:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "731:24:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "740:5:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "747:5:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "733:20:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "733:20:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "706:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "714:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "702:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "702:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "719:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "698:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "726:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:35:10"
															},
															"nodeType": "YulIf",
															"src": "692:2:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "789:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "808:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "796:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "796:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "815:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "764:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "764:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "764:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "842:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "850:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "838:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "838:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "855:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:26:10"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "862:5:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "827:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "877:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "886:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "877:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "186:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "194:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "202:5:10",
														"type": ""
													}
												],
												"src": "157:741:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:109:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "984:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "971:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "962:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1039:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1048:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1051:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1041:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1041:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1041:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1013:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1024:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1031:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1020:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1020:16:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1010:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1010:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:35:10"
															},
															"nodeType": "YulIf",
															"src": "1000:2:10"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "931:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "942:5:10",
														"type": ""
													}
												],
												"src": "903:158:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1136:189:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1182:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1191:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1199:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1184:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1184:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1184:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1157:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1166:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1153:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1149:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:32:10"
															},
															"nodeType": "YulIf",
															"src": "1146:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1217:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1243:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1221:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1289:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1262:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1262:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1304:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1314:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1304:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1102:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1113:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1125:6:10",
														"type": ""
													}
												],
												"src": "1066:259:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1417:315:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1463:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1472:6:10"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1480:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1465:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1465:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1465:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1438:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1447:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1434:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1434:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1430:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:32:10"
															},
															"nodeType": "YulIf",
															"src": "1427:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1498:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1524:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1511:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1502:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1570:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1543:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1585:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1595:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1609:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1641:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1652:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1637:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1637:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1624:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1613:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1692:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1665:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1665:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1709:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1719:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1375:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1386:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1398:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1406:6:10",
														"type": ""
													}
												],
												"src": "1330:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1841:366:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1896:6:10"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1904:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1862:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1871:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1858:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:32:10"
															},
															"nodeType": "YulIf",
															"src": "1851:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1922:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1948:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1926:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1994:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1967:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1967:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2009:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2019:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2033:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2065:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2076:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2048:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2037:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2089:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2089:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2089:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2133:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2143:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2159:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2186:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2197:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2182:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2169:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2169:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2159:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1791:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1802:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1814:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1822:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1830:6:10",
														"type": ""
													}
												],
												"src": "1737:470:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2299:240:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2345:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2354:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2362:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2347:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2347:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2347:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2320:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2312:32:10"
															},
															"nodeType": "YulIf",
															"src": "2309:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2380:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2406:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2393:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2384:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2452:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2425:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2467:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2477:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2467:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2491:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2518:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2529:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2514:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2514:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2501:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2257:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2268:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2280:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2288:6:10",
														"type": ""
													}
												],
												"src": "2212:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:219:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2677:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2685:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nodeType": "YulIf",
															"src": "2632:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2703:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2716:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2707:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2794:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2802:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2754:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2775:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2768:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2768:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2761:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2761:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2751:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:40:10"
															},
															"nodeType": "YulIf",
															"src": "2741:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2820:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2830:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2820:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2588:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2599:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:10",
														"type": ""
													}
												],
												"src": "2544:297:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:366:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3010:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3019:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3027:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3012:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3012:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3012:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2985:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3006:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:32:10"
															},
															"nodeType": "YulIf",
															"src": "2974:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3045:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3071:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3058:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3049:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3117:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3090:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3142:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3156:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3188:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3171:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:32:10"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3160:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3239:7:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3212:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3212:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3256:17:10",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3266:7:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3282:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3320:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3292:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3282:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$549t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2914:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2925:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2937:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2945:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2953:6:10",
														"type": ""
													}
												],
												"src": "2846:484:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3552:953:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3599:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3608:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3616:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3601:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3601:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3601:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3573:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3582:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3569:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3569:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3594:3:10",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:33:10"
															},
															"nodeType": "YulIf",
															"src": "3562:2:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3634:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3661:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3648:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3648:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3638:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3680:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3690:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3684:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3744:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3752:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3737:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3723:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3731:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3720:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:14:10"
															},
															"nodeType": "YulIf",
															"src": "3717:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3770:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3815:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3800:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3800:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3824:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "3780:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3780:52:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3841:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3857:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3857:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3845:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3918:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3927:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3935:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3920:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3920:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3920:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3904:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3914:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3901:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:16:10"
															},
															"nodeType": "YulIf",
															"src": "3898:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3953:64:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3998:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4009:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "3963:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:54:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4026:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4042:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:32:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4030:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4103:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4112:6:10"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4120:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4105:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4105:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4105:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4089:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4099:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4086:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:16:10"
															},
															"nodeType": "YulIf",
															"src": "4083:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4138:64:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4183:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4194:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "4148:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:54:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4211:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4244:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4255:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4221:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:38:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4268:51:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4314:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4299:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4278:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:41:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4328:51:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4363:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4374:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4359:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4338:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:41:10"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4388:51:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4423:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4434:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4419:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4398:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4398:41:10"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4448:51:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4483:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4494:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4458:20:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:41:10"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3462:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3473:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3485:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3493:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3501:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3509:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3517:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3525:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3533:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3541:6:10",
														"type": ""
													}
												],
												"src": "3335:1170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4580:120:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4626:26:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4635:6:10"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4643:6:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4628:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4628:22:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4628:22:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4601:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4610:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4597:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4622:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4593:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:32:10"
															},
															"nodeType": "YulIf",
															"src": "4590:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4661:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4671:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4661:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4546:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4557:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4569:6:10",
														"type": ""
													}
												],
												"src": "4510:190:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4842:137:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4852:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4872:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4866:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4866:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4856:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4914:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4922:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4934:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4888:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4888:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4950:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4961:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4966:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4818:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4823:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4834:3:10",
														"type": ""
													}
												],
												"src": "4705:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5085:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5095:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5107:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5103:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5103:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5095:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5152:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5168:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5173:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5164:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5164:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5177:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5160:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5160:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5148:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5054:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5065:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5076:4:10",
														"type": ""
													}
												],
												"src": "4984:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5321:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5331:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5343:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5354:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5339:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5339:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5331:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5373:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5388:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5404:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5409:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5400:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5400:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5413:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5396:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5396:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5366:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5366:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5453:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5282:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5293:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5301:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5312:4:10",
														"type": ""
													}
												],
												"src": "5192:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5566:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5576:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5588:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5576:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5618:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5643:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5636:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5636:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5629:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5629:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5611:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5611:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5546:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5557:4:10",
														"type": ""
													}
												],
												"src": "5471:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5784:262:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5801:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5812:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5794:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5824:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5844:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5838:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5828:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5871:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5882:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5867:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5867:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5887:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5860:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5860:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5860:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5937:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5946:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5957:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5942:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5942:18:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5962:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5903:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5978:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6013:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6021:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6009:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6009:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6030:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6026:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6026:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6005:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6005:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5990:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5990:45:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6037:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5986:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5986:54:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5978:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5753:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5764:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5775:4:10",
														"type": ""
													}
												],
												"src": "5663:383:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6225:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6242:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6235:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6235:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6235:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6287:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6272:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6292:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6265:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6315:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6326:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6311:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6331:34:10",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6304:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6304:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6304:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6386:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6397:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6402:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6375:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6375:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6375:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6417:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6429:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6440:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6425:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6425:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6417:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6202:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6216:4:10",
														"type": ""
													}
												],
												"src": "6051:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6629:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6646:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6639:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6639:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6680:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6691:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6676:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6669:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6719:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6730:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6715:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6715:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6735:34:10",
																		"type": "",
																		"value": "USDm: new owner is the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6790:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6801:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6786:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6786:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6806:5:10",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6779:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6779:33:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6821:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6833:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6844:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2811ffd61d2434357952ed306cb143c7e5605a229b466aa40c1fbaf4674dbe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6606:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6620:4:10",
														"type": ""
													}
												],
												"src": "6455:399:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7033:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7050:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7043:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7100:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7123:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7134:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7119:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7119:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7139:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7205:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7190:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7210:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7183:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7228:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7240:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7251:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7236:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7236:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7228:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7010:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7024:4:10",
														"type": ""
													}
												],
												"src": "6859:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7440:224:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7457:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7468:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7450:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7450:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7502:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7507:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7480:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7480:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7530:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7541:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7526:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7526:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7546:34:10",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7519:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7519:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7519:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7601:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7612:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7617:4:10",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7417:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7431:4:10",
														"type": ""
													}
												],
												"src": "7266:398:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7843:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7860:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7871:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7853:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7853:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7905:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7890:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7883:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7933:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7944:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7929:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7929:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7949:34:10",
																		"type": "",
																		"value": "Rescuable: new rescuer is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8004:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8015:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8000:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8000:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8020:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7993:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7993:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7993:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8054:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8065:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8050:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7820:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7834:4:10",
														"type": ""
													}
												],
												"src": "7669:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8254:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8271:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8282:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8264:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8264:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8264:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8305:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8316:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8321:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8294:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8294:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8344:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8355:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8340:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8360:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8333:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8426:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8411:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8431:8:10",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8404:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8404:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8449:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8461:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8457:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8457:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8449:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8231:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8245:4:10",
														"type": ""
													}
												],
												"src": "8080:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8661:234:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8678:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8689:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8671:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8671:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8712:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8723:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8708:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8728:2:10",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8701:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8701:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8751:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8762:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8747:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8747:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8767:34:10",
																		"type": "",
																		"value": "Blacklistable: caller is not the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8740:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8833:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8818:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8838:14:10",
																		"type": "",
																		"value": " blacklister"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8811:42:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8862:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8874:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8885:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8870:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8862:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8638:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8652:4:10",
														"type": ""
													}
												],
												"src": "8487:408:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9074:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9091:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9102:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9084:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9084:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9136:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9121:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9114:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9114:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9180:34:10",
																		"type": "",
																		"value": "USDm: contract is already initia"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9235:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9246:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9231:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9251:7:10",
																		"type": "",
																		"value": "lized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9224:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9268:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9280:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9291:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9276:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9276:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9268:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_487ab07a77a6966615a257c4a90c8e83394bb2eea4dcab4e93f67ca70a59b887__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9051:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9065:4:10",
														"type": ""
													}
												],
												"src": "8900:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9480:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9497:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9508:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9490:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9490:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9490:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9531:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9542:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9527:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9520:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9520:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9586:34:10",
																		"type": "",
																		"value": "USDm: mint amount exceeds minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9641:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9652:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9637:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9657:11:10",
																		"type": "",
																		"value": "Allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9630:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9678:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9690:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9701:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9686:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9686:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9678:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4fd17682d223d8da40dbe6a11d3c9c214a27919cce09d778d511198e337d231f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9457:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9471:4:10",
														"type": ""
													}
												],
												"src": "9306:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9890:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9907:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9918:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9900:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9900:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9900:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9941:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9952:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9937:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9937:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9957:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9930:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9930:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9930:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9980:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9991:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9976:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9996:34:10",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9969:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9969:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10051:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10062:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10047:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10067:8:10",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10040:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10040:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10085:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10097:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10108:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10085:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9867:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9881:4:10",
														"type": ""
													}
												],
												"src": "9716:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10297:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10314:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10307:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10348:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10359:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10344:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10344:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10364:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10337:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10337:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10387:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10398:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10383:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10383:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10403:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10376:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10431:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10443:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10454:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10439:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10431:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10274:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10288:4:10",
														"type": ""
													}
												],
												"src": "10123:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10659:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10652:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10693:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10704:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10689:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10709:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10682:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10682:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10732:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10743:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10728:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10748:30:10",
																		"type": "",
																		"value": "USDm: caller is not a minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10721:58:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10788:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10800:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10811:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10796:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10796:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10788:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_774b6ca13fbb7bf84e09ed35613c13062981b39647173daf54f4f61d7c813ea7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10619:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10633:4:10",
														"type": ""
													}
												],
												"src": "10468:352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10999:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11016:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11027:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11009:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11009:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11009:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11050:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11061:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11046:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11066:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11039:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11089:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11100:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11085:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11085:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11105:34:10",
																		"type": "",
																		"value": "USDm: new blacklister is the zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11078:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11078:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11078:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11160:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11171:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11156:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11176:11:10",
																		"type": "",
																		"value": "o address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11149:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11197:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11209:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11220:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11205:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11205:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11197:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84f8be079f1fc6a290015693f3cd08f7ea691b438dec36a73867ea895cd3583d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10976:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10990:4:10",
														"type": ""
													}
												],
												"src": "10825:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11409:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11426:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11437:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11419:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11419:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11419:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11471:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11456:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11456:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11476:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11449:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11449:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11499:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11510:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11495:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11515:34:10",
																		"type": "",
																		"value": "Rescuable: caller is not the res"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11488:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11488:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11570:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11581:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11566:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11566:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11586:6:10",
																		"type": "",
																		"value": "cuer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11559:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11559:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11559:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11602:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11614:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11625:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11610:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11610:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11602:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11386:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11400:4:10",
														"type": ""
													}
												],
												"src": "11235:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11814:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11831:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11842:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11824:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11824:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11865:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11876:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11861:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11881:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11854:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11854:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11854:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11904:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11915:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11900:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11920:34:10",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11893:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11893:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11975:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11986:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11971:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11991:10:10",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11964:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11964:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11964:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12011:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12023:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12034:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12019:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12011:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11791:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11805:4:10",
														"type": ""
													}
												],
												"src": "11640:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12223:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12240:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12251:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12274:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12285:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12270:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12270:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12290:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12263:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12263:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12263:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12313:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12324:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12309:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12309:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12329:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12302:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12302:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12373:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12385:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12396:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12381:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12381:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12373:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12200:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12214:4:10",
														"type": ""
													}
												],
												"src": "12049:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12584:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12601:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12612:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12594:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12594:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12635:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12646:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12631:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12651:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12624:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12624:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12685:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12670:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12690:34:10",
																		"type": "",
																		"value": "USDm: mint amount not greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12663:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12663:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12745:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12756:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12741:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12761:6:10",
																		"type": "",
																		"value": "an 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12734:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12734:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12777:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12789:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12800:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12785:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12785:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12777:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a567f55e07925e66ec6bb74444425f764ad5c4d0b1a99bc374d9d88654760e6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12561:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12575:4:10",
														"type": ""
													}
												],
												"src": "12410:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12989:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13006:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12999:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12999:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12999:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13040:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13051:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13036:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13036:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13056:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13029:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13029:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13079:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13090:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13075:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13075:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13095:34:10",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13068:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13068:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13068:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13150:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13161:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13146:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13166:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13139:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13139:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13139:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13183:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13195:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13206:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13191:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13183:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12966:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12980:4:10",
														"type": ""
													}
												],
												"src": "12815:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13395:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13412:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13423:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13405:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13405:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13405:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13446:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13457:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13442:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13462:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13435:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13435:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13485:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13496:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13481:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13481:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13501:34:10",
																		"type": "",
																		"value": "USDm: burn amount not greater th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13474:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13474:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13556:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13567:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13552:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13552:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13572:6:10",
																		"type": "",
																		"value": "an 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13545:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13545:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13545:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13588:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13600:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13611:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13596:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13596:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13588:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bee3ce0829532c89253a9842e7ed210c693215ae99eaca599e7260f235976b1f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13372:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13386:4:10",
														"type": ""
													}
												],
												"src": "13221:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13800:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13817:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13828:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13810:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13810:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13810:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13851:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13862:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13847:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13867:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13840:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13840:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13840:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13890:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13901:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13886:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13906:34:10",
																		"type": "",
																		"value": "USDm: new masterMinter is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13879:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13879:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13961:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13972:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13957:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13957:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13977:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13950:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13950:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13950:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13999:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14011:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14022:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14007:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14007:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13999:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13777:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13791:4:10",
														"type": ""
													}
												],
												"src": "13626:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14211:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14228:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14239:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14221:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14221:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14262:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14273:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14258:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14258:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14278:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14251:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14251:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14251:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14301:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14312:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14317:34:10",
																		"type": "",
																		"value": "USDm: new pauser is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14372:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14383:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14368:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14388:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14361:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14361:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14361:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14404:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14427:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14404:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c93055f798d3a82fbbf08971efec49acd2286b4109c6080c74916ed7c970fbe8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14188:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14202:4:10",
														"type": ""
													}
												],
												"src": "14037:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14616:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14633:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14644:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14626:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14626:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14626:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14667:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14678:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14663:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14663:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14683:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14656:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14656:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14706:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14717:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14702:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14722:34:10",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14695:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14788:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14773:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14793:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14766:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14766:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14809:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14821:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14832:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14817:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14809:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14593:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14607:4:10",
														"type": ""
													}
												],
												"src": "14442:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15021:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15038:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15049:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15031:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15031:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15031:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15072:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15083:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15068:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15068:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15088:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15061:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15061:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15061:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15111:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15122:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15107:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15107:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15127:31:10",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15100:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15100:59:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15168:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15180:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15191:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15176:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15176:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15168:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14998:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15012:4:10",
														"type": ""
													}
												],
												"src": "14847:353:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15379:249:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15396:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15407:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15389:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15389:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15389:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15430:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15441:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15426:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15426:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15446:2:10",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15419:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15419:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15419:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15480:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15465:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15485:34:10",
																		"type": "",
																		"value": "USDm: Minters can only mint toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15458:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15458:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15540:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15551:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15536:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15536:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15556:29:10",
																		"type": "",
																		"value": "ns to master minter address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15529:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15529:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15595:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15607:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15618:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15603:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15603:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15595:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d272d3a1ec4ba03d63250151f371a25c4814ebdfe4b4caaafe1c23f26e3177bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15356:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15370:4:10",
														"type": ""
													}
												],
												"src": "15205:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15807:226:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15824:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15835:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15817:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15817:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15817:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15858:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15869:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15854:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15854:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15874:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15847:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15847:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15897:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15908:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15893:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15893:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15913:34:10",
																		"type": "",
																		"value": "USDm: caller is not the masterMi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15886:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15886:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15886:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15968:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15979:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15964:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15964:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15984:6:10",
																		"type": "",
																		"value": "nter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15957:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15957:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15957:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16000:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16012:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16023:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16008:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16000:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddc2784748a661cec545aeae43a86030afef96ae12435e8b3b03b55c1bc348a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15784:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15798:4:10",
														"type": ""
													}
												],
												"src": "15633:400:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16212:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16229:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16240:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16222:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16222:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16222:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16263:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16274:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16259:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16259:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16279:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16252:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16252:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16302:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16313:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16298:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16298:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16318:34:10",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16291:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16291:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16291:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16373:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16384:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16369:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16389:12:10",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16362:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16362:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16411:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16423:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16434:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16419:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16419:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16411:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16189:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16203:4:10",
														"type": ""
													}
												],
												"src": "16038:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16623:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16640:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16651:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16633:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16633:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16633:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16674:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16685:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16670:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16670:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16690:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16663:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16663:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16663:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16713:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16724:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16709:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16709:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16729:34:10",
																		"type": "",
																		"value": "Blacklistable: new blacklister i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16702:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16702:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16702:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16784:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16795:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16780:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16780:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16800:20:10",
																		"type": "",
																		"value": "s the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16773:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16773:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16773:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16830:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16842:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16853:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16838:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16830:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16600:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16614:4:10",
														"type": ""
													}
												],
												"src": "16449:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17042:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17059:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17070:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17052:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17052:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17052:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17093:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17104:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17089:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17089:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17109:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17082:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17082:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17132:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17143:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17128:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17128:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17148:34:10",
																		"type": "",
																		"value": "Blacklistable: account is blackl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17121:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17121:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17121:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17203:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17214:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17199:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17199:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17219:7:10",
																		"type": "",
																		"value": "isted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17192:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17192:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17192:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17236:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17248:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17259:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17244:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17244:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17236:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecc963872328e737973a951071ec1f96e85ec0606c61c24700f2fd1c45dc519d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17019:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17033:4:10",
														"type": ""
													}
												],
												"src": "16868:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17448:180:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17465:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17476:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17458:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17458:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17499:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17510:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17495:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17515:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17488:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17488:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17538:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17549:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17534:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17534:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17554:32:10",
																		"type": "",
																		"value": "USDm: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17527:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17527:60:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17527:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17596:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17608:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17619:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17604:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17604:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17596:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f465e639586529250a3ffaba5cbd709914d8e15c7092fee3971768a3ae6075e2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17425:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17439:4:10",
														"type": ""
													}
												],
												"src": "17274:354:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17807:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17824:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17835:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17817:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17817:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17817:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17858:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17869:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17854:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17854:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17874:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17847:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17847:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17897:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17908:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17893:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17893:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17913:34:10",
																		"type": "",
																		"value": "USDm: burn amount exceeds balanc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17886:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17886:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17886:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17968:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17979:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17964:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17964:18:10"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17984:3:10",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17957:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17957:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17957:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17997:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18009:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18020:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18005:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18005:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17997:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff06c765b1d552d6320941b06703cf3f70064075d3bd813c36409541c39763a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17784:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17798:4:10",
														"type": ""
													}
												],
												"src": "17633:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18136:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18146:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18158:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18169:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18154:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18146:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18188:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18199:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18181:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18181:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18181:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18105:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18116:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18127:4:10",
														"type": ""
													}
												],
												"src": "18035:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18314:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18324:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18336:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18347:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18332:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18324:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18366:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18381:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18389:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18377:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18359:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18359:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18359:36:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18283:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18294:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18305:4:10",
														"type": ""
													}
												],
												"src": "18217:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18454:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18481:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18483:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18483:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18483:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18470:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18477:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18473:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18473:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18467:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18467:13:10"
															},
															"nodeType": "YulIf",
															"src": "18464:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18512:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18523:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18526:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18519:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18519:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18512:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18437:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18440:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18446:3:10",
														"type": ""
													}
												],
												"src": "18406:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18588:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18610:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18612:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18612:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18612:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18604:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18607:1:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18601:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18601:8:10"
															},
															"nodeType": "YulIf",
															"src": "18598:2:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18641:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18653:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18656:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18649:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18649:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18641:4:10"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18570:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18573:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18579:4:10",
														"type": ""
													}
												],
												"src": "18539:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18722:205:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18732:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18741:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18736:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18801:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18826:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18831:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18822:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18822:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "18845:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18850:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18841:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18841:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18835:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18835:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18815:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18815:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18815:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18762:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18765:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18759:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18759:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18773:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18775:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18784:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18787:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18780:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18780:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18775:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18755:3:10",
																"statements": []
															},
															"src": "18751:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18890:31:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18903:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "18908:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18899:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18899:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18917:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18892:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18892:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18892:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18879:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18882:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18876:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18876:13:10"
															},
															"nodeType": "YulIf",
															"src": "18873:2:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18700:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18705:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18710:6:10",
														"type": ""
													}
												],
												"src": "18669:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18987:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18997:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19011:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19017:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19007:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19007:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18997:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19028:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19058:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19064:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19054:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19054:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "19032:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19105:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19107:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "19121:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19129:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "19117:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19117:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19107:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19085:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19078:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19078:26:10"
															},
															"nodeType": "YulIf",
															"src": "19075:2:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19195:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19216:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19223:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19228:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "19219:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19219:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19209:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19209:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19209:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19260:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19263:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19253:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19253:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19253:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19288:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19291:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19281:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19281:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19281:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "19151:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19174:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19182:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "19171:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19171:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "19148:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19148:38:10"
															},
															"nodeType": "YulIf",
															"src": "19145:2:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18967:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18976:6:10",
														"type": ""
													}
												],
												"src": "18932:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19349:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19366:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19373:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19378:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19369:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19359:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19359:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19359:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19406:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19409:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19399:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19399:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19399:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19430:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19433:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19423:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19423:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19423:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19317:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19481:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19498:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19505:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19510:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19501:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19501:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19491:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19491:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19491:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19538:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19541:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19531:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19531:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19531:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19562:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19565:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19555:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19555:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19555:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "19449:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19628:86:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19692:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19701:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19704:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19694:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19694:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19694:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19651:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19662:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19677:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19682:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "19673:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19673:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19686:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "19669:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19669:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19658:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19658:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19648:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19648:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19641:50:10"
															},
															"nodeType": "YulIf",
															"src": "19638:2:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19617:5:10",
														"type": ""
													}
												],
												"src": "19581:133:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_t_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$549t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint8t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value4, value4) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_string(add(headStart, offset_2), dataEnd)\n        value3 := abi_decode_t_uint8(add(headStart, 96))\n        value4 := abi_decode_t_address(add(headStart, 128))\n        value5 := abi_decode_t_address(add(headStart, 160))\n        value6 := abi_decode_t_address(add(headStart, 192))\n        value7 := abi_decode_t_address(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2811ffd61d2434357952ed306cb143c7e5605a229b466aa40c1fbaf4674dbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"USDm: new owner is the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Rescuable: new rescuer is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Blacklistable: caller is not the\")\n        mstore(add(headStart, 96), \" blacklister\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_487ab07a77a6966615a257c4a90c8e83394bb2eea4dcab4e93f67ca70a59b887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"USDm: contract is already initia\")\n        mstore(add(headStart, 96), \"lized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4fd17682d223d8da40dbe6a11d3c9c214a27919cce09d778d511198e337d231f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"USDm: mint amount exceeds minter\")\n        mstore(add(headStart, 96), \"Allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_774b6ca13fbb7bf84e09ed35613c13062981b39647173daf54f4f61d7c813ea7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"USDm: caller is not a minter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_84f8be079f1fc6a290015693f3cd08f7ea691b438dec36a73867ea895cd3583d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"USDm: new blacklister is the zer\")\n        mstore(add(headStart, 96), \"o address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Rescuable: caller is not the res\")\n        mstore(add(headStart, 96), \"cuer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a567f55e07925e66ec6bb74444425f764ad5c4d0b1a99bc374d9d88654760e6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"USDm: mint amount not greater th\")\n        mstore(add(headStart, 96), \"an 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bee3ce0829532c89253a9842e7ed210c693215ae99eaca599e7260f235976b1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"USDm: burn amount not greater th\")\n        mstore(add(headStart, 96), \"an 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"USDm: new masterMinter is the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c93055f798d3a82fbbf08971efec49acd2286b4109c6080c74916ed7c970fbe8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"USDm: new pauser is the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d272d3a1ec4ba03d63250151f371a25c4814ebdfe4b4caaafe1c23f26e3177bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"USDm: Minters can only mint toke\")\n        mstore(add(headStart, 96), \"ns to master minter address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc2784748a661cec545aeae43a86030afef96ae12435e8b3b03b55c1bc348a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"USDm: caller is not the masterMi\")\n        mstore(add(headStart, 96), \"nter\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Blacklistable: new blacklister i\")\n        mstore(add(headStart, 96), \"s the zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecc963872328e737973a951071ec1f96e85ec0606c61c24700f2fd1c45dc519d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Blacklistable: account is blackl\")\n        mstore(add(headStart, 96), \"isted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f465e639586529250a3ffaba5cbd709914d8e15c7092fee3971768a3ae6075e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"USDm: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ff06c765b1d552d6320941b06703cf3f70064075d3bd813c36409541c39763a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"USDm: burn amount exceeds balanc\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101f05760003560e01c8063715018a61161010f578063ad38bf22116100a2578063e5a6b10f11610071578063e5a6b10f146103dc578063f2fde38b146103e4578063f9f92be4146103f7578063fe575a871461040a576101f0565b8063ad38bf221461039b578063b2118a8d146103ae578063bd102430146103c1578063dd62ed3e146103c9576101f0565b80639fd0506d116100de5780639fd0506d1461035a578063a9059cbb14610362578063aa20e1e414610375578063aa271e1a14610388576101f0565b8063715018a61461032f5780638a6db9c3146103375780638da5cb5b1461034a57806395d89b4114610352576101f0565b80633357162b1161018757806342966c681161015657806342966c68146102ee5780634e44d956146103015780635c975abb1461031457806370a082311461031c576101f0565b80633357162b146102ab57806335d99f35146102be57806338a63183146102d357806340c10f19146102db576101f0565b806323b872dd116101c357806323b872dd1461025d5780632ab60045146102705780633092afd514610283578063313ce56714610296576101f0565b806306fdde03146101f5578063095ea7b31461021357806318160ddd146102335780631a89526614610248575b600080fd5b6101fd61041d565b60405161020a9190611ad2565b60405180910390f35b61022661022136600461192f565b6104ab565b60405161020a9190611ac7565b61023b61055c565b60405161020a91906122fe565b61025b61025636600461189b565b610562565b005b61022661026b3660046118ef565b6105d5565b61025b61027e36600461189b565b610751565b61022661029136600461189b565b610800565b61029e610889565b60405161020a9190612307565b61025b6102b936600461198e565b610892565b6102c6610a03565b60405161020a9190611a9a565b6102c6610a12565b6102266102e936600461192f565b610a21565b61025b6102fc366004611a66565b610c8d565b61022661030f36600461192f565b610e07565b610226610ec9565b61023b61032a36600461189b565b610ed9565b61025b610ef4565b61023b61034536600461189b565b610f3f565b6102c6610f5a565b6101fd610f69565b6102c6610f76565b61022661037036600461192f565b610f85565b61025b61038336600461189b565b611022565b61022661039636600461189b565b6110d7565b61025b6103a936600461189b565b6110f5565b61025b6103bc36600461197a565b6111aa565b6102c66111ed565b61023b6103d73660046118b7565b6111fc565b6101fd611227565b61025b6103f236600461189b565b611234565b61025b61040536600461189b565b6112a5565b61022661041836600461189b565b61131b565b6005805461042a90612374565b80601f016020809104026020016040519081016040528092919081815260200182805461045690612374565b80156104a35780601f10610478576101008083540402835291602001916104a3565b820191906000526020600020905b81548152906001019060200180831161048657829003601f168201915b505050505081565b60006104b5610ec9565b156104db5760405162461bcd60e51b81526004016104d290611dc3565b60405180910390fd5b3360008181526003602052604090205460ff161561050b5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff16156105465760405162461bcd60e51b81526004016104d290612241565b610551338686611339565b506001949350505050565b600c5490565b6002546001600160a01b0316331461058c5760405162461bcd60e51b81526004016104d290611ca3565b6001600160a01b038116600081815260036020526040808220805460ff19169055517f117e3210bb9aa7d9baff172026820255c6f6c30ba8999d1c2fd88e2848137c4e9190a250565b60006105df610ec9565b156105fc5760405162461bcd60e51b81526004016104d290611dc3565b3360008181526003602052604090205460ff161561062c5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516600090815260036020526040902054859060ff16156106675760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516600090815260036020526040902054859060ff16156106a25760405162461bcd60e51b81526004016104d290612241565b6001600160a01b0387166000908152600b602090815260408083203384529091529020548511156106e55760405162461bcd60e51b81526004016104d290611eb1565b6106f08787876113e0565b6001600160a01b0387166000908152600b6020908152604080832033845290915290205461071f90869061232d565b6001600160a01b0388166000908152600b60209081526040808320338452909152902055600193505050509392505050565b61075961150a565b6001600160a01b031661076a610f5a565b6001600160a01b0316146107905760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166107b65760405162461bcd60e51b81526004016104d290611c13565b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe475e580d85111348e40d8ca33cfdd74c30fe1655c2d8537a13abc10065ffa5a90600090a250565b6009546000906001600160a01b0316331461082d5760405162461bcd60e51b81526004016104d290612161565b6001600160a01b0382166000818152600d60209081526040808320805460ff19169055600e909152808220829055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a25060015b919050565b60075460ff1681565b600954600160a01b900460ff16156108bc5760405162461bcd60e51b81526004016104d290611cef565b6001600160a01b0384166108e25760405162461bcd60e51b81526004016104d290611ffb565b6001600160a01b0383166109085760405162461bcd60e51b81526004016104d290612045565b6001600160a01b03821661092e5760405162461bcd60e51b81526004016104d290611e24565b6001600160a01b0381166109545760405162461bcd60e51b81526004016104d290611b48565b87516109679060059060208b019061175f565b50865161097b9060069060208a019061175f565b50855161098f90600890602089019061175f565b506007805460ff191660ff8716179055600980546001600160a01b03199081166001600160a01b0387811691909117909255600180548216868416179055600280549091169184169190911790556109e68161150e565b50506009805460ff60a01b1916600160a01b179055505050505050565b6009546001600160a01b031681565b6004546001600160a01b031690565b6000610a2b610ec9565b15610a485760405162461bcd60e51b81526004016104d290611dc3565b336000908152600d602052604090205460ff16610a775760405162461bcd60e51b81526004016104d290611ded565b3360008181526003602052604090205460ff1615610aa75760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff1615610ae25760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038516610b085760405162461bcd60e51b81526004016104d290612286565b60008411610b285760405162461bcd60e51b81526004016104d290611f2e565b6009546001600160a01b03868116911614610b555760405162461bcd60e51b81526004016104d290612104565b336000908152600e602052604090205480851115610b855760405162461bcd60e51b81526004016104d290611d34565b84600c54610b939190612315565b600c556001600160a01b0386166000908152600a6020526040902054610bba908690612315565b6001600160a01b0387166000908152600a6020526040902055610bdd858261232d565b336000818152600e6020526040908190209290925590516001600160a01b03881691907fab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f890610c2d9089906122fe565b60405180910390a3856001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef87604051610c7991906122fe565b60405180910390a350600195945050505050565b610c95610ec9565b15610cb25760405162461bcd60e51b81526004016104d290611dc3565b336000908152600d602052604090205460ff16610ce15760405162461bcd60e51b81526004016104d290611ded565b3360008181526003602052604090205460ff1615610d115760405162461bcd60e51b81526004016104d290612241565b336000908152600a602052604090205482610d3e5760405162461bcd60e51b81526004016104d290611fb7565b82811015610d5e5760405162461bcd60e51b81526004016104d2906122bd565b82600c54610d6c919061232d565b600c55610d79838261232d565b336000818152600a6020526040908190209290925590517fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590610dbd9086906122fe565b60405180910390a260405160009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dfa9087906122fe565b60405180910390a3505050565b6000610e11610ec9565b15610e2e5760405162461bcd60e51b81526004016104d290611dc3565b6009546001600160a01b03163314610e585760405162461bcd60e51b81526004016104d290612161565b6001600160a01b0383166000818152600d60209081526040808320805460ff19166001179055600e90915290819020849055517f46980fca912ef9bcdbd36877427b6b90e860769f604e89c0e67720cece530d2090610eb89085906122fe565b60405180910390a250600192915050565b600154600160a01b900460ff1690565b6001600160a01b03166000908152600a602052604090205490565b610efc61150a565b6001600160a01b0316610f0d610f5a565b6001600160a01b031614610f335760405162461bcd60e51b81526004016104d290611ef9565b610f3d600061150e565b565b6001600160a01b03166000908152600e602052604090205490565b6000546001600160a01b031690565b6006805461042a90612374565b6001546001600160a01b031681565b6000610f8f610ec9565b15610fac5760405162461bcd60e51b81526004016104d290611dc3565b3360008181526003602052604090205460ff1615610fdc5760405162461bcd60e51b81526004016104d290612241565b6001600160a01b038416600090815260036020526040902054849060ff16156110175760405162461bcd60e51b81526004016104d290612241565b6105513386866113e0565b61102a61150a565b6001600160a01b031661103b610f5a565b6001600160a01b0316146110615760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166110875760405162461bcd60e51b81526004016104d290611ffb565b600980546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fdb66dfa9c6b8f5226fe9aac7e51897ae8ee94ac31dc70bb6c9900b2574b707e690600090a250565b6001600160a01b03166000908152600d602052604090205460ff1690565b6110fd61150a565b6001600160a01b031661110e610f5a565b6001600160a01b0316146111345760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b03811661115a5760405162461bcd60e51b81526004016104d2906121ef565b600280546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fc67398012c111ce95ecb7429b933096c977380ee6c421175a71a4a4c6c88c06e90600090a250565b6004546001600160a01b031633146111d45760405162461bcd60e51b81526004016104d290611e6d565b6111e86001600160a01b038416838361155e565b505050565b6002546001600160a01b031681565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205490565b6008805461042a90612374565b61123c61150a565b6001600160a01b031661124d610f5a565b6001600160a01b0316146112735760405162461bcd60e51b81526004016104d290611ef9565b6001600160a01b0381166112995760405162461bcd60e51b81526004016104d290611b8b565b6112a28161150e565b50565b6002546001600160a01b031633146112cf5760405162461bcd60e51b81526004016104d290611ca3565b6001600160a01b038116600081815260036020526040808220805460ff19166001179055517fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b8559190a250565b6001600160a01b031660009081526003602052604090205460ff1690565b6001600160a01b03831661135f5760405162461bcd60e51b81526004016104d290612089565b6001600160a01b0382166113855760405162461bcd60e51b81526004016104d290611bd1565b6001600160a01b038084166000818152600b602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610dfa9085906122fe565b6001600160a01b0383166114065760405162461bcd60e51b81526004016104d290611f72565b6001600160a01b03821661142c5760405162461bcd60e51b81526004016104d290611b05565b6001600160a01b0383166000908152600a60205260409020548111156114645760405162461bcd60e51b81526004016104d290611c5d565b6001600160a01b0383166000908152600a602052604090205461148890829061232d565b6001600160a01b038085166000908152600a602052604080822093909355908416815220546114b8908290612315565b6001600160a01b038084166000818152600a602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610dfa9085906122fe565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111e88363a9059cbb60e01b848460405160240161157d929190611aae565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000611604826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661163e9092919063ffffffff16565b8051909150156111e85780806020019051810190611622919061195a565b6111e85760405162461bcd60e51b81526004016104d2906121a5565b606061164d8484600085611657565b90505b9392505050565b6060824710156116795760405162461bcd60e51b81526004016104d290611d7d565b61168285611717565b61169e5760405162461bcd60e51b81526004016104d2906120cd565b600080866001600160a01b031685876040516116ba9190611a7e565b60006040518083038185875af1925050503d80600081146116f7576040519150601f19603f3d011682016040523d82523d6000602084013e6116fc565b606091505b509150915061170c828286611726565b979650505050505050565b6001600160a01b03163b151590565b60608315611735575081611650565b8251156117455782518084602001fd5b8160405162461bcd60e51b81526004016104d29190611ad2565b82805461176b90612374565b90600052602060002090601f01602090048101928261178d57600085556117d3565b82601f106117a657805160ff19168380011785556117d3565b828001600101855582156117d3579182015b828111156117d35782518255916020019190600101906117b8565b506117df9291506117e3565b5090565b5b808211156117df57600081556001016117e4565b8035610884816123db565b600082601f830112611813578081fd5b813567ffffffffffffffff8082111561182e5761182e6123c5565b604051601f8301601f19908116603f01168101908282118183101715611856576118566123c5565b8160405283815286602085880101111561186e578485fd5b8360208701602083013792830160200193909352509392505050565b803560ff8116811461088457600080fd5b6000602082840312156118ac578081fd5b8135611650816123db565b600080604083850312156118c9578081fd5b82356118d4816123db565b915060208301356118e4816123db565b809150509250929050565b600080600060608486031215611903578081fd5b833561190e816123db565b9250602084013561191e816123db565b929592945050506040919091013590565b60008060408385031215611941578182fd5b823561194c816123db565b946020939093013593505050565b60006020828403121561196b578081fd5b81518015158114611650578182fd5b600080600060608486031215611903578283fd5b600080600080600080600080610100898b0312156119aa578384fd5b883567ffffffffffffffff808211156119c1578586fd5b6119cd8c838d01611803565b995060208b01359150808211156119e2578586fd5b6119ee8c838d01611803565b985060408b0135915080821115611a03578586fd5b50611a108b828c01611803565b965050611a1f60608a0161188a565b9450611a2d60808a016117f8565b9350611a3b60a08a016117f8565b9250611a4960c08a016117f8565b9150611a5760e08a016117f8565b90509295985092959890939650565b600060208284031215611a77578081fd5b5035919050565b60008251611a90818460208701612344565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152611af1816040850160208701612344565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526023908201527f5553446d3a206e6577206f776e657220697320746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602a908201527f526573637561626c653a206e6577207265736375657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252602c908201527f426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686560408201526b10313630b1b5b634b9ba32b960a11b606082015260800190565b60208082526025908201527f5553446d3a20636f6e747261637420697320616c726561647920696e697469616040820152641b1a5e995960da1b606082015260800190565b60208082526029908201527f5553446d3a206d696e7420616d6f756e742065786365656473206d696e746572604082015268416c6c6f77616e636560b81b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252601c908201527f5553446d3a2063616c6c6572206973206e6f742061206d696e74657200000000604082015260600190565b60208082526029908201527f5553446d3a206e657720626c61636b6c697374657220697320746865207a65726040820152686f206164647265737360b81b606082015260800190565b60208082526024908201527f526573637561626c653a2063616c6c6572206973206e6f74207468652072657360408201526331bab2b960e11b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526024908201527f5553446d3a206d696e7420616d6f756e74206e6f7420677265617465722074686040820152630616e20360e41b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f5553446d3a206275726e20616d6f756e74206e6f7420677265617465722074686040820152630616e20360e41b606082015260800190565b6020808252602a908201527f5553446d3a206e6577206d61737465724d696e74657220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526024908201527f5553446d3a206e65772070617573657220697320746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252603b908201527f5553446d3a204d696e746572732063616e206f6e6c79206d696e7420746f6b6560408201527f6e7320746f206d6173746572206d696e74657220616464726573730000000000606082015260800190565b60208082526024908201527f5553446d3a2063616c6c6572206973206e6f7420746865206d61737465724d69604082015263373a32b960e11b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526032908201527f426c61636b6c69737461626c653a206e657720626c61636b6c697374657220696040820152717320746865207a65726f206164647265737360701b606082015260800190565b60208082526025908201527f426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6040820152641a5cdd195960da1b606082015260800190565b6020808252601e908201527f5553446d3a206d696e7420746f20746865207a65726f20616464726573730000604082015260600190565b60208082526021908201527f5553446d3a206275726e20616d6f756e7420657863656564732062616c616e636040820152606560f81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115612328576123286123af565b500190565b60008282101561233f5761233f6123af565b500390565b60005b8381101561235f578181015183820152602001612347565b8381111561236e576000848401525b50505050565b60028104600182168061238857607f821691505b602082108114156123a957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146112a257600080fdfea2646970667358221220b2bb6e313408e8027960d000e1d974f2d5bf9d576eb666ca334048cbb38ada9c64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xAD38BF22 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE5A6B10F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE5A6B10F EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x40A JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0xAD38BF22 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xB2118A8D EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0xBD102430 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3C9 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x9FD0506D GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xAA20E1E4 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x388 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x8A6DB9C3 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x352 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3357162B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x4E44D956 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x3357162B EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x35D99F35 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x38A63183 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2DB JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x2AB60045 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3092AFD5 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x296 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x1A895266 EQ PUSH2 0x248 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH2 0x25B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x18EF JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x291 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x800 JUMP JUMPDEST PUSH2 0x29E PUSH2 0x889 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x2307 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1A9A JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x226 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST PUSH2 0x226 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x25B PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0xF3F JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x1FD PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0xF76 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x10F5 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3BC CALLDATASIZE PUSH1 0x4 PUSH2 0x197A JUMP JUMPDEST PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x25B PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x189B JUMP JUMPDEST PUSH2 0x131B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x456 SWAP1 PUSH2 0x2374 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x478 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x486 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x546 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x551 CALLER DUP7 DUP7 PUSH2 0x1339 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD PUSH32 0x117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5DF PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x6F0 DUP8 DUP8 DUP8 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x71F SWAP1 DUP7 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x759 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 SWAP2 SWAP1 LOG2 POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST DUP8 MLOAD PUSH2 0x967 SWAP1 PUSH1 0x5 SWAP1 PUSH1 0x20 DUP12 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP DUP7 MLOAD PUSH2 0x97B SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x98F SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x175F JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x9E6 DUP2 PUSH2 0x150E JUMP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2B PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xB08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP6 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST DUP5 PUSH1 0xC SLOAD PUSH2 0xB93 SWAP2 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBBA SWAP1 DUP7 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xBDD DUP6 DUP3 PUSH2 0x232D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH32 0xAB8530F87DC9B59234C4623BF917212BB2536D647574C8E7E5DA92C2EDE0C9F8 SWAP1 PUSH2 0xC2D SWAP1 DUP10 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 PUSH1 0x40 MLOAD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC95 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DED JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 PUSH2 0xD3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST DUP3 PUSH1 0xC SLOAD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xD79 DUP4 DUP3 PUSH2 0x232D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH2 0xDBD SWAP1 DUP7 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDFA SWAP1 DUP8 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE11 PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x46980FCA912EF9BCDBD36877427B6B90E860769F604E89C0E67720CECE530D20 SWAP1 PUSH2 0xEB8 SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xEFC PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF0D PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH2 0xF3D PUSH1 0x0 PUSH2 0x150E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF8F PUSH2 0xEC9 JUMP JUMPDEST ISZERO PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1DC3 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1017 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x551 CALLER DUP7 DUP7 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x102A PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x103B PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xDB66DFA9C6B8F5226FE9AAC7E51897AE8EE94AC31DC70BB6C9900B2574B707E6 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x10FD PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x110E PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x115A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x21EF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH32 0xC67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1E6D JUMP JUMPDEST PUSH2 0x11E8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 DUP4 PUSH2 0x155E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x2374 JUMP JUMPDEST PUSH2 0x123C PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x124D PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1273 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1299 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x12A2 DUP2 PUSH2 0x150E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1CA3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 SWAP2 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x135F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x2089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xDFA SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1406 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x142C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x1464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1488 SWAP1 DUP3 SWAP1 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14B8 SWAP1 DUP3 SWAP1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xDFA SWAP1 DUP6 SWAP1 PUSH2 0x22FE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11E8 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x157D SWAP3 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH2 0x1604 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x163E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x11E8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1622 SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST PUSH2 0x11E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x164D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1657 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x1D7D JUMP JUMPDEST PUSH2 0x1682 DUP6 PUSH2 0x1717 JUMP JUMPDEST PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x16BA SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16F7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x170C DUP3 DUP3 DUP7 PUSH2 0x1726 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1735 JUMPI POP DUP2 PUSH2 0x1650 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1745 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x176B SWAP1 PUSH2 0x2374 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x178D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x17D3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17D3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17D3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17D3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17B8 JUMP JUMPDEST POP PUSH2 0x17DF SWAP3 SWAP2 POP PUSH2 0x17E3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17DF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17E4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x884 DUP2 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1813 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x182E JUMPI PUSH2 0x182E PUSH2 0x23C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1856 JUMPI PUSH2 0x1856 PUSH2 0x23C5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x186E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18AC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1650 DUP2 PUSH2 0x23DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18C9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18D4 DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x18E4 DUP2 PUSH2 0x23DB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x190E DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x191E DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1941 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x194C DUP2 PUSH2 0x23DB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1650 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1903 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x19AA JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x19C1 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x19CD DUP13 DUP4 DUP14 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP10 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19E2 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x19EE DUP13 DUP4 DUP14 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP9 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A03 JUMPI DUP6 DUP7 REVERT JUMPDEST POP PUSH2 0x1A10 DUP12 DUP3 DUP13 ADD PUSH2 0x1803 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x1A1F PUSH1 0x60 DUP11 ADD PUSH2 0x188A JUMP JUMPDEST SWAP5 POP PUSH2 0x1A2D PUSH1 0x80 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A3B PUSH1 0xA0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A49 PUSH1 0xC0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A57 PUSH1 0xE0 DUP11 ADD PUSH2 0x17F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A77 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A90 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2344 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AF1 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E6577206F776E657220697320746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A206E6577207265736375657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x10313630B1B5B634B9BA32B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A20636F6E747261637420697320616C726561647920696E69746961 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x1B1A5E9959 PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420616D6F756E742065786365656473206D696E746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x416C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A2063616C6C6572206973206E6F742061206D696E74657200000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E657720626C61636B6C697374657220697320746865207A6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x6F2061646472657373 PUSH1 0xB8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x526573637561626C653A2063616C6C6572206973206E6F742074686520726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x31BAB2B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420616D6F756E74206E6F742067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206275726E20616D6F756E74206E6F742067726561746572207468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E6577206D61737465724D696E74657220697320746865207A65 PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206E65772070617573657220697320746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3B SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A204D696E746572732063616E206F6E6C79206D696E7420746F6B65 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6E7320746F206D6173746572206D696E74657220616464726573730000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A2063616C6C6572206973206E6F7420746865206D61737465724D69 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x373A32B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x7320746865207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x426C61636B6C69737461626C653A206163636F756E7420697320626C61636B6C PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x1A5CDD1959 PUSH1 0xDA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206D696E7420746F20746865207A65726F20616464726573730000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x5553446D3A206275726E20616D6F756E7420657863656564732062616C616E63 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2328 JUMPI PUSH2 0x2328 PUSH2 0x23AF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x233F JUMPI PUSH2 0x233F PUSH2 0x23AF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x235F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2347 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x236E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2388 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x23A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBB PUSH15 0x313408E8027960D000E1D974F2D5BF SWAP14 JUMPI PUSH15 0xB666CA334048CBB38ADA9C64736F6C PUSH4 0x43000801 STOP CALLER ",
							"sourceMap": "1417:10473:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6890:283;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6273:102::-;;;:::i;:::-;;;;;;;:::i;2855:151:2:-;;;;;;:::i;:::-;;:::i;:::-;;7977:555:9;;;;;;:::i;:::-;;:::i;2448:271:7:-;;;;;;:::i;:::-;;:::i;10493:248:9:-;;;;;;:::i;:::-;;:::i;1553:21::-;;;:::i;:::-;;;;;;;:::i;2375:1182::-;;;;;;:::i;:::-;;:::i;1610:27::-;;;:::i;:::-;;;;;;;:::i;1588:85:7:-;;;:::i;4093:942:9:-;;;;;;:::i;:::-;;:::i;11038:536::-;;;;;;:::i;:::-;;:::i;9970:344::-;;;;;;:::i;:::-;;:::i;1429:86:6:-;;;:::i;6489:161:9:-;;;;;;:::i;:::-;;:::i;1714:103:5:-;;;:::i;5428:120:9:-;;;;;;:::i;:::-;;:::i;1063:87:5:-;;;:::i;1526:20:9:-;;;:::i;641:21:6:-;;;:::i;8715:270:9:-;;;;;;:::i;:::-;;:::i;11582:305::-;;;;;;:::i;:::-;;:::i;5661:106::-;;;;;;:::i;:::-;;:::i;3014:306:2:-;;;;;;:::i;:::-;;:::i;2131:183:7:-;;;;;;:::i;:::-;;:::i;1397:26:2:-;;;:::i;6027:182:9:-;;;;;;:::i;:::-;;:::i;1581:22::-;;;:::i;1972:201:5:-;;;;;;:::i;:::-;;:::i;2574:146:2:-;;;;;;:::i;:::-;;:::i;2343:117::-;;;;;;:::i;:::-;;:::i;1501:18:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6890:283::-;7085:4;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;;;;;;;;;7022:10:9::1;2120:21:2;::::0;;;:11:::1;:21;::::0;;;;;::::1;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2120:21:2;::::2;;::::0;;;:11:::2;:21;::::0;;;;;7058:7:9;;2120:21:2::2;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::2;;;;;;;:::i;:::-;7107:36:9::3;7116:10;7128:7;7137:5;7107:8;:36::i;:::-;-1:-1:-1::0;7161:4:9::3;::::0;6890:283;-1:-1:-1;;;;6890:283:9:o;6273:102::-;6355:12;;6273:102;:::o;2855:151:2:-;1815:11;;-1:-1:-1;;;;;1815:11:2;1801:10;:25;1779:119;;;;-1:-1:-1;;;1779:119:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2930:21:2;::::1;2954:5;2930:21:::0;;;:11:::1;:21;::::0;;;;;:29;;-1:-1:-1;;2930:29:2::1;::::0;;2975:23;::::1;::::0;2954:5;2975:23:::1;2855:151:::0;:::o;7977:555:9:-;8245:4;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;8157:10:9::1;2120:21:2;::::0;;;:11:::1;:21;::::0;;;;;::::1;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2120:21:2;::::2;;::::0;;;:11:::2;:21;::::0;;;;;8193:4:9;;2120:21:2::2;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2120:21:2;::::3;;::::0;;;:11:::3;:21;::::0;;;;;8223:2:9;;2120:21:2::3;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8298:13:9;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;8312:10:::4;8298:25:::0;;;;;;;;8289:34;::::4;;8267:124;;;;-1:-1:-1::0;;;8267:124:9::4;;;;;;;:::i;:::-;8402:26;8412:4;8418:2;8422:5;8402:9;:26::i;:::-;-1:-1:-1::0;;;;;8467:13:9;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;8481:10:::4;8467:25:::0;;;;;;;;:35:::4;::::0;8496:5;;8467:35:::4;:::i;:::-;-1:-1:-1::0;;;;;8439:13:9;::::4;;::::0;;;:7:::4;:13;::::0;;;;;;;8453:10:::4;8439:25:::0;;;;;;;:63;8520:4:::4;::::0;-1:-1:-1;2217:1:2::3;::::2;1795::6::1;7977:555:9::0;;;;;:::o;2448:271:7:-;1294:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2543:24:7;::::1;2521:116;;;;-1:-1:-1::0;;;2521:116:7::1;;;;;;;:::i;:::-;2648:8;:21:::0;;-1:-1:-1;;;;;;2648:21:7::1;-1:-1:-1::0;;;;;2648:21:7;::::1;::::0;;::::1;::::0;;;2685:26:::1;::::0;::::1;::::0;-1:-1:-1;;2685:26:7::1;2448:271:::0;:::o;10493:248:9:-;5209:12;;10593:4;;-1:-1:-1;;;;;5209:12:9;5195:10;:26;5173:112;;;;-1:-1:-1;;;5173:112:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;10615:15:9;::::1;10633:5;10615:15:::0;;;:7:::1;:15;::::0;;;;;;;:23;;-1:-1:-1;;10615:23:9::1;::::0;;10649:13:::1;:21:::0;;;;;;:25;;;10690:21;::::1;::::0;10633:5;10690:21:::1;-1:-1:-1::0;10729:4:9::1;5296:1;10493:248:::0;;;:::o;1553:21::-;;;;;;:::o;2375:1182::-;2689:11;;-1:-1:-1;;;2689:11:9;;;;2688:12;2680:62;;;;-1:-1:-1;;;2680:62:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2775:29:9;;2753:121;;;;-1:-1:-1;;;2753:121:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;2907:23:9;;2885:109;;;;-1:-1:-1;;;2885:109:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;3027:28:9;;3005:119;;;;-1:-1:-1;;;3005:119:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;3157:22:9;;3135:107;;;;-1:-1:-1;;;3135:107:9;;;;;;;:::i;:::-;3255:16;;;;:4;;:16;;;;;:::i;:::-;-1:-1:-1;3282:20:9;;;;:6;;:20;;;;;:::i;:::-;-1:-1:-1;3313:24:9;;;;:8;;:24;;;;;:::i;:::-;-1:-1:-1;3348:8:9;:24;;-1:-1:-1;;3348:24:9;;;;;;;3383:12;:30;;-1:-1:-1;;;;;;3383:30:9;;;-1:-1:-1;;;;;3383:30:9;;;;;;;;;;-1:-1:-1;3424:18:9;;;;;;;;;;3453:11;:28;;;;;;;;;;;;;;3492;3511:8;3492:18;:28::i;:::-;-1:-1:-1;;3531:11:9;:18;;-1:-1:-1;;;;3531:18:9;-1:-1:-1;;;3531:18:9;;;-1:-1:-1;;;;;;2375:1182:9:o;1610:27::-;;;-1:-1:-1;;;;;1610:27:9;;:::o;1588:85:7:-;1657:8;;-1:-1:-1;;;;;1657:8:7;1588:85;:::o;4093:942:9:-;4282:4;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;3698:10:9::1;3690:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;3682:60;;;;-1:-1:-1::0;;;3682:60:9::1;;;;;;;:::i;:::-;4223:10:::2;2120:21:2;::::0;;;:11:::2;:21;::::0;;;;;::::2;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2120:21:2;::::3;;::::0;;;:11:::3;:21;::::0;;;;;4259:3:9;;2120:21:2::3;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::3;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4312:17:9;::::4;4304:60;;;;-1:-1:-1::0;;;4304:60:9::4;;;;;;;:::i;:::-;4393:1;4383:7;:11;4375:60;;;;-1:-1:-1::0;;;4375:60:9::4;;;;;;;:::i;:::-;4461:12;::::0;-1:-1:-1;;;;;4454:19:9;;::::4;4461:12:::0;::::4;4454:19;4446:90;;;;-1:-1:-1::0;;;4446:90:9::4;;;;;;;:::i;:::-;4594:10;4549:28;4580:25:::0;;;:13:::4;:25;::::0;;;;;4638:31;;::::4;;4616:122;;;;-1:-1:-1::0;;;4616:122:9::4;;;;;;;:::i;:::-;4781:7;4766:12;;:22;;;;:::i;:::-;4751:12;:37:::0;-1:-1:-1;;;;;4815:13:9;::::4;;::::0;;;:8:::4;:13;::::0;;;;;:23:::4;::::0;4831:7;;4815:23:::4;:::i;:::-;-1:-1:-1::0;;;;;4799:13:9;::::4;;::::0;;;:8:::4;:13;::::0;;;;:39;4877:32:::4;4901:7:::0;4877:20;:32:::4;:::i;:::-;4863:10;4849:25;::::0;;;:13:::4;:25;::::0;;;;;;:60;;;;4925:30;;-1:-1:-1;;;;;4925:30:9;::::4;::::0;4863:10;4925:30:::4;::::0;::::4;::::0;4947:7;;4925:30:::4;:::i;:::-;;;;;;;;4992:3;-1:-1:-1::0;;;;;4971:34:9::4;4988:1;-1:-1:-1::0;;;;;4971:34:9::4;;4997:7;4971:34;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;5023:4:9::4;::::0;4093:942;-1:-1:-1;;;;;4093:942:9:o;11038:536::-;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;3698:10:9::1;3690:19;::::0;;;:7:::1;:19;::::0;;;;;::::1;;3682:60;;;;-1:-1:-1::0;;;3682:60:9::1;;;;;;;:::i;:::-;11155:10:::2;2120:21:2;::::0;;;:11:::2;:21;::::0;;;;;::::2;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::2;;;;;;;:::i;:::-;11210:10:9::3;11183:15;11201:20:::0;;;:8:::3;:20;::::0;;;;;11240:11;11232:60:::3;;;;-1:-1:-1::0;;;11232:60:9::3;;;;;;;:::i;:::-;11322:7;11311;:18;;11303:64;;;;-1:-1:-1::0;;;11303:64:9::3;;;;;;;:::i;:::-;11410:7;11395:12;;:22;;;;:::i;:::-;11380:12;:37:::0;11451:17:::3;11461:7:::0;11451;:17:::3;:::i;:::-;11437:10;11428:20;::::0;;;:8:::3;:20;::::0;;;;;;:40;;;;11484:25;;::::3;::::0;::::3;::::0;11501:7;;11484:25:::3;:::i;:::-;;;;;;;;11525:41;::::0;11554:1:::3;::::0;11534:10:::3;::::0;11525:41:::3;::::0;::::3;::::0;11558:7;;11525:41:::3;:::i;:::-;;;;;;;;2217:1:2;3753::9::2;11038:536:::0;:::o;9970:344::-;10125:4;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;5209:12:9::1;::::0;-1:-1:-1;;;;;5209:12:9::1;5195:10;:26;5173:112;;;;-1:-1:-1::0;;;5173:112:9::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10147:15:9;::::2;;::::0;;;:7:::2;:15;::::0;;;;;;;:22;;-1:-1:-1;;10147:22:9::2;10165:4;10147:22;::::0;;10180:13:::2;:21:::0;;;;;;;:43;;;10239:45;::::2;::::0;::::2;::::0;10204:19;;10239:45:::2;:::i;:::-;;;;;;;;-1:-1:-1::0;10302:4:9::2;9970:344:::0;;;;:::o;1429:86:6:-;1500:7;;-1:-1:-1;;;1500:7:6;;;;;1429:86::o;6489:161:9:-;-1:-1:-1;;;;;6625:17:9;6593:7;6625:17;;;:8;:17;;;;;;;6489:161::o;1714:103:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;1779:30:::1;1806:1;1779:18;:30::i;:::-;1714:103::o:0;5428:120:9:-;-1:-1:-1;;;;;5519:21:9;5492:7;5519:21;;;:13;:21;;;;;;;5428:120::o;1063:87:5:-;1109:7;1136:6;-1:-1:-1;;;;;1136:6:5;1063:87;:::o;1526:20:9:-;;;;;;;:::i;641:21:6:-;;;-1:-1:-1;;;;;641:21:6;;:::o;8715:270:9:-;8901:4;1755:8:6;:6;:8::i;:::-;1754:9;1746:38;;;;-1:-1:-1;;;1746:38:6;;;;;;;:::i;:::-;8843:10:9::1;2120:21:2;::::0;;;:11:::1;:21;::::0;;;;;::::1;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2120:21:2;::::2;;::::0;;;:11:::2;:21;::::0;;;;;8879:2:9;;2120:21:2::2;;2119:22;2097:109;;;;-1:-1:-1::0;;;2097:109:2::2;;;;;;;:::i;:::-;8923:32:9::3;8933:10;8945:2;8949:5;8923:9;:32::i;11582:305::-:0;1294:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;11688:30:9;::::1;11666:122;;;;-1:-1:-1::0;;;11666:122:9::1;;;;;;;:::i;:::-;11799:12;:31:::0;;-1:-1:-1;;;;;;11799:31:9::1;-1:-1:-1::0;;;;;11799:31:9;;::::1;::::0;;;::::1;::::0;;;;11846:33:::1;::::0;11866:12;::::1;::::0;11846:33:::1;::::0;-1:-1:-1;;11846:33:9::1;11582:305:::0;:::o;5661:106::-;-1:-1:-1;;;;;5743:16:9;5719:4;5743:16;;;:7;:16;;;;;;;;;5661:106::o;3014:306:2:-;1294:12:5;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3118:29:2;::::1;3096:129;;;;-1:-1:-1::0;;;3096:129:2::1;;;;;;;:::i;:::-;3236:11;:29:::0;;-1:-1:-1;;;;;;3236:29:2::1;-1:-1:-1::0;;;;;3236:29:2;;::::1;::::0;;;::::1;::::0;;;;3281:31:::1;::::0;3300:11;::::1;::::0;3281:31:::1;::::0;-1:-1:-1;;3281:31:2::1;3014:306:::0;:::o;2131:183:7:-;1827:8;;-1:-1:-1;;;;;1827:8:7;1813:10;:22;1805:71;;;;-1:-1:-1;;;1805:71:7;;;;;;;:::i;:::-;2268:38:::1;-1:-1:-1::0;;;;;2268:26:7;::::1;2295:2:::0;2299:6;2268:26:::1;:38::i;:::-;2131:183:::0;;;:::o;1397:26:2:-;;;-1:-1:-1;;;;;1397:26:2;;:::o;6027:182:9:-;-1:-1:-1;;;;;6178:14:9;;;6146:7;6178:14;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;6027:182::o;1581:22::-;;;;;;;:::i;1972:201:5:-;1294:12;:10;:12::i;:::-;-1:-1:-1;;;;;1283:23:5;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1283:23:5;;1275:68;;;;-1:-1:-1;;;1275:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2061:22:5;::::1;2053:73;;;;-1:-1:-1::0;;;2053:73:5::1;;;;;;;:::i;:::-;2137:28;2156:8;2137:18;:28::i;:::-;1972:201:::0;:::o;2574:146:2:-;1815:11;;-1:-1:-1;;;;;1815:11:2;1801:10;:25;1779:119;;;;-1:-1:-1;;;1779:119:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;2647:21:2;::::1;;::::0;;;:11:::1;:21;::::0;;;;;:28;;-1:-1:-1;;2647:28:2::1;2671:4;2647:28;::::0;;2691:21;::::1;::::0;2647;2691::::1;2574:146:::0;:::o;2343:117::-;-1:-1:-1;;;;;2431:21:2;2407:4;2431:21;;;:11;:21;;;;;;;;;2343:117::o;7379:372:9:-;-1:-1:-1;;;;;7515:19:9;;7507:68;;;;-1:-1:-1;;;7507:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;7594:21:9;;7586:68;;;;-1:-1:-1;;;7586:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;7665:14:9;;;;;;;:7;:14;;;;;;;;:23;;;;;;;;;;;;;;:31;;;7712;;;;;7691:5;;7712:31;:::i;9177:539::-;-1:-1:-1;;;;;9308:18:9;;9300:68;;;;-1:-1:-1;;;9300:68:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;9387:16:9;;9379:64;;;;-1:-1:-1;;;9379:64:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;9485:14:9;;;;;;:8;:14;;;;;;9476:23;;;9454:111;;;;-1:-1:-1;;;9454:111:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;9595:14:9;;;;;;:8;:14;;;;;;:24;;9613:5;;9595:24;:::i;:::-;-1:-1:-1;;;;;9578:14:9;;;;;;;:8;:14;;;;;;:41;;;;9645:12;;;;;;;:22;;9661:5;;9645:22;:::i;:::-;-1:-1:-1;;;;;9630:12:9;;;;;;;:8;:12;;;;;;;:37;;;;9683:25;;;;;;;;;;9702:5;;9683:25;:::i;656:98:3:-;736:10;656:98;:::o;2333:191:5:-;2407:16;2426:6;;-1:-1:-1;;;;;2443:17:5;;;-1:-1:-1;;;;;;2443:17:5;;;;;;2476:40;;2426:6;;;;;;;2476:40;;2407:16;2476:40;2333:191;;:::o;707:211:8:-;824:86;844:5;874:23;;;899:2;903:5;851:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;851:58:8;;;;;;;;;;;;;;-1:-1:-1;;;;;851:58:8;-1:-1:-1;;;;;;851:58:8;;;;;;;;;;3704:23;3730:69;3758:4;3730:69;;;;;;;;;;;;;;;;;3738:5;-1:-1:-1;;;;;3730:27:8;;;:69;;;;;:::i;:::-;3814:17;;3704:95;;-1:-1:-1;3814:21:8;3810:179;;3911:10;3900:30;;;;;;;;;;;;:::i;:::-;3892:85;;;;-1:-1:-1;;;3892:85:8;;;;;;;:::i;3955:229:1:-;4092:12;4124:52;4146:6;4154:4;4160:1;4163:12;4124:21;:52::i;:::-;4117:59;;3955:229;;;;;;:::o;5075:510::-;5245:12;5303:5;5278:21;:30;;5270:81;;;;-1:-1:-1;;;5270:81:1;;;;;;;:::i;:::-;5370:18;5381:6;5370:10;:18::i;:::-;5362:60;;;;-1:-1:-1;;;5362:60:1;;;;;;;:::i;:::-;5436:12;5450:23;5477:6;-1:-1:-1;;;;;5477:11:1;5496:5;5503:4;5477:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5435:73;;;;5526:51;5543:7;5552:10;5564:12;5526:16;:51::i;:::-;5519:58;5075:510;-1:-1:-1;;;;;;;5075:510:1:o;1210:326::-;-1:-1:-1;;;;;1505:19:1;;:23;;;1210:326::o;7761:762::-;7911:12;7940:7;7936:580;;;-1:-1:-1;7971:10:1;7964:17;;7936:580;8085:17;;:21;8081:424;;8333:10;8327:17;8394:15;8381:10;8377:2;8373:19;8366:44;8281:148;8476:12;8469:20;;-1:-1:-1;;;8469:20:1;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:138:10;84:20;;113:33;84:20;113:33;:::i;157:741::-;;255:3;248:4;240:6;236:17;232:27;222:2;;277:5;270;263:20;222:2;317:6;304:20;343:18;380:2;376;373:10;370:2;;;386:18;;:::i;:::-;461:2;455:9;429:2;515:13;;-1:-1:-1;;511:22:10;;;535:2;507:31;503:40;491:53;;;559:18;;;579:22;;;556:46;553:2;;;605:18;;:::i;:::-;645:10;641:2;634:22;680:2;672:6;665:18;726:3;719:4;714:2;706:6;702:15;698:26;695:35;692:2;;;747:5;740;733:20;692:2;815;808:4;800:6;796:17;789:4;781:6;777:17;764:54;838:15;;;855:4;834:26;827:41;;;;-1:-1:-1;842:6:10;212:686;-1:-1:-1;;;212:686:10:o;903:158::-;971:20;;1031:4;1020:16;;1010:27;;1000:2;;1051:1;1048;1041:12;1066:259;;1178:2;1166:9;1157:7;1153:23;1149:32;1146:2;;;1199:6;1191;1184:22;1146:2;1243:9;1230:23;1262:33;1289:5;1262:33;:::i;1330:402::-;;;1459:2;1447:9;1438:7;1434:23;1430:32;1427:2;;;1480:6;1472;1465:22;1427:2;1524:9;1511:23;1543:33;1570:5;1543:33;:::i;:::-;1595:5;-1:-1:-1;1652:2:10;1637:18;;1624:32;1665:35;1624:32;1665:35;:::i;:::-;1719:7;1709:17;;;1417:315;;;;;:::o;1737:470::-;;;;1883:2;1871:9;1862:7;1858:23;1854:32;1851:2;;;1904:6;1896;1889:22;1851:2;1948:9;1935:23;1967:33;1994:5;1967:33;:::i;:::-;2019:5;-1:-1:-1;2076:2:10;2061:18;;2048:32;2089:35;2048:32;2089:35;:::i;:::-;1841:366;;2143:7;;-1:-1:-1;;;2197:2:10;2182:18;;;;2169:32;;1841:366::o;2212:327::-;;;2341:2;2329:9;2320:7;2316:23;2312:32;2309:2;;;2362:6;2354;2347:22;2309:2;2406:9;2393:23;2425:33;2452:5;2425:33;:::i;:::-;2477:5;2529:2;2514:18;;;;2501:32;;-1:-1:-1;;;2299:240:10:o;2544:297::-;;2664:2;2652:9;2643:7;2639:23;2635:32;2632:2;;;2685:6;2677;2670:22;2632:2;2722:9;2716:16;2775:5;2768:13;2761:21;2754:5;2751:32;2741:2;;2802:6;2794;2787:22;2846:484;;;;3006:2;2994:9;2985:7;2981:23;2977:32;2974:2;;;3027:6;3019;3012:22;3335:1170;;;;;;;;;3594:3;3582:9;3573:7;3569:23;3565:33;3562:2;;;3616:6;3608;3601:22;3562:2;3661:9;3648:23;3690:18;3731:2;3723:6;3720:14;3717:2;;;3752:6;3744;3737:22;3717:2;3780:52;3824:7;3815:6;3804:9;3800:22;3780:52;:::i;:::-;3770:62;;3885:2;3874:9;3870:18;3857:32;3841:48;;3914:2;3904:8;3901:16;3898:2;;;3935:6;3927;3920:22;3898:2;3963:54;4009:7;3998:8;3987:9;3983:24;3963:54;:::i;:::-;3953:64;;4070:2;4059:9;4055:18;4042:32;4026:48;;4099:2;4089:8;4086:16;4083:2;;;4120:6;4112;4105:22;4083:2;;4148:54;4194:7;4183:8;4172:9;4168:24;4148:54;:::i;:::-;4138:64;;;4221:38;4255:2;4244:9;4240:18;4221:38;:::i;:::-;4211:48;;4278:41;4314:3;4303:9;4299:19;4278:41;:::i;:::-;4268:51;;4338:41;4374:3;4363:9;4359:19;4338:41;:::i;:::-;4328:51;;4398:41;4434:3;4423:9;4419:19;4398:41;:::i;:::-;4388:51;;4458:41;4494:3;4483:9;4479:19;4458:41;:::i;:::-;4448:51;;3552:953;;;;;;;;;;;:::o;4510:190::-;;4622:2;4610:9;4601:7;4597:23;4593:32;4590:2;;;4643:6;4635;4628:22;4590:2;-1:-1:-1;4671:23:10;;4580:120;-1:-1:-1;4580:120:10:o;4705:274::-;;4872:6;4866:13;4888:53;4934:6;4929:3;4922:4;4914:6;4910:17;4888:53;:::i;:::-;4957:16;;;;;4842:137;-1:-1:-1;;4842:137:10:o;4984:203::-;-1:-1:-1;;;;;5148:32:10;;;;5130:51;;5118:2;5103:18;;5085:102::o;5192:274::-;-1:-1:-1;;;;;5384:32:10;;;;5366:51;;5448:2;5433:18;;5426:34;5354:2;5339:18;;5321:145::o;5471:187::-;5636:14;;5629:22;5611:41;;5599:2;5584:18;;5566:92::o;5663:383::-;;5812:2;5801:9;5794:21;5844:6;5838:13;5887:6;5882:2;5871:9;5867:18;5860:34;5903:66;5962:6;5957:2;5946:9;5942:18;5937:2;5929:6;5925:15;5903:66;:::i;:::-;6030:2;6009:15;-1:-1:-1;;6005:29:10;5990:45;;;;6037:2;5986:54;;5784:262;-1:-1:-1;;5784:262:10:o;6051:399::-;6253:2;6235:21;;;6292:2;6272:18;;;6265:30;6331:34;6326:2;6311:18;;6304:62;-1:-1:-1;;;6397:2:10;6382:18;;6375:33;6440:3;6425:19;;6225:225::o;6455:399::-;6657:2;6639:21;;;6696:2;6676:18;;;6669:30;6735:34;6730:2;6715:18;;6708:62;-1:-1:-1;;;6801:2:10;6786:18;;6779:33;6844:3;6829:19;;6629:225::o;6859:402::-;7061:2;7043:21;;;7100:2;7080:18;;;7073:30;7139:34;7134:2;7119:18;;7112:62;-1:-1:-1;;;7205:2:10;7190:18;;7183:36;7251:3;7236:19;;7033:228::o;7266:398::-;7468:2;7450:21;;;7507:2;7487:18;;;7480:30;7546:34;7541:2;7526:18;;7519:62;-1:-1:-1;;;7612:2:10;7597:18;;7590:32;7654:3;7639:19;;7440:224::o;7669:406::-;7871:2;7853:21;;;7910:2;7890:18;;;7883:30;7949:34;7944:2;7929:18;;7922:62;-1:-1:-1;;;8015:2:10;8000:18;;7993:40;8065:3;8050:19;;7843:232::o;8080:402::-;8282:2;8264:21;;;8321:2;8301:18;;;8294:30;8360:34;8355:2;8340:18;;8333:62;-1:-1:-1;;;8426:2:10;8411:18;;8404:36;8472:3;8457:19;;8254:228::o;8487:408::-;8689:2;8671:21;;;8728:2;8708:18;;;8701:30;8767:34;8762:2;8747:18;;8740:62;-1:-1:-1;;;8833:2:10;8818:18;;8811:42;8885:3;8870:19;;8661:234::o;8900:401::-;9102:2;9084:21;;;9141:2;9121:18;;;9114:30;9180:34;9175:2;9160:18;;9153:62;-1:-1:-1;;;9246:2:10;9231:18;;9224:35;9291:3;9276:19;;9074:227::o;9306:405::-;9508:2;9490:21;;;9547:2;9527:18;;;9520:30;9586:34;9581:2;9566:18;;9559:62;-1:-1:-1;;;9652:2:10;9637:18;;9630:39;9701:3;9686:19;;9480:231::o;9716:402::-;9918:2;9900:21;;;9957:2;9937:18;;;9930:30;9996:34;9991:2;9976:18;;9969:62;-1:-1:-1;;;10062:2:10;10047:18;;10040:36;10108:3;10093:19;;9890:228::o;10123:340::-;10325:2;10307:21;;;10364:2;10344:18;;;10337:30;-1:-1:-1;;;10398:2:10;10383:18;;10376:46;10454:2;10439:18;;10297:166::o;10468:352::-;10670:2;10652:21;;;10709:2;10689:18;;;10682:30;10748;10743:2;10728:18;;10721:58;10811:2;10796:18;;10642:178::o;10825:405::-;11027:2;11009:21;;;11066:2;11046:18;;;11039:30;11105:34;11100:2;11085:18;;11078:62;-1:-1:-1;;;11171:2:10;11156:18;;11149:39;11220:3;11205:19;;10999:231::o;11235:400::-;11437:2;11419:21;;;11476:2;11456:18;;;11449:30;11515:34;11510:2;11495:18;;11488:62;-1:-1:-1;;;11581:2:10;11566:18;;11559:34;11625:3;11610:19;;11409:226::o;11640:404::-;11842:2;11824:21;;;11881:2;11861:18;;;11854:30;11920:34;11915:2;11900:18;;11893:62;-1:-1:-1;;;11986:2:10;11971:18;;11964:38;12034:3;12019:19;;11814:230::o;12049:356::-;12251:2;12233:21;;;12270:18;;;12263:30;12329:34;12324:2;12309:18;;12302:62;12396:2;12381:18;;12223:182::o;12410:400::-;12612:2;12594:21;;;12651:2;12631:18;;;12624:30;12690:34;12685:2;12670:18;;12663:62;-1:-1:-1;;;12756:2:10;12741:18;;12734:34;12800:3;12785:19;;12584:226::o;12815:401::-;13017:2;12999:21;;;13056:2;13036:18;;;13029:30;13095:34;13090:2;13075:18;;13068:62;-1:-1:-1;;;13161:2:10;13146:18;;13139:35;13206:3;13191:19;;12989:227::o;13221:400::-;13423:2;13405:21;;;13462:2;13442:18;;;13435:30;13501:34;13496:2;13481:18;;13474:62;-1:-1:-1;;;13567:2:10;13552:18;;13545:34;13611:3;13596:19;;13395:226::o;13626:406::-;13828:2;13810:21;;;13867:2;13847:18;;;13840:30;13906:34;13901:2;13886:18;;13879:62;-1:-1:-1;;;13972:2:10;13957:18;;13950:40;14022:3;14007:19;;13800:232::o;14037:400::-;14239:2;14221:21;;;14278:2;14258:18;;;14251:30;14317:34;14312:2;14297:18;;14290:62;-1:-1:-1;;;14383:2:10;14368:18;;14361:34;14427:3;14412:19;;14211:226::o;14442:400::-;14644:2;14626:21;;;14683:2;14663:18;;;14656:30;14722:34;14717:2;14702:18;;14695:62;-1:-1:-1;;;14788:2:10;14773:18;;14766:34;14832:3;14817:19;;14616:226::o;14847:353::-;15049:2;15031:21;;;15088:2;15068:18;;;15061:30;15127:31;15122:2;15107:18;;15100:59;15191:2;15176:18;;15021:179::o;15205:423::-;15407:2;15389:21;;;15446:2;15426:18;;;15419:30;15485:34;15480:2;15465:18;;15458:62;15556:29;15551:2;15536:18;;15529:57;15618:3;15603:19;;15379:249::o;15633:400::-;15835:2;15817:21;;;15874:2;15854:18;;;15847:30;15913:34;15908:2;15893:18;;15886:62;-1:-1:-1;;;15979:2:10;15964:18;;15957:34;16023:3;16008:19;;15807:226::o;16038:406::-;16240:2;16222:21;;;16279:2;16259:18;;;16252:30;16318:34;16313:2;16298:18;;16291:62;-1:-1:-1;;;16384:2:10;16369:18;;16362:40;16434:3;16419:19;;16212:232::o;16449:414::-;16651:2;16633:21;;;16690:2;16670:18;;;16663:30;16729:34;16724:2;16709:18;;16702:62;-1:-1:-1;;;16795:2:10;16780:18;;16773:48;16853:3;16838:19;;16623:240::o;16868:401::-;17070:2;17052:21;;;17109:2;17089:18;;;17082:30;17148:34;17143:2;17128:18;;17121:62;-1:-1:-1;;;17214:2:10;17199:18;;17192:35;17259:3;17244:19;;17042:227::o;17274:354::-;17476:2;17458:21;;;17515:2;17495:18;;;17488:30;17554:32;17549:2;17534:18;;17527:60;17619:2;17604:18;;17448:180::o;17633:397::-;17835:2;17817:21;;;17874:2;17854:18;;;17847:30;17913:34;17908:2;17893:18;;17886:62;-1:-1:-1;;;17979:2:10;17964:18;;17957:31;18020:3;18005:19;;17807:223::o;18035:177::-;18181:25;;;18169:2;18154:18;;18136:76::o;18217:184::-;18389:4;18377:17;;;;18359:36;;18347:2;18332:18;;18314:87::o;18406:128::-;;18477:1;18473:6;18470:1;18467:13;18464:2;;;18483:18;;:::i;:::-;-1:-1:-1;18519:9:10;;18454:80::o;18539:125::-;;18607:1;18604;18601:8;18598:2;;;18612:18;;:::i;:::-;-1:-1:-1;18649:9:10;;18588:76::o;18669:258::-;18741:1;18751:113;18765:6;18762:1;18759:13;18751:113;;;18841:11;;;18835:18;18822:11;;;18815:39;18787:2;18780:10;18751:113;;;18882:6;18879:1;18876:13;18873:2;;;18917:1;18908:6;18903:3;18899:16;18892:27;18873:2;;18722:205;;;:::o;18932:380::-;19017:1;19007:12;;19064:1;19054:12;;;19075:2;;19129:4;19121:6;19117:17;19107:27;;19075:2;19182;19174:6;19171:14;19151:18;19148:38;19145:2;;;19228:10;19223:3;19219:20;19216:1;19209:31;19263:4;19260:1;19253:15;19291:4;19288:1;19281:15;19145:2;;18987:325;;;:::o;19317:127::-;19378:10;19373:3;19369:20;19366:1;19359:31;19409:4;19406:1;19399:15;19433:4;19430:1;19423:15;19449:127;19510:10;19505:3;19501:20;19498:1;19491:31;19541:4;19538:1;19531:15;19565:4;19562:1;19555:15;19581:133;-1:-1:-1;;;;;19658:31:10;;19648:42;;19638:2;;19704:1;19701;19694:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1850800",
								"executionCost": "50253",
								"totalCost": "1901053"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "25306",
								"balanceOf(address)": "1375",
								"blacklist(address)": "23277",
								"blacklister()": "1159",
								"burn(uint256)": "infinite",
								"configureMinter(address,uint256)": "44644",
								"currency()": "infinite",
								"decimals()": "1158",
								"initialize(string,string,string,uint8,address,address,address,address)": "infinite",
								"isBlacklisted(address)": "1386",
								"isMinter(address)": "1387",
								"masterMinter()": "1138",
								"mint(address,uint256)": "infinite",
								"minterAllowance(address)": "1332",
								"name()": "infinite",
								"owner()": "1160",
								"paused()": "1146",
								"pauser()": "1115",
								"removeMinter(address)": "28447",
								"renounceOwnership()": "23550",
								"rescueERC20(address,address,uint256)": "infinite",
								"rescuer()": "1160",
								"symbol()": "infinite",
								"totalSupply()": "1119",
								"transfer(address,uint256)": "48146",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unBlacklist(address)": "23296",
								"updateBlacklister(address)": "23332",
								"updateMasterMinter(address)": "23376",
								"updateRescuer(address)": "23337"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1833,
									"end": 1834,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 1801,
									"end": 1834,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1091,
									"end": 1098,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1091,
									"end": 1106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1106,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1091,
									"end": 1106,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1106,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2426,
									"end": 2432,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "PUSH",
									"source": 5,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2423,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2476,
									"end": 2516,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2333,
									"end": 2524,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 11890,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2bb6e313408e8027960d000e1d974f2d5bf9d576eb666ca334048cbb38ada9c64736f6c63430008010033",
									".code": [
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "AD38BF22"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "E5A6B10F"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "E5A6B10F"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "F9F92BE4"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "FE575A87"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "AD38BF22"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "B2118A8D"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "BD102430"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "9FD0506D"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "9FD0506D"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "AA20E1E4"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "AA271E1A"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "8A6DB9C3"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "3357162B"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "4E44D956"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "3357162B"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "35D99F35"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "38A63183"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "2AB60045"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "3092AFD5"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "1A895266"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 11890,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7085,
											"end": 7089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7032,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7065,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7058,
											"end": 7065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7107,
											"end": 7143,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7116,
											"end": 7126,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7135,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7137,
											"end": 7142,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7107,
											"end": 7143,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7107,
											"end": 7143,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7107,
											"end": 7143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6890,
											"end": 7173,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6367,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 6355,
											"end": 6367,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6375,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2951,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "PUSH",
											"source": 2,
											"value": "117E3210BB9AA7D9BAFF172026820255C6F6C30BA8999D1C2FD88E2848137C4E"
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2998,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8157,
											"end": 8167,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8193,
											"end": 8197,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8223,
											"end": 8225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8305,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8311,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8322,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8298,
											"end": 8323,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8323,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8323,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8323,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8267,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8418,
											"end": 8420,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8422,
											"end": 8427,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 8402,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8474,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8481,
											"end": 8491,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8492,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8501,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 8467,
											"end": 8502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8452,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8453,
											"end": 8463,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8464,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8502,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8520,
											"end": 8524,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 8532,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2567,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2521,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2669,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "E475E580D85111348E40D8CA33CFDD74C30FE1655C2D8537A13ABC10065FFA5A"
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2711,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2719,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10593,
											"end": 10597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5205,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10622,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10638,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10638,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10615,
											"end": 10638,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10638,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10662,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10674,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10674,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "PUSH",
											"source": 9,
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10633,
											"end": 10638,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10690,
											"end": 10711,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10729,
											"end": 10733,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5296,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10493,
											"end": 10741,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1574,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2689,
											"end": 2700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2680,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2775,
											"end": 2804,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2775,
											"end": 2804,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2753,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2930,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2885,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3027,
											"end": 3055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3027,
											"end": 3055,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3005,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3135,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3259,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3255,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3313,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3348,
											"end": 3356,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3395,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3464,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3453,
											"end": 3481,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3492,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3542,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2375,
											"end": 3557,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1610,
											"end": 1637,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1665,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1588,
											"end": 1673,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4233,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4329,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4329,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4304,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4390,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4375,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4473,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4473,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 4446,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4604,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4593,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4605,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4616,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4766,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4763,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4751,
											"end": 4788,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4823,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4815,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4807,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4812,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4838,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4877,
											"end": 4909,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 4909,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4877,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4873,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4862,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4909,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4909,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4849,
											"end": 4909,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "PUSH",
											"source": 9,
											"value": "AB8530F87DC9B59234C4623BF917212BB2536D647574C8E7E5DA92C2EDE0C9F8"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4955,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 4992,
											"end": 4995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4997,
											"end": 5004,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4971,
											"end": 5005,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4093,
											"end": 5035,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3690,
											"end": 3709,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3682,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11165,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11210,
											"end": 11220,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11183,
											"end": 11198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11209,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11240,
											"end": 11251,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 11232,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11322,
											"end": 11329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 11303,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11410,
											"end": 11417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11407,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11395,
											"end": 11407,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11395,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 11380,
											"end": 11417,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 11461,
											"end": 11468,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11451,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 11451,
											"end": 11468,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11451,
											"end": 11468,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 11451,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11437,
											"end": 11447,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11436,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11448,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11468,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11428,
											"end": 11468,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "PUSH",
											"source": 9,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11509,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11544,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 11534,
											"end": 11544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11558,
											"end": 11565,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11558,
											"end": 11565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11566,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11038,
											"end": 11574,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5209,
											"end": 5221,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5205,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5173,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10154,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10162,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10169,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10147,
											"end": 10169,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10193,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10201,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10223,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10180,
											"end": 10223,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "46980FCA912EF9BCDBD36877427B6B90E860769F604E89C0E67720CECE530D20"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10204,
											"end": 10223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10284,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9970,
											"end": 10314,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1500,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1515,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6633,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6625,
											"end": 6642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6650,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 1779,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5532,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 5540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5548,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1526,
											"end": 1546,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 662,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 641,
											"end": 662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 641,
											"end": 662,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 641,
											"end": 662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 662,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8715,
											"end": 8985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1755,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1746,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 8853,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8879,
											"end": 8881,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2141,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 2097,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8923,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8933,
											"end": 8943,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8945,
											"end": 8947,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8949,
											"end": 8954,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 8923,
											"end": 8955,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11718,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 11666,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11811,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 11830,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11879,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11846,
											"end": 11879,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11878,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11846,
											"end": 11879,
											"name": "PUSH",
											"source": 9,
											"value": "DB66DFA9C6B8F5226FE9AAC7E51897AE8EE94AC31DC70BB6C9900B2574B707E6"
										},
										{
											"begin": 11846,
											"end": 11879,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11846,
											"end": 11879,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11887,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5743,
											"end": 5759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5767,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3147,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "tag",
											"source": 2,
											"value": "353"
										},
										{
											"begin": 3096,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3247,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3300,
											"end": 3311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "PUSH",
											"source": 2,
											"value": "C67398012C111CE95ECB7429B933096C977380EE6C421175A71A4A4C6C88C06E"
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3281,
											"end": 3312,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3320,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1827,
											"end": 1835,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1835,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 1805,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2268,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2314,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1423,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6185,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6192,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6201,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6209,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 2053,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2156,
											"end": 2164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2137,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1826,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1811,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1801,
											"end": 1826,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 1779,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2658,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2675,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2691,
											"end": 2712,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2574,
											"end": 2720,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2442,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2431,
											"end": 2452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7379,
											"end": 7751,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7379,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7507,
											"end": 7575,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7594,
											"end": 7615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7594,
											"end": 7615,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 7586,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7672,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7696,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7665,
											"end": 7696,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7696,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7691,
											"end": 7696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7712,
											"end": 7743,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9177,
											"end": 9716,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 9177,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9308,
											"end": 9326,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 9300,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9387,
											"end": 9403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 9379,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9493,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9485,
											"end": 9499,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9499,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 9454,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9603,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9618,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 9595,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9586,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9619,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9619,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9578,
											"end": 9619,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9657,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9661,
											"end": 9666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 9645,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9638,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9642,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9667,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9667,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9630,
											"end": 9667,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9707,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9707,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 9683,
											"end": 9708,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2516,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2524,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 707,
											"end": 918,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 707,
											"end": 918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 824,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 844,
											"end": 849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 899,
											"end": 901,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 903,
											"end": 908,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 851,
											"end": 909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 3730,
											"end": 3757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 3730,
											"end": 3799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3704,
											"end": 3799,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3810,
											"end": 3989,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3921,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3900,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3892,
											"end": 3977,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4160,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4175,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4124,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5257,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5303,
											"end": 5308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5299,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5308,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 5270,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 5381,
											"end": 5387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5362,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5473,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5543,
											"end": 5550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5564,
											"end": 5576,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5526,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5577,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5075,
											"end": 5585,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1524,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1536,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7761,
											"end": 8523,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 7761,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7911,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7940,
											"end": 7947,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7971,
											"end": 7981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 7964,
											"end": 7981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7936,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8081,
											"end": 8505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8394,
											"end": 8409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8381,
											"end": 8391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8429,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 8281,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "241"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "447"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "452"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "449"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "450"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "452"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "450"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "452"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "451"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "452"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "451"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "452"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "454"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "454"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "455"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "455"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 152,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 14,
											"end": 152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 113,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 157,
											"end": 898,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 157,
											"end": 898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 157,
											"end": 898,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 248,
											"end": 252,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 236,
											"end": 253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 232,
											"end": 259,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 222,
											"end": 224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 222,
											"end": 224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 270,
											"end": 275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 263,
											"end": 283,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 222,
											"end": 224,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 222,
											"end": 224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 304,
											"end": 324,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 343,
											"end": 361,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 380,
											"end": 382,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 376,
											"end": 378,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 373,
											"end": 383,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 370,
											"end": 372,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 370,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 370,
											"end": 372,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 386,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 386,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 386,
											"end": 404,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 404,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 386,
											"end": 404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 461,
											"end": 463,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 464,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 429,
											"end": 431,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 515,
											"end": 528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 515,
											"end": 528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 511,
											"end": 533,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 511,
											"end": 533,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 507,
											"end": 538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 503,
											"end": 543,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 491,
											"end": 544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 491,
											"end": 544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 491,
											"end": 544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 559,
											"end": 577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 559,
											"end": 577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 559,
											"end": 577,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 579,
											"end": 601,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 579,
											"end": 601,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 556,
											"end": 602,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 553,
											"end": 555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 605,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 605,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 605,
											"end": 623,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 605,
											"end": 623,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 605,
											"end": 623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 656,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 680,
											"end": 682,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 672,
											"end": 678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 665,
											"end": 683,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 726,
											"end": 729,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 719,
											"end": 723,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 706,
											"end": 712,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 702,
											"end": 717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 698,
											"end": 724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 695,
											"end": 730,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 692,
											"end": 694,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 747,
											"end": 752,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 733,
											"end": 753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 692,
											"end": 694,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 815,
											"end": 817,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 808,
											"end": 812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 806,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 796,
											"end": 813,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 789,
											"end": 793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 777,
											"end": 794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 764,
											"end": 818,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 838,
											"end": 853,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 838,
											"end": 853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 838,
											"end": 853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 855,
											"end": 859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 827,
											"end": 868,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 827,
											"end": 868,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 827,
											"end": 868,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 827,
											"end": 868,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 842,
											"end": 848,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 212,
											"end": 898,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 212,
											"end": 898,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 903,
											"end": 1061,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 903,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 971,
											"end": 991,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 971,
											"end": 991,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1036,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1000,
											"end": 1002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1053,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1325,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 1066,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1153,
											"end": 1176,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1199,
											"end": 1205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1191,
											"end": 1197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1206,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 1146,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1289,
											"end": 1294,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1262,
											"end": 1295,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1732,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1447,
											"end": 1456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1434,
											"end": 1457,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1462,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1472,
											"end": 1478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1487,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1534,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 1570,
											"end": 1575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1543,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1543,
											"end": 1576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1576,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 1543,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1652,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 1624,
											"end": 1656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 1665,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1726,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1732,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2207,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1737,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 2207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 2207,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1737,
											"end": 2207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1869,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1886,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 1911,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1935,
											"end": 1958,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 1994,
											"end": 1999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2048,
											"end": 2080,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 2048,
											"end": 2080,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 2089,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 2207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 2207,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2201,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2169,
											"end": 2201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1841,
											"end": 2207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2212,
											"end": 2539,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2212,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2539,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2327,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2312,
											"end": 2344,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2393,
											"end": 2416,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 2452,
											"end": 2457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 2425,
											"end": 2458,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2458,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 2425,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2482,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2532,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2532,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2533,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2539,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 2841,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 2544,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2544,
											"end": 2841,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2781,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2782,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2754,
											"end": 2759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2751,
											"end": 2783,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2809,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 3330,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2846,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 3330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 3330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 3330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3008,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2994,
											"end": 3003,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2985,
											"end": 2992,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 3004,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3009,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 4505,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3597,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3616,
											"end": 3622,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3623,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 3562,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3661,
											"end": 3670,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3648,
											"end": 3671,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3733,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3723,
											"end": 3729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3734,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3752,
											"end": 3758,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3759,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 3780,
											"end": 3832,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3780,
											"end": 3832,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 3780,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3832,
											"name": "SWAP10",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3857,
											"end": 3889,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3901,
											"end": 3917,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3935,
											"end": 3941,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3920,
											"end": 3942,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3963,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4006,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3963,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 3963,
											"end": 4017,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3963,
											"end": 4017,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 3963,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 4017,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 4017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4072,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4026,
											"end": 4074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4102,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4105,
											"end": 4127,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 4194,
											"end": 4201,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 4183,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 4168,
											"end": 4192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 4148,
											"end": 4202,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4148,
											"end": 4202,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 4148,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4202,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4138,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 4221,
											"end": 4259,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 4221,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4259,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4211,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 4314,
											"end": 4317,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4299,
											"end": 4318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4278,
											"end": 4319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4278,
											"end": 4319,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4319,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 4278,
											"end": 4319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4363,
											"end": 4372,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4378,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4338,
											"end": 4379,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4338,
											"end": 4379,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 4338,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4379,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 4434,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4423,
											"end": 4432,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4419,
											"end": 4438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4398,
											"end": 4439,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4398,
											"end": 4439,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 4398,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4388,
											"end": 4439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 4494,
											"end": 4497,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4483,
											"end": 4492,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 4458,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4448,
											"end": 4499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 4505,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4510,
											"end": 4700,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4510,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4700,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4622,
											"end": 4624,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4608,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4593,
											"end": 4625,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4650,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4580,
											"end": 4700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4705,
											"end": 4979,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 4705,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4922,
											"end": 4926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4927,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 4888,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4973,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4973,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4979,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4842,
											"end": 4979,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4984,
											"end": 5187,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4984,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5180,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5180,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5180,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5466,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5192,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5416,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5366,
											"end": 5417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5448,
											"end": 5450,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5451,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5426,
											"end": 5460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5354,
											"end": 5356,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5339,
											"end": 5357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5321,
											"end": 5466,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5471,
											"end": 5658,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5471,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5650,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5650,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5651,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5602,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5566,
											"end": 5658,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5663,
											"end": 6046,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5663,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 6046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5794,
											"end": 5815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5838,
											"end": 5851,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5887,
											"end": 5893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5882,
											"end": 5884,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5867,
											"end": 5885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5860,
											"end": 5894,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 5962,
											"end": 5968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5957,
											"end": 5959,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 5955,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5935,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 5903,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6030,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6009,
											"end": 6024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6005,
											"end": 6034,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6039,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5986,
											"end": 6040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5986,
											"end": 6040,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 6046,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5784,
											"end": 6046,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6051,
											"end": 6450,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 6051,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6256,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6235,
											"end": 6256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6292,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6295,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6365,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6326,
											"end": 6328,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6311,
											"end": 6329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6304,
											"end": 6366,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6408,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6440,
											"end": 6443,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6425,
											"end": 6444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6425,
											"end": 6444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6450,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6455,
											"end": 6854,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6455,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6676,
											"end": 6694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6669,
											"end": 6699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206E6577206F776E657220697320746865207A65726F2061646472"
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6715,
											"end": 6733,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6708,
											"end": 6770,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6801,
											"end": 6803,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6786,
											"end": 6804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6779,
											"end": 6812,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6844,
											"end": 6847,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6829,
											"end": 6848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6629,
											"end": 6854,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6859,
											"end": 7261,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 6859,
											"end": 7261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7100,
											"end": 7102,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7073,
											"end": 7103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7139,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7119,
											"end": 7137,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7207,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7190,
											"end": 7208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7251,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7033,
											"end": 7261,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7266,
											"end": 7664,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 7266,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7470,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7480,
											"end": 7510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7580,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7541,
											"end": 7543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7526,
											"end": 7544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7654,
											"end": 7657,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7639,
											"end": 7658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7664,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7669,
											"end": 8075,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 7669,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7871,
											"end": 7873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7853,
											"end": 7874,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7853,
											"end": 7874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7853,
											"end": 7874,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7883,
											"end": 7913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7949,
											"end": 7983,
											"name": "PUSH",
											"source": 10,
											"value": "526573637561626C653A206E6577207265736375657220697320746865207A65"
										},
										{
											"begin": 7944,
											"end": 7946,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7922,
											"end": 7984,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8015,
											"end": 8017,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8000,
											"end": 8018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7993,
											"end": 8033,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8068,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8050,
											"end": 8069,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8050,
											"end": 8069,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7843,
											"end": 8075,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8080,
											"end": 8482,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 8080,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8282,
											"end": 8284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8264,
											"end": 8285,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8285,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8321,
											"end": 8323,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8301,
											"end": 8319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8394,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 8355,
											"end": 8357,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8411,
											"end": 8429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8472,
											"end": 8475,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8457,
											"end": 8476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8457,
											"end": 8476,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8254,
											"end": 8482,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8487,
											"end": 8895,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 8487,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8689,
											"end": 8691,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8671,
											"end": 8692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8692,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8671,
											"end": 8692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 10,
											"value": "2C"
										},
										{
											"begin": 8708,
											"end": 8726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8767,
											"end": 8801,
											"name": "PUSH",
											"source": 10,
											"value": "426C61636B6C69737461626C653A2063616C6C6572206973206E6F7420746865"
										},
										{
											"begin": 8762,
											"end": 8764,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8740,
											"end": 8802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10313630B1B5B634B9BA32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8885,
											"end": 8888,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8870,
											"end": 8889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8870,
											"end": 8889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8895,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8900,
											"end": 9301,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 8900,
											"end": 9301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9084,
											"end": 9105,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9084,
											"end": 9105,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9114,
											"end": 9144,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9180,
											"end": 9214,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A20636F6E747261637420697320616C726561647920696E69746961"
										},
										{
											"begin": 9175,
											"end": 9177,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9224,
											"end": 9259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9291,
											"end": 9294,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9276,
											"end": 9295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9276,
											"end": 9295,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9074,
											"end": 9301,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9306,
											"end": 9711,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 9306,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 9510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9511,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9520,
											"end": 9550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9586,
											"end": 9620,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206D696E7420616D6F756E742065786365656473206D696E746572"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9654,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9637,
											"end": 9655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9637,
											"end": 9655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9630,
											"end": 9669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9701,
											"end": 9704,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9686,
											"end": 9705,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9686,
											"end": 9705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9711,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9716,
											"end": 10118,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9716,
											"end": 10118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9918,
											"end": 9920,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9900,
											"end": 9921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9957,
											"end": 9959,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 9937,
											"end": 9955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9937,
											"end": 9955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9937,
											"end": 9955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 9960,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10030,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 9991,
											"end": 9993,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9969,
											"end": 10031,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10076,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10108,
											"end": 10111,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10093,
											"end": 10112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10093,
											"end": 10112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 10118,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10123,
											"end": 10463,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 10123,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10307,
											"end": 10328,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10307,
											"end": 10328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10366,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10344,
											"end": 10362,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10383,
											"end": 10401,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10376,
											"end": 10422,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10463,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10468,
											"end": 10820,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 10468,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10670,
											"end": 10672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10652,
											"end": 10673,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10673,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10652,
											"end": 10673,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10709,
											"end": 10711,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 10689,
											"end": 10707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10682,
											"end": 10712,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10748,
											"end": 10778,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A2063616C6C6572206973206E6F742061206D696E74657200000000"
										},
										{
											"begin": 10743,
											"end": 10745,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10746,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10779,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10813,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10796,
											"end": 10814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10642,
											"end": 10820,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10825,
											"end": 11230,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 10825,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11027,
											"end": 11029,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11009,
											"end": 11030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11009,
											"end": 11030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11066,
											"end": 11068,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11039,
											"end": 11069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11105,
											"end": 11139,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206E657720626C61636B6C697374657220697320746865207A6572"
										},
										{
											"begin": 11100,
											"end": 11102,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11078,
											"end": 11140,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11171,
											"end": 11173,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11156,
											"end": 11174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11149,
											"end": 11188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11223,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11205,
											"end": 11224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11205,
											"end": 11224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10999,
											"end": 11230,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11235,
											"end": 11635,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 11235,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11419,
											"end": 11440,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11419,
											"end": 11440,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11419,
											"end": 11440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11449,
											"end": 11479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11515,
											"end": 11549,
											"name": "PUSH",
											"source": 10,
											"value": "526573637561626C653A2063616C6C6572206973206E6F742074686520726573"
										},
										{
											"begin": 11510,
											"end": 11512,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31BAB2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11581,
											"end": 11583,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11593,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11625,
											"end": 11628,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11610,
											"end": 11629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11409,
											"end": 11635,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11640,
											"end": 12044,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 11640,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11842,
											"end": 11844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11824,
											"end": 11845,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11824,
											"end": 11845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11824,
											"end": 11845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11881,
											"end": 11883,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11861,
											"end": 11879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11884,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11920,
											"end": 11954,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 11915,
											"end": 11917,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11900,
											"end": 11918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11893,
											"end": 11955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 11988,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11964,
											"end": 12002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12037,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11814,
											"end": 12044,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12049,
											"end": 12405,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 12049,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12251,
											"end": 12253,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12233,
											"end": 12254,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12233,
											"end": 12254,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12270,
											"end": 12288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12263,
											"end": 12293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12363,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12324,
											"end": 12326,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12309,
											"end": 12327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12364,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12398,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12381,
											"end": 12399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12223,
											"end": 12405,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12410,
											"end": 12810,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 12410,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12594,
											"end": 12615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12651,
											"end": 12653,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12624,
											"end": 12654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12724,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206D696E7420616D6F756E74206E6F742067726561746572207468"
										},
										{
											"begin": 12685,
											"end": 12687,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12670,
											"end": 12688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12663,
											"end": 12725,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12756,
											"end": 12758,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12741,
											"end": 12759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12734,
											"end": 12768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12800,
											"end": 12803,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12785,
											"end": 12804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12785,
											"end": 12804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12584,
											"end": 12810,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12815,
											"end": 13216,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 12815,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13017,
											"end": 13019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12999,
											"end": 13020,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13056,
											"end": 13058,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13029,
											"end": 13059,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13095,
											"end": 13129,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13090,
											"end": 13092,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13075,
											"end": 13093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13161,
											"end": 13163,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13146,
											"end": 13164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13146,
											"end": 13164,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13139,
											"end": 13174,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13209,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13191,
											"end": 13210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 13216,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13221,
											"end": 13621,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 13221,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13423,
											"end": 13425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13405,
											"end": 13426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13405,
											"end": 13426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13462,
											"end": 13464,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13435,
											"end": 13465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13535,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206275726E20616D6F756E74206E6F742067726561746572207468"
										},
										{
											"begin": 13496,
											"end": 13498,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13481,
											"end": 13499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13474,
											"end": 13536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13567,
											"end": 13569,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13552,
											"end": 13570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13611,
											"end": 13614,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13395,
											"end": 13621,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13626,
											"end": 14032,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 13626,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13828,
											"end": 13830,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13810,
											"end": 13831,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13810,
											"end": 13831,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13810,
											"end": 13831,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13867,
											"end": 13869,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13847,
											"end": 13865,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13840,
											"end": 13870,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13940,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206E6577206D61737465724D696E74657220697320746865207A65"
										},
										{
											"begin": 13901,
											"end": 13903,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13886,
											"end": 13904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 13941,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13972,
											"end": 13974,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13957,
											"end": 13975,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13957,
											"end": 13975,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13950,
											"end": 13990,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14022,
											"end": 14025,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14007,
											"end": 14026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14007,
											"end": 14026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13800,
											"end": 14032,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14037,
											"end": 14437,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 14037,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14239,
											"end": 14241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14221,
											"end": 14242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14242,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14221,
											"end": 14242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14278,
											"end": 14280,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14258,
											"end": 14276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14276,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14258,
											"end": 14276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14251,
											"end": 14281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14317,
											"end": 14351,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206E65772070617573657220697320746865207A65726F20616464"
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14297,
											"end": 14315,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14290,
											"end": 14352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14361,
											"end": 14395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14430,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14412,
											"end": 14431,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14437,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14442,
											"end": 14842,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14442,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 14646,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14626,
											"end": 14647,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14626,
											"end": 14647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14683,
											"end": 14685,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14663,
											"end": 14681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14656,
											"end": 14686,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14722,
											"end": 14756,
											"name": "PUSH",
											"source": 10,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14717,
											"end": 14719,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14702,
											"end": 14720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14702,
											"end": 14720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14695,
											"end": 14757,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14788,
											"end": 14790,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14773,
											"end": 14791,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14773,
											"end": 14791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14766,
											"end": 14800,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14832,
											"end": 14835,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14817,
											"end": 14836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14616,
											"end": 14842,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14847,
											"end": 15200,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 14847,
											"end": 15200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15049,
											"end": 15051,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15031,
											"end": 15052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15031,
											"end": 15052,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15090,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 15068,
											"end": 15086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15068,
											"end": 15086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15061,
											"end": 15091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15127,
											"end": 15158,
											"name": "PUSH",
											"source": 10,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 15122,
											"end": 15124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15107,
											"end": 15125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15100,
											"end": 15159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15191,
											"end": 15193,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15176,
											"end": 15194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15176,
											"end": 15194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15021,
											"end": 15200,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15205,
											"end": 15628,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 15205,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15407,
											"end": 15409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15389,
											"end": 15410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15389,
											"end": 15410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15389,
											"end": 15410,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15446,
											"end": 15448,
											"name": "PUSH",
											"source": 10,
											"value": "3B"
										},
										{
											"begin": 15426,
											"end": 15444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15426,
											"end": 15444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15426,
											"end": 15444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15485,
											"end": 15519,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A204D696E746572732063616E206F6E6C79206D696E7420746F6B65"
										},
										{
											"begin": 15480,
											"end": 15482,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15465,
											"end": 15483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15465,
											"end": 15483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15458,
											"end": 15520,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15585,
											"name": "PUSH",
											"source": 10,
											"value": "6E7320746F206D6173746572206D696E74657220616464726573730000000000"
										},
										{
											"begin": 15551,
											"end": 15553,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15536,
											"end": 15554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 15554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15529,
											"end": 15586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15621,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15603,
											"end": 15622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15603,
											"end": 15622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15379,
											"end": 15628,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15633,
											"end": 16033,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 15633,
											"end": 16033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15835,
											"end": 15837,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15817,
											"end": 15838,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15817,
											"end": 15838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15817,
											"end": 15838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15874,
											"end": 15876,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15854,
											"end": 15872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15913,
											"end": 15947,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A2063616C6C6572206973206E6F7420746865206D61737465724D69"
										},
										{
											"begin": 15908,
											"end": 15910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15893,
											"end": 15911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15893,
											"end": 15911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15979,
											"end": 15981,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 15964,
											"end": 15982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15964,
											"end": 15982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 15991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16008,
											"end": 16027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16008,
											"end": 16027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15807,
											"end": 16033,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16038,
											"end": 16444,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 16038,
											"end": 16444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16240,
											"end": 16242,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16222,
											"end": 16243,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16243,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16222,
											"end": 16243,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16279,
											"end": 16281,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16252,
											"end": 16282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16318,
											"end": 16352,
											"name": "PUSH",
											"source": 10,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 16313,
											"end": 16315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16298,
											"end": 16316,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16298,
											"end": 16316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16291,
											"end": 16353,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16384,
											"end": 16386,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16362,
											"end": 16402,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16434,
											"end": 16437,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16419,
											"end": 16438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16419,
											"end": 16438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16444,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16449,
											"end": 16863,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 16449,
											"end": 16863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16651,
											"end": 16653,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16633,
											"end": 16654,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16633,
											"end": 16654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16633,
											"end": 16654,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16690,
											"end": 16692,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 16670,
											"end": 16688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16688,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16670,
											"end": 16688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16693,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16729,
											"end": 16763,
											"name": "PUSH",
											"source": 10,
											"value": "426C61636B6C69737461626C653A206E657720626C61636B6C69737465722069"
										},
										{
											"begin": 16724,
											"end": 16726,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16709,
											"end": 16727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16709,
											"end": 16727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16702,
											"end": 16764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7320746865207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16795,
											"end": 16797,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16780,
											"end": 16798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16780,
											"end": 16798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16773,
											"end": 16821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16853,
											"end": 16856,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 16838,
											"end": 16857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16838,
											"end": 16857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16623,
											"end": 16863,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16868,
											"end": 17269,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 16868,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17070,
											"end": 17072,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17052,
											"end": 17073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17052,
											"end": 17073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17052,
											"end": 17073,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17109,
											"end": 17111,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17082,
											"end": 17112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17148,
											"end": 17182,
											"name": "PUSH",
											"source": 10,
											"value": "426C61636B6C69737461626C653A206163636F756E7420697320626C61636B6C"
										},
										{
											"begin": 17143,
											"end": 17145,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17121,
											"end": 17183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17214,
											"end": 17216,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17199,
											"end": 17217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17199,
											"end": 17217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17259,
											"end": 17262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 17244,
											"end": 17263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17244,
											"end": 17263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17042,
											"end": 17269,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17274,
											"end": 17628,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 17274,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17476,
											"end": 17478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17458,
											"end": 17479,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17458,
											"end": 17479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17458,
											"end": 17479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17515,
											"end": 17517,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17488,
											"end": 17518,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17554,
											"end": 17586,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206D696E7420746F20746865207A65726F20616464726573730000"
										},
										{
											"begin": 17549,
											"end": 17551,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17534,
											"end": 17552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17527,
											"end": 17587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17619,
											"end": 17621,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17604,
											"end": 17622,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17604,
											"end": 17622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17448,
											"end": 17628,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17633,
											"end": 18030,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 17633,
											"end": 18030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17837,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17817,
											"end": 17838,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17817,
											"end": 17838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17817,
											"end": 17838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17876,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17847,
											"end": 17877,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17913,
											"end": 17947,
											"name": "PUSH",
											"source": 10,
											"value": "5553446D3A206275726E20616D6F756E7420657863656564732062616C616E63"
										},
										{
											"begin": 17908,
											"end": 17910,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 17948,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17979,
											"end": 17981,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 17964,
											"end": 17982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17964,
											"end": 17982,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17957,
											"end": 17988,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18020,
											"end": 18023,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 18005,
											"end": 18024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18005,
											"end": 18024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17807,
											"end": 18030,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18035,
											"end": 18212,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 18035,
											"end": 18212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18206,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18206,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18181,
											"end": 18206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18169,
											"end": 18171,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18136,
											"end": 18212,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18217,
											"end": 18401,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 18217,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18389,
											"end": 18393,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 18377,
											"end": 18394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18377,
											"end": 18394,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18395,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18349,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18332,
											"end": 18350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18332,
											"end": 18350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18314,
											"end": 18401,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18406,
											"end": 18534,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 18406,
											"end": 18534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18406,
											"end": 18534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18473,
											"end": 18479,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 18470,
											"end": 18471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18467,
											"end": 18480,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18464,
											"end": 18466,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18464,
											"end": 18466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 18464,
											"end": 18466,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 18483,
											"end": 18501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18519,
											"end": 18528,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18519,
											"end": 18528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18454,
											"end": 18534,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18539,
											"end": 18664,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 18539,
											"end": 18664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18539,
											"end": 18664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18607,
											"end": 18608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18604,
											"end": 18605,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18601,
											"end": 18609,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18598,
											"end": 18600,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18598,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 18598,
											"end": 18600,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 18612,
											"end": 18630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18649,
											"end": 18658,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18649,
											"end": 18658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18664,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18669,
											"end": 18927,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 18669,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18741,
											"end": 18742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18765,
											"end": 18771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18762,
											"end": 18763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18759,
											"end": 18772,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18841,
											"end": 18852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18841,
											"end": 18852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18841,
											"end": 18852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18835,
											"end": 18853,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18822,
											"end": 18833,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18822,
											"end": 18833,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18822,
											"end": 18833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18815,
											"end": 18854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18787,
											"end": 18789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18780,
											"end": 18790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 18751,
											"end": 18864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18882,
											"end": 18888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18879,
											"end": 18880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18876,
											"end": 18889,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18917,
											"end": 18918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18908,
											"end": 18914,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18903,
											"end": 18906,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 18915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18892,
											"end": 18919,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18873,
											"end": 18875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18722,
											"end": 18927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18932,
											"end": 19312,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 18932,
											"end": 19312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19017,
											"end": 19018,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 19007,
											"end": 19019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19007,
											"end": 19019,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19065,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19054,
											"end": 19066,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19066,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19054,
											"end": 19066,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19129,
											"end": 19133,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 19121,
											"end": 19127,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19134,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19107,
											"end": 19134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19107,
											"end": 19134,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 19075,
											"end": 19077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19174,
											"end": 19180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19171,
											"end": 19185,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 19151,
											"end": 19169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19148,
											"end": 19186,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19238,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19223,
											"end": 19226,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19219,
											"end": 19239,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19216,
											"end": 19217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19209,
											"end": 19240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19263,
											"end": 19267,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 19260,
											"end": 19261,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19253,
											"end": 19268,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19291,
											"end": 19295,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19288,
											"end": 19289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19281,
											"end": 19296,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18987,
											"end": 19312,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19317,
											"end": 19444,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 19317,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19378,
											"end": 19388,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19373,
											"end": 19376,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19369,
											"end": 19389,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19366,
											"end": 19367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19359,
											"end": 19390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19413,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 19406,
											"end": 19407,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19399,
											"end": 19414,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19433,
											"end": 19437,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19430,
											"end": 19431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19423,
											"end": 19438,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19449,
											"end": 19576,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 19449,
											"end": 19576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19510,
											"end": 19520,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 19505,
											"end": 19508,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 19501,
											"end": 19521,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 19498,
											"end": 19499,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19491,
											"end": 19522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19541,
											"end": 19545,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 19538,
											"end": 19539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 19531,
											"end": 19546,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19565,
											"end": 19569,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19562,
											"end": 19563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19555,
											"end": 19570,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19581,
											"end": 19714,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 19581,
											"end": 19714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19658,
											"end": 19689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19658,
											"end": 19689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19648,
											"end": 19690,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19648,
											"end": 19690,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19638,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 19638,
											"end": 19640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19704,
											"end": 19705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19701,
											"end": 19702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19694,
											"end": 19706,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"blacklister()": "bd102430",
							"burn(uint256)": "42966c68",
							"configureMinter(address,uint256)": "4e44d956",
							"currency()": "e5a6b10f",
							"decimals()": "313ce567",
							"initialize(string,string,string,uint8,address,address,address,address)": "3357162b",
							"isBlacklisted(address)": "fe575a87",
							"isMinter(address)": "aa271e1a",
							"masterMinter()": "35d99f35",
							"mint(address,uint256)": "40c10f19",
							"minterAllowance(address)": "8a6db9c3",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"pauser()": "9fd0506d",
							"removeMinter(address)": "3092afd5",
							"renounceOwnership()": "715018a6",
							"rescueERC20(address,address,uint256)": "b2118a8d",
							"rescuer()": "38a63183",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unBlacklist(address)": "1a895266",
							"updateBlacklister(address)": "ad38bf22",
							"updateMasterMinter(address)": "aa20e1e4",
							"updateRescuer(address)": "2ab60045"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"}],\"name\":\"BlacklisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"}],\"name\":\"MasterMinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterMinter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintByMaster\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"MinterConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMinter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PauserChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"RescuerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"UnBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blacklister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minterAllowedAmount\",\"type\":\"uint256\"}],\"name\":\"configureMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenCurrency\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"newMasterMinter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newBlacklister\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"minterAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rescuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBlacklister\",\"type\":\"address\"}],\"name\":\"updateBlacklister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newMasterMinter\",\"type\":\"address\"}],\"name\":\"updateMasterMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRescuer\",\"type\":\"address\"}],\"name\":\"updateRescuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 Token backed by fiat reserves\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"Token owner's address\",\"spender\":\"Spender's address\"},\"returns\":{\"_0\":\"Allowance amount\"}},\"approve(address,uint256)\":{\"params\":{\"spender\":\"Spender's address\",\"value\":\"Allowance amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"balanceOf(address)\":{\"details\":\"Get token balance of an account\",\"params\":{\"account\":\"address The account\"}},\"blacklist(address)\":{\"details\":\"Adds account to blacklist\",\"params\":{\"_account\":\"The address to blacklist\"}},\"burn(uint256)\":{\"details\":\"allows a minter to burn some of its own tokens Validates that caller is a minter and that sender is not blacklisted amount is less than or equal to the minter's account balance\",\"params\":{\"_amount\":\"uint256 the amount of tokens to be burned\"}},\"configureMinter(address,uint256)\":{\"details\":\"Function to add/update a new minter\",\"params\":{\"minter\":\"The address of the minter\",\"minterAllowedAmount\":\"The minting amount allowed for the minter\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"isBlacklisted(address)\":{\"details\":\"Checks if account is blacklisted\",\"params\":{\"_account\":\"The address to check\"}},\"isMinter(address)\":{\"details\":\"Checks if account is a minter\",\"params\":{\"account\":\"The address to check\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint. Must be less than or equal to the minterAllowance of the caller.\",\"_to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"minterAllowance(address)\":{\"details\":\"Get minter allowance for an account\",\"params\":{\"minter\":\"The address of the minter\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeMinter(address)\":{\"details\":\"Function to remove a minter\",\"params\":{\"minter\":\"The address of the minter to remove\"},\"returns\":{\"_0\":\"True if the operation was successful.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"rescueERC20(address,address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Recipient address\",\"tokenContract\":\"ERC20 token contract address\"}},\"rescuer()\":{\"returns\":{\"_0\":\"Rescuer's address\"}},\"totalSupply()\":{\"details\":\"Get totalSupply of token\"},\"transfer(address,uint256)\":{\"params\":{\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"from\":\"Payer's address\",\"to\":\"Payee's address\",\"value\":\"Transfer amount\"},\"returns\":{\"_0\":\"True if successful\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unBlacklist(address)\":{\"details\":\"Removes account from blacklist\",\"params\":{\"_account\":\"The address to remove from the blacklist\"}},\"updateRescuer(address)\":{\"params\":{\"newRescuer\":\"New rescuer's address\"}}},\"title\":\"USDm\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Amount of remaining tokens spender is allowed to transfer on behalf of the token owner\"},\"approve(address,uint256)\":{\"notice\":\"Set spender's allowance over the caller's tokens to be a given value.\"},\"rescueERC20(address,address,uint256)\":{\"notice\":\"Rescue ERC20 tokens locked up in this contract.\"},\"rescuer()\":{\"notice\":\"Returns current rescuer\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens from the caller\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens by spending allowance\"},\"updateRescuer(address)\":{\"notice\":\"Assign the rescuer role to a given address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"USDm.sol\":\"USDm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"AbstractUSDm.sol\":{\"keccak256\":\"0xf18dc8e58be125df6a2119610cfec64b370c7a172a52d05c398bdc87e1292b95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a6d15e404f517c0dc14a0f2506dc350ae377bea2618abc9915d78c1f7b52dcd\",\"dweb:/ipfs/QmYFm8cmHG21jdnYZoqM6KDKsvrF22uLhBfK1Y6wsYFfgr\"]},\"Address.sol\":{\"keccak256\":\"0xf33245569f718dfb2958ee7e2015cd2112e9227803a5996ef89900a30d7698f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c891820b284a26f6d99811c7c37f7b430e07e98938b14940738e8b154ff54b\",\"dweb:/ipfs/QmaJ338qmrvWWRXtZKZqPc3cGT8wVH1inM5WgFtHfkMexg\"]},\"Blacklistable.sol\":{\"keccak256\":\"0xcfc1a39064a806b71586e19ea5db79c312d0ff679d4e283388a231d3296ffea0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e3fbe994985b7ee2569bca60f0b06b2ca0031d58e7ffb1b75c88eb047795b3d\",\"dweb:/ipfs/QmSQMix6QixoUTT7zdmj1Bi6t4vxgXTej7rNKor1231c9F\"]},\"Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"Ownable.sol\":{\"keccak256\":\"0x1ff0e24b46e1ffd5492d354b917f039cb789e4c24bf8fe57aa62c3805c901ec1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c55ea5b40556884d06b3e0eb477c269de45faa81aacca7f5536a543e3f1fe244\",\"dweb:/ipfs/QmfE47Ftm6yRJzHAYtdj9K7HLV7boqjFuZ5er32836hvTB\"]},\"Pausable.sol\":{\"keccak256\":\"0xac72f1e3d6876fc17cc25f07f8204ab361e60ef1d4ba9cb07817df1666dcd553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b5f53eba69b7d817e434aff4aed4c51a13d621ed5767119d13697da1e67b010\",\"dweb:/ipfs/QmaPqfvQbupTG6Dv9TbPkpg67qtX8KJhG8z1FEiGLoAd3P\"]},\"Rescuable.sol\":{\"keccak256\":\"0xe87b5fd6bc0f76c64c00ae67a1c48f3d165ff0e1b812fc0466166a431f4ba4ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80c6b6697a165386f11f05e503e23dd9431b22a351d7b905dca300c340a85587\",\"dweb:/ipfs/Qmb8Dm61grnN7TNuDKdbUjf8iAt2eT22hmdDiiDWgDDB5m\"]},\"SafeERC20.sol\":{\"keccak256\":\"0x252eafa9493f55739d597c91ac57367d2b748a259cc2fdaded507257fef821f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4871e6a10c357d24417a53e7e32d1f59518defb67ff4c2c16793ee4efef3a25\",\"dweb:/ipfs/QmYejDVZjHoeaqTx4ueia3x6EkvPUMdNvLsYD5mxzt6GA5\"]},\"USDm.sol\":{\"keccak256\":\"0x9c6bd3b13abb47fdacbd56bfaae01e68e741b7014a9e5afb4dc647f77e14855a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7854dab8176ead02e58e4aced90f3a83d06762cd727b11895b1fc39b8c276b1\",\"dweb:/ipfs/QmPCYTiFMHcDibnNKfjj8Y5XeG3vYkyGVCLZ9pM9vRq75b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 557,
								"contract": "USDm.sol:USDm",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 662,
								"contract": "USDm.sol:USDm",
								"label": "pauser",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 674,
								"contract": "USDm.sol:USDm",
								"label": "_paused",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 327,
								"contract": "USDm.sol:USDm",
								"label": "blacklister",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 331,
								"contract": "USDm.sol:USDm",
								"label": "blacklisted",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 785,
								"contract": "USDm.sol:USDm",
								"label": "_rescuer",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1104,
								"contract": "USDm.sol:USDm",
								"label": "name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1106,
								"contract": "USDm.sol:USDm",
								"label": "symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1108,
								"contract": "USDm.sol:USDm",
								"label": "decimals",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							},
							{
								"astId": 1110,
								"contract": "USDm.sol:USDm",
								"label": "currency",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 1112,
								"contract": "USDm.sol:USDm",
								"label": "masterMinter",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1114,
								"contract": "USDm.sol:USDm",
								"label": "initialized",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1118,
								"contract": "USDm.sol:USDm",
								"label": "balances",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1124,
								"contract": "USDm.sol:USDm",
								"label": "allowed",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1127,
								"contract": "USDm.sol:USDm",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1131,
								"contract": "USDm.sol:USDm",
								"label": "minters",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1135,
								"contract": "USDm.sol:USDm",
								"label": "minterAllowed",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
							},
							"approve(address,uint256)": {
								"notice": "Set spender's allowance over the caller's tokens to be a given value."
							},
							"rescueERC20(address,address,uint256)": {
								"notice": "Rescue ERC20 tokens locked up in this contract."
							},
							"rescuer()": {
								"notice": "Returns current rescuer"
							},
							"transfer(address,uint256)": {
								"notice": "Transfer tokens from the caller"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfer tokens by spending allowance"
							},
							"updateRescuer(address)": {
								"notice": "Assign the rescuer role to a given address."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AbstractUSDm.sol": {
				"ast": {
					"absolutePath": "AbstractUSDm.sol",
					"exportedSymbols": {
						"AbstractUSDm": [
							23
						],
						"IERC20": [
							549
						]
					},
					"id": 24,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1178:22:0"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 24,
							"sourceUnit": 550,
							"src": "1204:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 549,
										"src": "1264:6:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "1264:6:0"
								}
							],
							"contractDependencies": [
								549
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 23,
							"linearizedBaseContracts": [
								23,
								549
							],
							"name": "AbstractUSDm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1330:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "1356:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:81:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:0:0"
									},
									"scope": 23,
									"src": "1278:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1431:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1454:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:75:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:0:0"
									},
									"scope": 23,
									"src": "1402:111:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 24,
							"src": "1230:286:0"
						}
					],
					"src": "1178:340:0"
				},
				"id": 0
			},
			"Address.sol": {
				"ast": {
					"absolutePath": "Address.sol",
					"exportedSymbols": {
						"Address": [
							318
						]
					},
					"id": 319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 25,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "131:69:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 318,
							"linearizedBaseContracts": [
								318
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1276:260:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 34,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1505:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1505:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1505:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1527:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1505:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 33,
												"id": 39,
												"nodeType": "Return",
												"src": "1498:30:1"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "225:979:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1230:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:17:1"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1270:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1270:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:6:1"
									},
									"scope": 318,
									"src": "1210:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "2542:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 52,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2569:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$318",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$318",
																				"typeString": "library Address"
																			}
																		],
																		"id": 51,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2561:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 50,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2561:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2561:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 55,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "2586:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2561:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2594:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2553:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "2553:73:1"
											},
											{
												"assignments": [
													61,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "2640:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 60,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2640:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 68,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2688:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 62,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2658:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2658:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 64,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "2680:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2658:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2658:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2639:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 70,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2719:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "2702:78:1"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1544:921:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2490:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2517:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2489:43:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:0:1"
									},
									"scope": 318,
									"src": "2471:317:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3639:86:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3670:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 87,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3678:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 85,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															112
														],
														"referencedDeclaration": 112,
														"src": "3657:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 84,
												"id": 90,
												"nodeType": "Return",
												"src": "3650:67:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2796:748:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3572:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3588:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3588:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:35:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3625:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 82,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3625:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:14:1"
									},
									"scope": 318,
									"src": "3550:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "4106:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 105,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4146:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4154:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4160:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 108,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "4163:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 104,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															132,
															182
														],
														"referencedDeclaration": 182,
														"src": "4124:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 103,
												"id": 110,
												"nodeType": "Return",
												"src": "4117:59:1"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3733:216:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3987:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3987:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4012:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4040:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4040:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:97:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "4092:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4092:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:14:1"
									},
									"scope": 318,
									"src": "3955:229:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "4706:113:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4746:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "4754:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4760:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 124,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															132,
															182
														],
														"referencedDeclaration": 182,
														"src": "4724:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4724:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 130,
												"nodeType": "Return",
												"src": "4717:94:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "4192:361:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4600:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4625:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4625:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4653:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4589:84:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "4692:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4692:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:14:1"
									},
									"scope": 318,
									"src": "4559:260:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5259:326:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 149,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5286:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$318",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$318",
																				"typeString": "library Address"
																			}
																		],
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5278:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 147,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5278:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5278:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5278:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 152,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "5303:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5278:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5310:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5270:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5270:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "5270:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 159,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5381:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 158,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "5370:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5370:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5390:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5362:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "5362:60:1"
											},
											{
												"assignments": [
													165,
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 165,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "5436:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 164,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5436:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "5450:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 166,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5450:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 174,
												"initialValue": {
													"arguments": [
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "5503:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 168,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "5477:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5477:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "5496:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5477:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 176,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5543:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 177,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5552:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 178,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5564:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 175,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5526:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5526:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 145,
												"id": 180,
												"nodeType": "Return",
												"src": "5519:58:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "4827:242:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5141:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5141:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5169:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5193:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 140,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5193:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:121:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5245:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:14:1"
									},
									"scope": 318,
									"src": "5075:510:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5870:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5907:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5915:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5921:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 192,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															199,
															234
														],
														"referencedDeclaration": 234,
														"src": "5888:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 191,
												"id": 197,
												"nodeType": "Return",
												"src": "5881:80:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5593:171:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5798:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5814:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5814:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5797:35:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5856:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5855:14:1"
									},
									"scope": 318,
									"src": "5770:199:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "6323:233:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 213,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "6353:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 212,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "6342:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6342:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6362:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6334:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6334:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "6334:67:1"
											},
											{
												"assignments": [
													219,
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 219,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "6415:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 218,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6415:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "6429:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 220,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "6474:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 222,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6456:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6456:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6414:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 229,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6523:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 230,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "6535:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 227,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "6497:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 210,
												"id": 232,
												"nodeType": "Return",
												"src": "6490:58:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5977:178:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6199:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6224:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6224:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6252:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6188:97:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6309:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6309:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6308:14:1"
									},
									"scope": 318,
									"src": "6161:395:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "6840:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6879:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6887:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6893:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 244,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															251,
															286
														],
														"referencedDeclaration": 286,
														"src": "6858:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6858:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 243,
												"id": 249,
												"nodeType": "Return",
												"src": "6851:84:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6564:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6773:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6789:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6789:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6772:35:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "6826:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6826:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:14:1"
									},
									"scope": 318,
									"src": "6743:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7296:237:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 265,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "7326:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 264,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "7315:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7315:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7335:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7307:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "7307:69:1"
											},
											{
												"assignments": [
													271,
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 271,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "7390:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 270,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7390:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "7404:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 272,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7404:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [
														{
															"id": 276,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7451:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 274,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "7431:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7431:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7431:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7389:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 280,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7491:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 281,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "7500:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 282,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "7512:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 279,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "7474:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7474:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 284,
												"nodeType": "Return",
												"src": "7467:58:1"
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "6951:180:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7177:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7202:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7202:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7230:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7230:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:97:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7282:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7282:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7281:14:1"
									},
									"scope": 318,
									"src": "7137:396:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "7925:598:1",
										"statements": [
											{
												"condition": {
													"id": 298,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "7940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 314,
													"nodeType": "Block",
													"src": "7999:517:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 302,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "8085:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8085:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8105:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8085:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 312,
																"nodeType": "Block",
																"src": "8450:55:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 309,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 293,
																					"src": "8476:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 308,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8469:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8469:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 311,
																		"nodeType": "ExpressionStatement",
																		"src": "8469:20:1"
																	}
																]
															},
															"id": 313,
															"nodeType": "IfStatement",
															"src": "8081:424:1",
															"trueBody": {
																"id": 307,
																"nodeType": "Block",
																"src": "8108:336:1",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8281:148:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8304:40:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8333:10:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8327:5:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8327:17:1"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8308:15:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8377:2:1",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8381:10:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8373:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8373:19:1"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8394:15:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8366:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8366:44:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8366:44:1"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 291,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8333:10:1",
																				"valueSize": 1
																			},
																			{
																				"declaration": 291,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8381:10:1",
																				"valueSize": 1
																			}
																		],
																		"id": 306,
																		"nodeType": "InlineAssembly",
																		"src": "8272:157:1"
																	}
																]
															}
														}
													]
												},
												"id": 315,
												"nodeType": "IfStatement",
												"src": "7936:580:1",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "7949:44:1",
													"statements": [
														{
															"expression": {
																"id": 299,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "7971:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 297,
															"id": 300,
															"nodeType": "Return",
															"src": "7964:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7541:214:1",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "7797:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7797:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "7820:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7820:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "7854:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 292,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7854:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:101:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "7911:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7910:14:1"
									},
									"scope": 318,
									"src": "7761:762:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 319,
							"src": "202:8324:1"
						}
					],
					"src": "104:8424:1"
				},
				"id": 1
			},
			"Blacklistable.sol": {
				"ast": {
					"absolutePath": "Blacklistable.sol",
					"exportedSymbols": {
						"Blacklistable": [
							449
						],
						"Ownable": [
							654
						]
					},
					"id": 450,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 320,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1178:22:2"
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 322,
							"nodeType": "ImportDirective",
							"scope": 450,
							"sourceUnit": 655,
							"src": "1204:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "1213:7:2",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 654,
										"src": "1382:7:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "1382:7:2"
								}
							],
							"contractDependencies": [
								471,
								654
							],
							"contractKind": "contract",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "1248:106:2",
								"text": " @title Blacklistable Token\n @dev Allows accounts to be blacklisted by a \"blacklister\" role"
							},
							"fullyImplemented": true,
							"id": 449,
							"linearizedBaseContracts": [
								449,
								654,
								471
							],
							"name": "Blacklistable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bd102430",
									"id": 327,
									"mutability": "mutable",
									"name": "blacklister",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "1397:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 326,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1397:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "blacklisted",
									"nodeType": "VariableDeclaration",
									"scope": 449,
									"src": "1430:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 330,
										"keyType": {
											"id": 328,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1438:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1430:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 329,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1449:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 335,
									"name": "Blacklisted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1502:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:26:2"
									},
									"src": "1484:44:2"
								},
								{
									"anonymous": false,
									"id": 339,
									"name": "UnBlacklisted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "1554:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1554:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:26:2"
									},
									"src": "1534:46:2"
								},
								{
									"anonymous": false,
									"id": 343,
									"name": "BlacklisterChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "newBlacklister",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1611:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:32:2"
									},
									"src": "1586:57:2"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "1768:150:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 347,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1801:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1801:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 349,
																"name": "blacklister",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1815:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1801:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c69737461626c653a2063616c6c6572206973206e6f742074686520626c61636b6c6973746572",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a",
																"typeString": "literal_string \"Blacklistable: caller is not the blacklister\""
															},
															"value": "Blacklistable: caller is not the blacklister"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_442f19dbec18021882bb0a35000adc199d6be9fb41af6abbee81373eeb59cf3a",
																"typeString": "literal_string \"Blacklistable: caller is not the blacklister\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1779:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:119:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1779:119:2"
											},
											{
												"id": 354,
												"nodeType": "PlaceholderStatement",
												"src": "1909:1:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1651:84:2",
										"text": " @dev Throws if called by any account other than the blacklister"
									},
									"id": 356,
									"name": "onlyBlacklister",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:2"
									},
									"src": "1741:177:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2086:140:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2119:22:2",
															"subExpression": {
																"baseExpression": {
																	"id": 362,
																	"name": "blacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "2120:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 364,
																"indexExpression": {
																	"id": 363,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "2132:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2120:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c69737461626c653a206163636f756e7420697320626c61636b6c6973746564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecc963872328e737973a951071ec1f96e85ec0606c61c24700f2fd1c45dc519d",
																"typeString": "literal_string \"Blacklistable: account is blacklisted\""
															},
															"value": "Blacklistable: account is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecc963872328e737973a951071ec1f96e85ec0606c61c24700f2fd1c45dc519d",
																"typeString": "literal_string \"Blacklistable: account is blacklisted\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2097:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:109:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2097:109:2"
											},
											{
												"id": 369,
												"nodeType": "PlaceholderStatement",
												"src": "2217:1:2"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1926:112:2",
										"text": " @dev Throws if argument account is blacklisted\n @param _account The address to check"
									},
									"id": 371,
									"name": "notBlacklisted",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2068:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:18:2"
									},
									"src": "2044:182:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2413:47:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 379,
														"name": "blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2431:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 381,
													"indexExpression": {
														"id": 380,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "2443:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2431:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 378,
												"id": 382,
												"nodeType": "Return",
												"src": "2424:28:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2234:103:2",
										"text": " @dev Checks if account is blacklisted\n @param _account The address to check"
									},
									"functionSelector": "fe575a87",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlacklisted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2366:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2366:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2365:18:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2407:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:2"
									},
									"scope": 449,
									"src": "2343:117:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "2636:84:2",
										"statements": [
											{
												"expression": {
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 392,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2647:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 394,
														"indexExpression": {
															"id": 393,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2659:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2647:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2671:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2647:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "2647:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 399,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "2703:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2691:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2691:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "2686:26:2"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2468:100:2",
										"text": " @dev Adds account to blacklist\n @param _account The address to blacklist"
									},
									"functionSelector": "f9f92be4",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 390,
											"modifierName": {
												"id": 389,
												"name": "onlyBlacklister",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 356,
												"src": "2620:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2620:15:2"
										}
									],
									"name": "blacklist",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "2593:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2592:18:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2636:0:2"
									},
									"scope": 449,
									"src": "2574:146:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2919:87:2",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 411,
															"name": "blacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2930:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 413,
														"indexExpression": {
															"id": 412,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2942:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2930:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2954:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2930:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2930:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 418,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2989:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 417,
														"name": "UnBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2975:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "EmitStatement",
												"src": "2970:28:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "2728:121:2",
										"text": " @dev Removes account from blacklist\n @param _account The address to remove from the blacklist"
									},
									"functionSelector": "1a895266",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 409,
											"modifierName": {
												"id": 408,
												"name": "onlyBlacklister",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 356,
												"src": "2903:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2903:15:2"
										}
									],
									"name": "unBlacklist",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:18:2"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2919:0:2"
									},
									"scope": 449,
									"src": "2855:151:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3085:235:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "_newBlacklister",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3118:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3145:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3137:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 431,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3137:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3137:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3118:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b6c69737461626c653a206e657720626c61636b6c697374657220697320746865207a65726f2061646472657373",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3162:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e",
																"typeString": "literal_string \"Blacklistable: new blacklister is the zero address\""
															},
															"value": "Blacklistable: new blacklister is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8a80682c4f7cb6ada3e682a91db05829826b2ca71a91d568b7e9c50faf1777e",
																"typeString": "literal_string \"Blacklistable: new blacklister is the zero address\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3096:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "3096:129:2"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "blacklister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "3236:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "_newBlacklister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "3250:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3236:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "3236:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "blacklister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "3300:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "BlacklisterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "3281:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3281:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "EmitStatement",
												"src": "3276:36:2"
											}
										]
									},
									"functionSelector": "ad38bf22",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 427,
											"modifierName": {
												"id": 426,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 596,
												"src": "3075:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3075:9:2"
										}
									],
									"name": "updateBlacklister",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_newBlacklister",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3041:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:25:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3085:0:2"
									},
									"scope": 449,
									"src": "3014:306:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 450,
							"src": "1356:1967:2"
						}
					],
					"src": "1178:2147:2"
				},
				"id": 2
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							471
						]
					},
					"id": 472,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 451,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 452,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 471,
							"linearizedBaseContracts": [
								471
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "718:36:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 457,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 456,
												"id": 459,
												"nodeType": "Return",
												"src": "729:17:3"
											}
										]
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 471,
									"src": "656:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "829:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 466,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 465,
												"id": 468,
												"nodeType": "Return",
												"src": "840:15:3"
											}
										]
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:3"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "813:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:3"
									},
									"scope": 471,
									"src": "762:101:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 472,
							"src": "623:243:3"
						}
					],
					"src": "89:779:3"
				},
				"id": 3
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							549
						]
					},
					"id": 550,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 473,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 474,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 549,
							"linearizedBaseContracts": [
								549
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 483,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "418:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "440:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "460:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:4"
									},
									"src": "403:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 492,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "655:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "678:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:4"
									},
									"src": "640:78:4"
								},
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "846:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:4"
									},
									"scope": 549,
									"src": "800:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "962:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1002:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:4"
									},
									"scope": 549,
									"src": "943:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1251:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1263:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:4"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1297:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:4"
									},
									"scope": 549,
									"src": "1233:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "1606:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "1621:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:4"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "1661:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:4"
									},
									"scope": 549,
									"src": "1587:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2356:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2373:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2407:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 533,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:4"
									},
									"scope": 549,
									"src": "2339:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2754:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2777:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2798:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:76:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "2838:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2838:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:6:4"
									},
									"scope": 549,
									"src": "2722:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 550,
							"src": "210:2637:4"
						}
					],
					"src": "109:2740:4"
				},
				"id": 4
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							471
						],
						"Ownable": [
							654
						]
					},
					"id": 655,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 551,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:5"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 552,
							"nodeType": "ImportDirective",
							"scope": 655,
							"sourceUnit": 472,
							"src": "117:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 554,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "680:7:5"
									},
									"id": 555,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:5"
								}
							],
							"contractDependencies": [
								471
							],
							"contractKind": "contract",
							"documentation": {
								"id": 553,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 654,
							"linearizedBaseContracts": [
								654,
								471
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 557,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 654,
									"src": "695:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 556,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 563,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "753:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "784:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:5"
									},
									"src": "726:84:5"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "931:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 568,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "961:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 567,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "942:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "942:32:5"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 573,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:5"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:5"
									},
									"scope": 654,
									"src": "917:65:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "1118:32:5",
										"statements": [
											{
												"expression": {
													"id": 579,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 557,
													"src": "1136:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 578,
												"id": 580,
												"nodeType": "Return",
												"src": "1129:13:5"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:5"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "1109:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:5"
									},
									"scope": 654,
									"src": "1063:87:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "1264:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1283:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 588,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "1294:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:5"
											},
											{
												"id": 594,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:5"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 596,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:5"
									},
									"src": "1243:120:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "1768:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1806:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1798:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 603,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1798:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1798:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 602,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1779:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1779:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "1779:30:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1371:337:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 600,
											"modifierName": {
												"id": 599,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 596,
												"src": "1758:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1758:9:5"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1740:2:5"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1768:0:5"
									},
									"scope": 654,
									"src": "1714:103:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2042:131:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "2061:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2081:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2073:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 620,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2073:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2073:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2061:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "2053:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2156:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 628,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "2137:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2137:28:5"
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1825:141:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 616,
											"modifierName": {
												"id": 615,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 596,
												"src": "2032:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:9:5"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1999:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:18:5"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:5"
									},
									"scope": 654,
									"src": "1972:201:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2396:128:5",
										"statements": [
											{
												"assignments": [
													640
												],
												"declarations": [
													{
														"constant": false,
														"id": 640,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 652,
														"src": "2407:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 639,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"id": 641,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 557,
													"src": "2426:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:25:5"
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2443:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 644,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "2452:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2443:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2443:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "2497:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "2507:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 647,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2476:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2476:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "EmitStatement",
												"src": "2471:45:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "2181:146:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "2361:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:18:5"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2396:0:5"
									},
									"scope": 654,
									"src": "2333:191:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 655,
							"src": "651:1876:5"
						}
					],
					"src": "90:2439:5"
				},
				"id": 5
			},
			"Pausable.sol": {
				"ast": {
					"absolutePath": "Pausable.sol",
					"exportedSymbols": {
						"Context": [
							471
						],
						"Pausable": [
							769
						]
					},
					"id": 770,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:6"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 657,
							"nodeType": "ImportDirective",
							"scope": 770,
							"sourceUnit": 472,
							"src": "120:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 659,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 471,
										"src": "626:7:6"
									},
									"id": 660,
									"nodeType": "InheritanceSpecifier",
									"src": "626:7:6"
								}
							],
							"contractDependencies": [
								471
							],
							"contractKind": "contract",
							"documentation": {
								"id": 658,
								"nodeType": "StructuredDocumentation",
								"src": "147:447:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 769,
							"linearizedBaseContracts": [
								769,
								471
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9fd0506d",
									"id": 662,
									"mutability": "mutable",
									"name": "pauser",
									"nodeType": "VariableDeclaration",
									"scope": 769,
									"src": "641:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 661,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "669:75:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 667,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "763:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:17:6"
									},
									"src": "750:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "788:72:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 672,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "881:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:17:6"
									},
									"src": "866:32:6"
								},
								{
									"constant": false,
									"id": 674,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 769,
									"src": "906:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 673,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "906:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 678,
									"name": "PauserChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "955:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:28:6"
									},
									"src": "935:48:6"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "1080:34:6",
										"statements": [
											{
												"expression": {
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 682,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1101:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1091:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "1091:15:6"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "991:69:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 687,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:6"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1080:0:6"
									},
									"scope": 769,
									"src": "1066:48:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1229:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 691,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1248:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1248:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 693,
																"name": "pauser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "1262:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a2063616c6c6572206973206e6f742074686520706175736572",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1270:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb61fa8ad60f7892feb0ba6171f9291d7e363c751b387daa1e319220d0c28049",
																"typeString": "literal_string \"Pausable: caller is not the pauser\""
															},
															"value": "Pausable: caller is not the pauser"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb61fa8ad60f7892feb0ba6171f9291d7e363c751b387daa1e319220d0c28049",
																"typeString": "literal_string \"Pausable: caller is not the pauser\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1240:67:6"
											},
											{
												"id": 698,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:6"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1122:79:6",
										"text": " @dev throws if called by any account other than the pauser"
									},
									"id": 700,
									"name": "onlyPauser",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:6"
									},
									"src": "1207:120:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1482:33:6",
										"statements": [
											{
												"expression": {
													"id": 706,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 674,
													"src": "1500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 705,
												"id": 707,
												"nodeType": "Return",
												"src": "1493:14:6"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "1337:86:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1444:2:6"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1476:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1476:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1475:6:6"
									},
									"scope": 769,
									"src": "1429:86:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1735:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1754:9:6",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 713,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1755:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1755:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1765:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "1746:38:6"
											},
											{
												"id": 719,
												"nodeType": "PlaceholderStatement",
												"src": "1795:1:6"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1523:181:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 721,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:2:6"
									},
									"src": "1710:94:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "2013:72:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 725,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "2032:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:8:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2042:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2024:41:6"
											},
											{
												"id": 730,
												"nodeType": "PlaceholderStatement",
												"src": "2076:1:6"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "1812:173:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 732,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2010:2:6"
									},
									"src": "1991:94:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2289:69:6",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 740,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2300:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2310:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2300:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "2300:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 745,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2337:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2337:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 744,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "2330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "EmitStatement",
												"src": "2325:25:6"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2093:130:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 736,
											"modifierName": {
												"id": 735,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "2264:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2264:13:6"
										},
										{
											"id": 738,
											"modifierName": {
												"id": 737,
												"name": "onlyPauser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 700,
												"src": "2278:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2278:10:6"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:2:6"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2289:0:6"
									},
									"scope": 769,
									"src": "2229:129:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "2558:72:6",
										"statements": [
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "2569:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2579:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2569:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "2569:15:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 763,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2609:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2609:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2600:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "EmitStatement",
												"src": "2595:27:6"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "2366:127:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 754,
											"modifierName": {
												"id": 753,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 732,
												"src": "2536:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2536:10:6"
										},
										{
											"id": 756,
											"modifierName": {
												"id": 755,
												"name": "onlyPauser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 700,
												"src": "2547:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2547:10:6"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:2:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2558:0:6"
									},
									"scope": 769,
									"src": "2499:131:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 770,
							"src": "596:2037:6"
						}
					],
					"src": "93:2542:6"
				},
				"id": 6
			},
			"Rescuable.sol": {
				"ast": {
					"absolutePath": "Rescuable.sol",
					"exportedSymbols": {
						"IERC20": [
							549
						],
						"Ownable": [
							654
						],
						"Rescuable": [
							860
						],
						"SafeERC20": [
							1084
						]
					},
					"id": 861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 771,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1178:22:7"
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 773,
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 655,
							"src": "1204:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 772,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "1213:7:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 775,
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 550,
							"src": "1246:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 774,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "1255:6:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeERC20.sol",
							"file": "./SafeERC20.sol",
							"id": 777,
							"nodeType": "ImportDirective",
							"scope": 861,
							"sourceUnit": 1085,
							"src": "1286:44:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 776,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "1295:9:7",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 778,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 654,
										"src": "1356:7:7"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:7:7"
								}
							],
							"contractDependencies": [
								471,
								654
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 860,
							"linearizedBaseContracts": [
								860,
								654,
								471
							],
							"name": "Rescuable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 783,
									"libraryName": {
										"id": 780,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1084,
										"src": "1377:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1371:27:7",
									"typeName": {
										"id": 782,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 781,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 549,
											"src": "1391:6:7"
										},
										"referencedDeclaration": 549,
										"src": "1391:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$549",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 785,
									"mutability": "mutable",
									"name": "_rescuer",
									"nodeType": "VariableDeclaration",
									"scope": 860,
									"src": "1406:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 784,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1406:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 789,
									"name": "RescuerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRescuer",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "1460:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:28:7"
									},
									"src": "1439:49:7"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "1639:34:7",
										"statements": [
											{
												"expression": {
													"id": 795,
													"name": "_rescuer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 785,
													"src": "1657:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 794,
												"id": 796,
												"nodeType": "Return",
												"src": "1650:15:7"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "1496:86:7",
										"text": " @notice Returns current rescuer\n @return Rescuer's address"
									},
									"functionSelector": "38a63183",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rescuer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1604:2:7"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "1630:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:9:7"
									},
									"scope": 860,
									"src": "1588:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "1794:102:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 802,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1813:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1813:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 804,
																"name": "_rescuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "1827:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1813:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573637561626c653a2063616c6c6572206973206e6f74207468652072657363756572",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab",
																"typeString": "literal_string \"Rescuable: caller is not the rescuer\""
															},
															"value": "Rescuable: caller is not the rescuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bca11e2be39f1d0fced52e0acd4b8db520b6b8403c87b45e64d1349895f0aab",
																"typeString": "literal_string \"Rescuable: caller is not the rescuer\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1805:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1805:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "1805:71:7"
											},
											{
												"id": 809,
												"nodeType": "PlaceholderStatement",
												"src": "1887:1:7"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "1681:84:7",
										"text": " @notice Revert if called by any account other than the rescuer."
									},
									"id": 811,
									"name": "onlyRescuer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1791:2:7"
									},
									"src": "1771:125:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "2257:57:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 827,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "2295:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "2299:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 824,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "2268:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 891,
														"src": "2268:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$549_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2268:38:7"
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "1904:221:7",
										"text": " @notice Rescue ERC20 tokens locked up in this contract.\n @param tokenContract ERC20 token contract address\n @param to        Recipient address\n @param amount    Amount to withdraw"
									},
									"functionSelector": "b2118a8d",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 822,
											"modifierName": {
												"id": 821,
												"name": "onlyRescuer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 811,
												"src": "2245:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2245:11:7"
										}
									],
									"name": "rescueERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokenContract",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2162:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 813,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "2162:6:7"
													},
													"referencedDeclaration": 549,
													"src": "2162:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2193:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2214:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:84:7"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:7"
									},
									"scope": 860,
									"src": "2131:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "2510:209:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "newRescuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "2543:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2565:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2557:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 842,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2557:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2557:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2543:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526573637561626c653a206e6577207265736375657220697320746865207a65726f2061646472657373",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2582:44:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f",
																"typeString": "literal_string \"Rescuable: new rescuer is the zero address\""
															},
															"value": "Rescuable: new rescuer is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b73485905d4051917013780743b3f01a5e5307ebb5dfb7e3a6d0a16dcb40a3f",
																"typeString": "literal_string \"Rescuable: new rescuer is the zero address\""
															}
														],
														"id": 840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2521:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "2521:116:7"
											},
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "_rescuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "2648:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 851,
														"name": "newRescuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2659:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2648:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "2648:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 855,
															"name": "newRescuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "2700:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 854,
														"name": "RescuerChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "2685:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2685:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "EmitStatement",
												"src": "2680:31:7"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2322:120:7",
										"text": " @notice Assign the rescuer role to a given address.\n @param newRescuer New rescuer's address"
									},
									"functionSelector": "2ab60045",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 838,
											"modifierName": {
												"id": 837,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 596,
												"src": "2500:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2500:9:7"
										}
									],
									"name": "updateRescuer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "newRescuer",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "2471:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:20:7"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:7"
									},
									"scope": 860,
									"src": "2448:271:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 861,
							"src": "1334:1388:7"
						}
					],
					"src": "1178:1546:7"
				},
				"id": 7
			},
			"SafeERC20.sol": {
				"ast": {
					"absolutePath": "SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							318
						],
						"IERC20": [
							549
						],
						"SafeERC20": [
							1084
						]
					},
					"id": 1085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 863,
							"nodeType": "ImportDirective",
							"scope": 1085,
							"sourceUnit": 550,
							"src": "130:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Address.sol",
							"file": "./Address.sol",
							"id": 864,
							"nodeType": "ImportDirective",
							"scope": 1085,
							"sourceUnit": 319,
							"src": "154:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "181:465:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1084,
							"linearizedBaseContracts": [
								1084
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 868,
									"libraryName": {
										"id": 866,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 318,
										"src": "679:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "673:26:8",
									"typeName": {
										"id": 867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "813:105:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "844:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 882,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "874:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$549",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 516,
																		"src": "874:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "874:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 885,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "899:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "903:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 880,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "851:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "851:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "851:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 878,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "824:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "824:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "824:86:8"
											}
										]
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "739:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "739:6:8"
													},
													"referencedDeclaration": 549,
													"src": "739:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "762:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "783:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:75:8"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "813:0:8"
									},
									"scope": 1084,
									"src": "707:211:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "1059:115:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1090:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 907,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "1120:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$549",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 548,
																		"src": "1120:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1120:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 910,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "1149:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 911,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "1155:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 912,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "1159:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1097:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1097:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1097:68:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1070:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:96:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1070:96:8"
											}
										]
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "962:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "962:6:8"
													},
													"referencedDeclaration": 549,
													"src": "962:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "985:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1008:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1029:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:98:8"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:0:8"
									},
									"scope": 1084,
									"src": "926:248:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1553:506:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "1807:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1816:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1807:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 932,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1806:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 937,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1847:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1084",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1084",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 936,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1839:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 935,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1839:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 938,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1839:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 939,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 923,
																					"src": "1854:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 933,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "1823:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$549",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 526,
																				"src": "1823:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1823:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1866:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1823:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 943,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1822:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1806:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1883:56:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1784:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1784:166:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1784:166:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "1981:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 952,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "2011:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$549",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 536,
																		"src": "2011:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2011:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 955,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "2035:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 956,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "2044:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 950,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1988:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1988:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1988:62:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 948,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1961:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1961:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "1961:90:8"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1182:255:8",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 919,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "1474:6:8"
													},
													"referencedDeclaration": 549,
													"src": "1474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1497:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1523:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:80:8"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:8"
									},
									"scope": 1084,
									"src": "1443:616:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "2187:197:8",
										"statements": [
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 996,
														"src": "2198:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2198:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 977,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2245:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1084",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1084",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2237:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 975,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2237:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2237:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 979,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2252:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 973,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2221:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$549",
																	"typeString": "contract IERC20"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 526,
															"src": "2221:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2221:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 981,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "2263:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2198:70:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 985,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "2299:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 988,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "2329:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$549",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 536,
																		"src": "2329:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2329:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 991,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "2353:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 992,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "2362:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 986,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2306:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2306:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2306:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$549",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 984,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "2279:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:97:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "2279:97:8"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2108:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 962,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "2108:6:8"
													},
													"referencedDeclaration": 549,
													"src": "2108:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2131:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "2157:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:80:8"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:8"
									},
									"scope": 1084,
									"src": "2067:317:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "2512:377:8",
										"statements": [
											{
												"id": 1043,
												"nodeType": "UncheckedBlock",
												"src": "2523:359:8",
												"statements": [
													{
														"assignments": [
															1008
														],
														"declarations": [
															{
																"constant": false,
																"id": 1008,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 1043,
																"src": "2548:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1007,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2548:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1017,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1013,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2595:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1084",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1084",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2587:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1011,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2587:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2587:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1015,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "2602:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1009,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2571:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$549",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 526,
																"src": "2571:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2571:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2548:62:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1019,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1008,
																		"src": "2633:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1020,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "2649:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2633:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2656:43:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1018,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2625:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2625:75:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1024,
														"nodeType": "ExpressionStatement",
														"src": "2625:75:8"
													},
													{
														"assignments": [
															1026
														],
														"declarations": [
															{
																"constant": false,
																"id": 1026,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 1043,
																"src": "2715:20:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1025,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1030,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "2738:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2753:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "2793:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$549",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1035,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "2823:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$549",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 536,
																				"src": "2823:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2823:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1038,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "2847:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1039,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "2856:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1033,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2800:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2800:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2800:69:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$549",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1031,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "2773:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$549_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2773:97:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "2773:97:8"
													}
												]
											}
										]
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 999,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 998,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "2433:6:8"
													},
													"referencedDeclaration": 549,
													"src": "2433:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2456:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2456:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2482:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:80:8"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:8"
									},
									"scope": 1084,
									"src": "2392:497:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "3350:646:8",
										"statements": [
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "3704:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1054,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3704:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1061,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "3758:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3764:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1058,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "3738:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$549",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$549",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3730:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3730:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3730:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "3730:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3730:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3704:95:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1065,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3814:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3814:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3834:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3814:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "3810:179:8",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "3837:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1072,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1055,
																				"src": "3911:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1074,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3924:4:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1073,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3924:4:8",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1075,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3923:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1070,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3900:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3900:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3900:30:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3932:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1069,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3892:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3892:85:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "ExpressionStatement",
															"src": "3892:85:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "2897:377:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "3309:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$549",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1047,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 549,
														"src": "3309:6:8"
													},
													"referencedDeclaration": 549,
													"src": "3309:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$549",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "3323:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3323:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3308:33:8"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3350:0:8"
									},
									"scope": 1084,
									"src": "3280:716:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1085,
							"src": "648:3351:8"
						}
					],
					"src": "103:3898:8"
				},
				"id": 8
			},
			"USDm.sol": {
				"ast": {
					"absolutePath": "USDm.sol",
					"exportedSymbols": {
						"AbstractUSDm": [
							23
						],
						"Blacklistable": [
							449
						],
						"Context": [
							471
						],
						"IERC20": [
							549
						],
						"Ownable": [
							654
						],
						"Pausable": [
							769
						],
						"Rescuable": [
							860
						],
						"SafeERC20": [
							1084
						],
						"USDm": [
							1866
						]
					},
					"id": 1867,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "1178:23:9"
						},
						{
							"absolutePath": "AbstractUSDm.sol",
							"file": "./AbstractUSDm.sol",
							"id": 1087,
							"nodeType": "ImportDirective",
							"scope": 1867,
							"sourceUnit": 24,
							"src": "1205:28:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1088,
							"nodeType": "ImportDirective",
							"scope": 1867,
							"sourceUnit": 655,
							"src": "1235:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Pausable.sol",
							"file": "./Pausable.sol",
							"id": 1089,
							"nodeType": "ImportDirective",
							"scope": 1867,
							"sourceUnit": 770,
							"src": "1260:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Blacklistable.sol",
							"file": "./Blacklistable.sol",
							"id": 1090,
							"nodeType": "ImportDirective",
							"scope": 1867,
							"sourceUnit": 450,
							"src": "1286:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Rescuable.sol",
							"file": "./Rescuable.sol",
							"id": 1091,
							"nodeType": "ImportDirective",
							"scope": 1867,
							"sourceUnit": 861,
							"src": "1317:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1093,
										"name": "AbstractUSDm",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 23,
										"src": "1434:12:9"
									},
									"id": 1094,
									"nodeType": "InheritanceSpecifier",
									"src": "1434:12:9"
								},
								{
									"baseName": {
										"id": 1095,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 654,
										"src": "1448:7:9"
									},
									"id": 1096,
									"nodeType": "InheritanceSpecifier",
									"src": "1448:7:9"
								},
								{
									"baseName": {
										"id": 1097,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 769,
										"src": "1457:8:9"
									},
									"id": 1098,
									"nodeType": "InheritanceSpecifier",
									"src": "1457:8:9"
								},
								{
									"baseName": {
										"id": 1099,
										"name": "Blacklistable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 449,
										"src": "1467:13:9"
									},
									"id": 1100,
									"nodeType": "InheritanceSpecifier",
									"src": "1467:13:9"
								},
								{
									"baseName": {
										"id": 1101,
										"name": "Rescuable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 860,
										"src": "1482:9:9"
									},
									"id": 1102,
									"nodeType": "InheritanceSpecifier",
									"src": "1482:9:9"
								}
							],
							"contractDependencies": [
								23,
								449,
								471,
								549,
								654,
								769,
								860
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1092,
								"nodeType": "StructuredDocumentation",
								"src": "1346:69:9",
								"text": " @title USDm\n @dev ERC20 Token backed by fiat reserves"
							},
							"fullyImplemented": true,
							"id": 1866,
							"linearizedBaseContracts": [
								1866,
								860,
								449,
								769,
								654,
								471,
								23,
								549
							],
							"name": "USDm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1104,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1501:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1103,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1501:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1106,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1526:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1105,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1526:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 1108,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1553:21:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1107,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1553:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5a6b10f",
									"id": 1110,
									"mutability": "mutable",
									"name": "currency",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1581:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1109,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1581:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "35d99f35",
									"id": 1112,
									"mutability": "mutable",
									"name": "masterMinter",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1610:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1610:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1114,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1644:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1113,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1644:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1118,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1678:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1117,
										"keyType": {
											"id": 1115,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1686:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1678:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1116,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1697:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1124,
									"mutability": "mutable",
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1730:64:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1123,
										"keyType": {
											"id": 1119,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1738:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1730:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1122,
											"keyType": {
												"id": 1120,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1757:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1749:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1768:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1127,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1801:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1125,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1801:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1833:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1131,
									"mutability": "mutable",
									"name": "minters",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1841:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1130,
										"keyType": {
											"id": 1128,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1849:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1841:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1129,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1860:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1135,
									"mutability": "mutable",
									"name": "minterAllowed",
									"nodeType": "VariableDeclaration",
									"scope": 1866,
									"src": "1889:50:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1134,
										"keyType": {
											"id": 1132,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1897:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1889:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1133,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1908:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1143,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1959:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1983:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "2003:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:60:9"
									},
									"src": "1948:71:9"
								},
								{
									"anonymous": false,
									"id": 1151,
									"name": "MintByMaster",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"indexed": true,
												"mutability": "mutable",
												"name": "masterMinter",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2044:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2074:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "2094:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:66:9"
									},
									"src": "2025:85:9"
								},
								{
									"anonymous": false,
									"id": 1157,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "burner",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2127:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2151:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:40:9"
									},
									"src": "2116:51:9"
								},
								{
									"anonymous": false,
									"id": 1163,
									"name": "MinterConfigured",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2196:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2196:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"indexed": false,
												"mutability": "mutable",
												"name": "minterAllowedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2220:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2220:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2195:53:9"
									},
									"src": "2173:76:9"
								},
								{
									"anonymous": false,
									"id": 1167,
									"name": "MinterRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldMinter",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "2275:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:27:9"
									},
									"src": "2255:47:9"
								},
								{
									"anonymous": false,
									"id": 1171,
									"name": "MasterMinterChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"indexed": true,
												"mutability": "mutable",
												"name": "newMasterMinter",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2334:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:33:9"
									},
									"src": "2308:59:9"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "2669:888:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2688:12:9",
															"subExpression": {
																"id": 1191,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "2689:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2702:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_487ab07a77a6966615a257c4a90c8e83394bb2eea4dcab4e93f67ca70a59b887",
																"typeString": "literal_string \"USDm: contract is already initialized\""
															},
															"value": "USDm: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_487ab07a77a6966615a257c4a90c8e83394bb2eea4dcab4e93f67ca70a59b887",
																"typeString": "literal_string \"USDm: contract is already initialized\""
															}
														],
														"id": 1190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2680:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2680:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1197,
																"name": "newMasterMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "2775:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2802:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2794:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2794:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2794:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2775:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206e6577206d61737465724d696e74657220697320746865207a65726f2061646472657373",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2819:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12",
																"typeString": "literal_string \"USDm: new masterMinter is the zero address\""
															},
															"value": "USDm: new masterMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12",
																"typeString": "literal_string \"USDm: new masterMinter is the zero address\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2753:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:121:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "2753:121:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "newPauser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2907:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2928:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2920:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2920:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2920:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2907:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206e65772070617573657220697320746865207a65726f2061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2945:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c93055f798d3a82fbbf08971efec49acd2286b4109c6080c74916ed7c970fbe8",
																"typeString": "literal_string \"USDm: new pauser is the zero address\""
															},
															"value": "USDm: new pauser is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c93055f798d3a82fbbf08971efec49acd2286b4109c6080c74916ed7c970fbe8",
																"typeString": "literal_string \"USDm: new pauser is the zero address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2885:109:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1217,
																"name": "newBlacklister",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "3027:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3053:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3045:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3045:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3045:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3027:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206e657720626c61636b6c697374657220697320746865207a65726f2061646472657373",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3070:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84f8be079f1fc6a290015693f3cd08f7ea691b438dec36a73867ea895cd3583d",
																"typeString": "literal_string \"USDm: new blacklister is the zero address\""
															},
															"value": "USDm: new blacklister is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84f8be079f1fc6a290015693f3cd08f7ea691b438dec36a73867ea895cd3583d",
																"typeString": "literal_string \"USDm: new blacklister is the zero address\""
															}
														],
														"id": 1216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3005:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3005:119:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "3005:119:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1227,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "3157:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3177:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3169:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1228,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3169:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3169:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3157:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3194:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2811ffd61d2434357952ed306cb143c7e5605a229b466aa40c1fbaf4674dbe",
																"typeString": "literal_string \"USDm: new owner is the zero address\""
															},
															"value": "USDm: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2811ffd61d2434357952ed306cb143c7e5605a229b466aa40c1fbaf4674dbe",
																"typeString": "literal_string \"USDm: new owner is the zero address\""
															}
														],
														"id": 1226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3135:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "3135:107:9"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "3255:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "3262:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3255:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "3255:16:9"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "3282:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1241,
														"name": "tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3291:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3282:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "3282:20:9"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "currency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3313:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1245,
														"name": "tokenCurrency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3324:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3313:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "3313:24:9"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "3348:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3359:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3348:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "3348:24:9"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "masterMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3383:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "newMasterMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3398:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3383:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "3383:30:9"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3424:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1257,
														"name": "newPauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "3433:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3424:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "3424:18:9"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1260,
														"name": "blacklister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "3453:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1261,
														"name": "newBlacklister",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "3467:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3453:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "3453:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1265,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "3511:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1264,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "3492:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3492:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "3492:28:9"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "3531:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3545:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3531:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "3531:18:9"
											}
										]
									},
									"functionSelector": "3357162b",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "tokenName",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2405:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1172,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2405:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2439:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2439:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "tokenCurrency",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2475:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2475:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenDecimals",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2513:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1178,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2513:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "newMasterMinter",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2543:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "newPauser",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2577:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "newBlacklister",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2605:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2638:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:267:9"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:9"
									},
									"scope": 1866,
									"src": "2375:1182:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "3671:91:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1277,
																"name": "minters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "3690:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1280,
															"indexExpression": {
																"expression": {
																	"id": 1278,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3698:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3698:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3690:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a2063616c6c6572206973206e6f742061206d696e746572",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3711:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_774b6ca13fbb7bf84e09ed35613c13062981b39647173daf54f4f61d7c813ea7",
																"typeString": "literal_string \"USDm: caller is not a minter\""
															},
															"value": "USDm: caller is not a minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_774b6ca13fbb7bf84e09ed35613c13062981b39647173daf54f4f61d7c813ea7",
																"typeString": "literal_string \"USDm: caller is not a minter\""
															}
														],
														"id": 1276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3682:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3682:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "3682:60:9"
											},
											{
												"id": 1284,
												"nodeType": "PlaceholderStatement",
												"src": "3753:1:9"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "3565:77:9",
										"text": " @dev Throws if called by any account other than a minter"
									},
									"id": 1286,
									"name": "onlyMinters",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3668:2:9"
									},
									"src": "3648:114:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "4293:742:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "4312:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4327:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4319:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4319:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4319:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4312:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4331:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f465e639586529250a3ffaba5cbd709914d8e15c7092fee3971768a3ae6075e2",
																"typeString": "literal_string \"USDm: mint to the zero address\""
															},
															"value": "USDm: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f465e639586529250a3ffaba5cbd709914d8e15c7092fee3971768a3ae6075e2",
																"typeString": "literal_string \"USDm: mint to the zero address\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4304:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4304:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "4304:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "4383:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4393:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4383:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206d696e7420616d6f756e74206e6f742067726561746572207468616e2030",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4396:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a567f55e07925e66ec6bb74444425f764ad5c4d0b1a99bc374d9d88654760e6b",
																"typeString": "literal_string \"USDm: mint amount not greater than 0\""
															},
															"value": "USDm: mint amount not greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a567f55e07925e66ec6bb74444425f764ad5c4d0b1a99bc374d9d88654760e6b",
																"typeString": "literal_string \"USDm: mint amount not greater than 0\""
															}
														],
														"id": 1317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4375:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4375:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "4375:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "4454:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1326,
																"name": "masterMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "4461:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4454:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a204d696e746572732063616e206f6e6c79206d696e7420746f6b656e7320746f206d6173746572206d696e7465722061646472657373",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4474:61:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d272d3a1ec4ba03d63250151f371a25c4814ebdfe4b4caaafe1c23f26e3177bc",
																"typeString": "literal_string \"USDm: Minters can only mint tokens to master minter address\""
															},
															"value": "USDm: Minters can only mint tokens to master minter address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d272d3a1ec4ba03d63250151f371a25c4814ebdfe4b4caaafe1c23f26e3177bc",
																"typeString": "literal_string \"USDm: Minters can only mint tokens to master minter address\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4446:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "4446:90:9"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "mintingAllowedAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1389,
														"src": "4549:28:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4549:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"baseExpression": {
														"id": 1333,
														"name": "minterAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "4580:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1336,
													"indexExpression": {
														"expression": {
															"id": 1334,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4594:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4594:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4580:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4549:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "4638:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1340,
																"name": "mintingAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "4649:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4638:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206d696e7420616d6f756e742065786365656473206d696e746572416c6c6f77616e6365",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4684:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4fd17682d223d8da40dbe6a11d3c9c214a27919cce09d778d511198e337d231f",
																"typeString": "literal_string \"USDm: mint amount exceeds minterAllowance\""
															},
															"value": "USDm: mint amount exceeds minterAllowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4fd17682d223d8da40dbe6a11d3c9c214a27919cce09d778d511198e337d231f",
																"typeString": "literal_string \"USDm: mint amount exceeds minterAllowance\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4616:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4616:122:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "4616:122:9"
											},
											{
												"expression": {
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1345,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "4751:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1346,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "4766:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1347,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4766:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4751:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "4751:37:9"
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1351,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "4799:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1353,
														"indexExpression": {
															"id": 1352,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4808:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4799:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1354,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "4815:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1356,
															"indexExpression": {
																"id": 1355,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "4824:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4815:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1357,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4831:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4815:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4799:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "4799:39:9"
											},
											{
												"expression": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1361,
															"name": "minterAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "4849:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1364,
														"indexExpression": {
															"expression": {
																"id": 1362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4863:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4863:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4849:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1365,
															"name": "mintingAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4877:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"id": 1366,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "4901:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4900:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4877:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4849:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "4849:60:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4930:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4930:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1374,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4942:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1375,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4947:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1371,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "4925:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "EmitStatement",
												"src": "4920:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4988:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4980:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4980:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4980:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4992:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "4997:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1378,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "4971:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4971:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "EmitStatement",
												"src": "4966:39:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5023:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1306,
												"id": 1388,
												"nodeType": "Return",
												"src": "5016:11:9"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "3770:317:9",
										"text": " @dev Function to mint tokens\n @param _to The address that will receive the minted tokens.\n @param _amount The amount of tokens to mint. Must be less than or equal\n to the minterAllowance of the caller.\n @return A boolean that indicates if the operation was successful."
									},
									"functionSelector": "40c10f19",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1294,
											"modifierName": {
												"id": 1293,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "4164:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4164:13:9"
										},
										{
											"id": 1296,
											"modifierName": {
												"id": 1295,
												"name": "onlyMinters",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "4187:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4187:11:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4223:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4223:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1300,
											"modifierName": {
												"id": 1297,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "4208:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4208:26:9"
										},
										{
											"arguments": [
												{
													"id": 1302,
													"name": "_to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1289,
													"src": "4259:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1303,
											"modifierName": {
												"id": 1301,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "4244:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4244:19:9"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4107:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4120:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4106:30:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "4282:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4282:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4281:6:9"
									},
									"scope": 1866,
									"src": "4093:942:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "5162:143:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1394,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5195:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5195:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1396,
																"name": "masterMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "5209:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5195:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a2063616c6c6572206973206e6f7420746865206d61737465724d696e746572",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5236:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddc2784748a661cec545aeae43a86030afef96ae12435e8b3b03b55c1bc348a8",
																"typeString": "literal_string \"USDm: caller is not the masterMinter\""
															},
															"value": "USDm: caller is not the masterMinter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddc2784748a661cec545aeae43a86030afef96ae12435e8b3b03b55c1bc348a8",
																"typeString": "literal_string \"USDm: caller is not the masterMinter\""
															}
														],
														"id": 1393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5173:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5173:112:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "5173:112:9"
											},
											{
												"id": 1401,
												"nodeType": "PlaceholderStatement",
												"src": "5296:1:9"
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "5043:85:9",
										"text": " @dev Throws if called by any account other than the masterMinter"
									},
									"id": 1403,
									"name": "onlyMasterMinter",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5159:2:9"
									},
									"src": "5134:171:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5501:47:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1411,
														"name": "minterAllowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "5519:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1413,
													"indexExpression": {
														"id": 1412,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "5533:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5519:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1414,
												"nodeType": "Return",
												"src": "5512:28:9"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5313:109:9",
										"text": " @dev Get minter allowance for an account\n @param minter The address of the minter"
									},
									"functionSelector": "8a6db9c3",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "minterAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5453:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5453:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5452:16:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5492:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5492:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5491:9:9"
									},
									"scope": 1866,
									"src": "5428:120:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "5725:42:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1424,
														"name": "minters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "5743:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1426,
													"indexExpression": {
														"id": 1425,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "5751:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5743:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1427,
												"nodeType": "Return",
												"src": "5736:23:9"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "5556:99:9",
										"text": " @dev Checks if account is a minter\n @param account The address to check"
									},
									"functionSelector": "aa271e1a",
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "5679:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:17:9"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "5719:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5719:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5718:6:9"
									},
									"scope": 1866,
									"src": "5661:106:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										526
									],
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "6160:49:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1440,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "6178:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1442,
														"indexExpression": {
															"id": 1441,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "6186:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6178:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1444,
													"indexExpression": {
														"id": 1443,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "6193:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6178:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1445,
												"nodeType": "Return",
												"src": "6171:30:9"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "5775:246:9",
										"text": " @notice Amount of remaining tokens spender is allowed to transfer on\n behalf of the token owner\n @param owner     Token owner's address\n @param spender   Spender's address\n @return Allowance amount"
									},
									"functionSelector": "dd62ed3e",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6105:8:9"
									},
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6046:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6061:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6045:32:9"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "6146:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6145:9:9"
									},
									"scope": 1866,
									"src": "6027:182:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										498
									],
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "6337:38:9",
										"statements": [
											{
												"expression": {
													"id": 1454,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1127,
													"src": "6355:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1453,
												"id": 1455,
												"nodeType": "Return",
												"src": "6348:19:9"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "6217:50:9",
										"text": " @dev Get totalSupply of token"
									},
									"functionSelector": "18160ddd",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6305:8:9"
									},
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6293:2:9"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "6328:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:9"
									},
									"scope": 1866,
									"src": "6273:102:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										506
									],
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "6607:43:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1466,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "6625:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1468,
													"indexExpression": {
														"id": 1467,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "6634:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6625:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1469,
												"nodeType": "Return",
												"src": "6618:24:9"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "6383:100:9",
										"text": " @dev Get token balance of an account\n @param account address The account"
									},
									"functionSelector": "70a08231",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1462,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6552:8:9"
									},
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "6508:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6508:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6507:17:9"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "6593:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:9:9"
									},
									"scope": 1866,
									"src": "6489:161:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										536
									],
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "7096:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7116:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7116:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1494,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "7128:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1495,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "7137:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1547
														],
														"referencedDeclaration": 1547,
														"src": "7107:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7107:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "7107:36:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7161:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1490,
												"id": 1499,
												"nodeType": "Return",
												"src": "7154:11:9"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "6658:226:9",
										"text": " @notice Set spender's allowance over the caller's tokens to be a given\n value.\n @param spender   Spender's address\n @param value     Allowance amount\n @return True if successful"
									},
									"functionSelector": "095ea7b3",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1480,
											"modifierName": {
												"id": 1479,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "6984:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6984:13:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1482,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7022:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7022:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1484,
											"modifierName": {
												"id": 1481,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "7007:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7007:26:9"
										},
										{
											"arguments": [
												{
													"id": 1486,
													"name": "spender",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1474,
													"src": "7058:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1487,
											"modifierName": {
												"id": 1485,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "7043:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7043:23:9"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6966:8:9"
									},
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "6907:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "6924:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:32:9"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "7085:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7085:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7084:6:9"
									},
									"scope": 1866,
									"src": "6890:283:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "7496:255:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "7515:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7532:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7524:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1514,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7524:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7524:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7515:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7536:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7507:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7507:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "7507:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1523,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "7594:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7613:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7605:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7605:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7605:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7594:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7617:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7586:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7586:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "7586:68:9"
											},
											{
												"expression": {
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1532,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "7665:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1535,
															"indexExpression": {
																"id": 1533,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "7673:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7665:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1536,
														"indexExpression": {
															"id": 1534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "7680:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1537,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "7691:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7665:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "7665:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1541,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "7721:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "7728:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1543,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "7737:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1540,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "7712:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7712:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "EmitStatement",
												"src": "7707:36:9"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "7181:192:9",
										"text": " @dev Internal function to set allowance\n @param owner     Token owner's address\n @param spender   Spender's address\n @param value     Allowance amount"
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1510,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7487:8:9"
									},
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7407:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7407:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7431:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7431:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "7457:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7396:81:9"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7496:0:9"
									},
									"scope": 1866,
									"src": "7379:372:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										548
									],
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "8256:276:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "8289:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1574,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "8298:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1576,
																	"indexExpression": {
																		"id": 1575,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "8306:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8298:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1579,
																"indexExpression": {
																	"expression": {
																		"id": 1577,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8312:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8312:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8298:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8289:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8338:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 1572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8267:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8267:124:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "8267:124:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1585,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "8412:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1586,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "8418:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "8422:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1584,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709
														],
														"referencedDeclaration": 1709,
														"src": "8402:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8402:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "8402:26:9"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1590,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "8439:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1594,
															"indexExpression": {
																"id": 1591,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "8447:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8439:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1595,
														"indexExpression": {
															"expression": {
																"id": 1592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8453:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8453:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8439:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1596,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "8467:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1598,
																"indexExpression": {
																	"id": 1597,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "8475:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8467:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1601,
															"indexExpression": {
																"expression": {
																	"id": 1599,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8481:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8481:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8467:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"id": 1602,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "8496:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1603,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8495:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8467:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8439:63:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "8439:63:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8520:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1571,
												"id": 1608,
												"nodeType": "Return",
												"src": "8513:11:9"
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "7759:212:9",
										"text": " @notice Transfer tokens by spending allowance\n @param from  Payer's address\n @param to    Payee's address\n @param value Transfer amount\n @return True if successful"
									},
									"functionSelector": "23b872dd",
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1558,
											"modifierName": {
												"id": 1557,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "8119:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8119:13:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1560,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8157:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8157:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1562,
											"modifierName": {
												"id": 1559,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "8142:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8142:26:9"
										},
										{
											"arguments": [
												{
													"id": 1564,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1550,
													"src": "8193:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1565,
											"modifierName": {
												"id": 1563,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "8178:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8178:20:9"
										},
										{
											"arguments": [
												{
													"id": 1567,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1552,
													"src": "8223:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1568,
											"modifierName": {
												"id": 1566,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "8208:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8208:18:9"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1556,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8101:8:9"
									},
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "8009:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8009:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "8032:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8032:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "8053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8053:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:75:9"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "8245:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8245:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8244:6:9"
									},
									"scope": 1866,
									"src": "7977:555:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										516
									],
									"body": {
										"id": 1639,
										"nodeType": "Block",
										"src": "8912:73:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1631,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8933:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8933:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "8945:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "8949:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1630,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1709
														],
														"referencedDeclaration": 1709,
														"src": "8923:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8923:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "8923:32:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8973:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1629,
												"id": 1638,
												"nodeType": "Return",
												"src": "8966:11:9"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "8540:169:9",
										"text": " @notice Transfer tokens from the caller\n @param to    Payee's address\n @param value Transfer amount\n @return True if successful"
									},
									"functionSelector": "a9059cbb",
									"id": 1640,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1619,
											"modifierName": {
												"id": 1618,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "8805:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8805:13:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1621,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8843:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8843:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1623,
											"modifierName": {
												"id": 1620,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "8828:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8828:26:9"
										},
										{
											"arguments": [
												{
													"id": 1625,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "8879:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1626,
											"modifierName": {
												"id": 1624,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "8864:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8864:18:9"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1617,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8787:8:9"
									},
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "8733:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8733:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "8745:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8745:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8732:27:9"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "8901:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8901:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8900:6:9"
									},
									"scope": 1866,
									"src": "8715:270:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										22
									],
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "9289:427:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1652,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "9308:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9324:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9316:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1653,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9316:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9316:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9308:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9328:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9300:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9300:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "9300:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1662,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "9387:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9401:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9393:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1663,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9393:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9393:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9387:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9405:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9379:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9379:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "9379:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1672,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "9476:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1673,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1118,
																	"src": "9485:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1675,
																"indexExpression": {
																	"id": 1674,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "9494:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9485:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9476:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9514:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9454:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9454:111:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "9454:111:9"
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1680,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "9578:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1682,
														"indexExpression": {
															"id": 1681,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "9587:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9578:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1683,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "9595:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1685,
															"indexExpression": {
																"id": 1684,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "9604:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9595:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"components": [
																{
																	"id": 1686,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "9613:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9612:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9595:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9578:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "9578:41:9"
											},
											{
												"expression": {
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1691,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "9630:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"id": 1692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "9639:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9630:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1694,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "9645:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1696,
															"indexExpression": {
																"id": 1695,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "9654:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9645:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"id": 1697,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "9661:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1698,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9660:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9645:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9630:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "9630:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1703,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "9692:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "9698:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1705,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "9702:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1702,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "9683:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9683:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "EmitStatement",
												"src": "9678:30:9"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "8993:178:9",
										"text": " @notice Internal function to process transfers\n @param from  Payer's address\n @param to    Payee's address\n @param value Transfer amount"
									},
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1649,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9280:8:9"
									},
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "9206:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9206:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "9229:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9229:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "9250:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9250:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9195:75:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9289:0:9"
									},
									"scope": 1866,
									"src": "9177:539:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "10136:178:9",
										"statements": [
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1723,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "10147:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1725,
														"indexExpression": {
															"id": 1724,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "10155:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10147:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10165:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10147:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "10147:22:9"
											},
											{
												"expression": {
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1729,
															"name": "minterAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "10180:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1731,
														"indexExpression": {
															"id": 1730,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "10194:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10180:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1732,
														"name": "minterAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "10204:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10180:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "10180:43:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1736,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "10256:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1737,
															"name": "minterAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "10264:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"name": "MinterConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "10239:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10239:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "EmitStatement",
												"src": "10234:50:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10302:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1722,
												"id": 1741,
												"nodeType": "Return",
												"src": "10295:11:9"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "9724:240:9",
										"text": " @dev Function to add/update a new minter\n @param minter The address of the minter\n @param minterAllowedAmount The minting amount allowed for the minter\n @return True if the operation was successful."
									},
									"functionSelector": "4e44d956",
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1717,
											"modifierName": {
												"id": 1716,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "10067:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10067:13:9"
										},
										{
											"id": 1719,
											"modifierName": {
												"id": 1718,
												"name": "onlyMasterMinter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "10090:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10090:16:9"
										}
									],
									"name": "configureMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "9995:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "minterAllowedAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "10011:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10011:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9994:45:9"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "10125:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10125:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10124:6:9"
									},
									"scope": 1866,
									"src": "9970:344:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "10604:137:9",
										"statements": [
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1753,
															"name": "minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "10615:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1755,
														"indexExpression": {
															"id": 1754,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "10623:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10615:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10633:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10615:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "10615:23:9"
											},
											{
												"expression": {
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1759,
															"name": "minterAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "10649:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1761,
														"indexExpression": {
															"id": 1760,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "10663:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10649:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10673:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10649:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "10649:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1766,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "10704:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1765,
														"name": "MinterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "10690:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10690:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1768,
												"nodeType": "EmitStatement",
												"src": "10685:26:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10729:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1752,
												"id": 1770,
												"nodeType": "Return",
												"src": "10722:11:9"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "10322:165:9",
										"text": " @dev Function to remove a minter\n @param minter The address of the minter to remove\n @return True if the operation was successful."
									},
									"functionSelector": "3092afd5",
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1749,
											"modifierName": {
												"id": 1748,
												"name": "onlyMasterMinter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "10558:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10558:16:9"
										}
									],
									"name": "removeMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "minter",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "10515:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10515:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10514:16:9"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "10593:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10593:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10592:6:9"
									},
									"scope": 1866,
									"src": "10493:248:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "11172:402:9",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1838,
														"src": "11183:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11183:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"baseExpression": {
														"id": 1788,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "11201:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1791,
													"indexExpression": {
														"expression": {
															"id": 1789,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11210:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11210:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11201:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11183:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "11240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11250:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11240:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206275726e20616d6f756e74206e6f742067726561746572207468616e2030",
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11253:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bee3ce0829532c89253a9842e7ed210c693215ae99eaca599e7260f235976b1f",
																"typeString": "literal_string \"USDm: burn amount not greater than 0\""
															},
															"value": "USDm: burn amount not greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bee3ce0829532c89253a9842e7ed210c693215ae99eaca599e7260f235976b1f",
																"typeString": "literal_string \"USDm: burn amount not greater than 0\""
															}
														],
														"id": 1793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11232:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11232:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "11232:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1787,
																"src": "11311:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1802,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "11322:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11311:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11331:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff06c765b1d552d6320941b06703cf3f70064075d3bd813c36409541c39763a6",
																"typeString": "literal_string \"USDm: burn amount exceeds balance\""
															},
															"value": "USDm: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff06c765b1d552d6320941b06703cf3f70064075d3bd813c36409541c39763a6",
																"typeString": "literal_string \"USDm: burn amount exceeds balance\""
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11303:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11303:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "11303:64:9"
											},
											{
												"expression": {
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1807,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "11380:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1808,
															"name": "totalSupply_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "11395:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1809,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "11410:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11395:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11380:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1812,
												"nodeType": "ExpressionStatement",
												"src": "11380:37:9"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1813,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "11428:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1816,
														"indexExpression": {
															"expression": {
																"id": 1814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11437:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11437:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11428:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1817,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "11451:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1818,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "11461:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11451:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11428:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "11428:40:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1823,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11489:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11489:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "11501:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1822,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "11484:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11484:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "EmitStatement",
												"src": "11479:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11534:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11534:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11554:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11546:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1831,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11546:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11546:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1835,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "11558:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1828,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "11525:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11525:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "EmitStatement",
												"src": "11520:46:9"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "10749:283:9",
										"text": " @dev allows a minter to burn some of its own tokens\n Validates that caller is a minter and that sender is not blacklisted\n amount is less than or equal to the minter's account balance\n @param _amount uint256 the amount of tokens to be burned"
									},
									"functionSelector": "42966c68",
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1778,
											"modifierName": {
												"id": 1777,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 721,
												"src": "11096:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11096:13:9"
										},
										{
											"id": 1780,
											"modifierName": {
												"id": 1779,
												"name": "onlyMinters",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1286,
												"src": "11119:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11119:11:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1782,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "11155:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "11155:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1784,
											"modifierName": {
												"id": 1781,
												"name": "notBlacklisted",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 371,
												"src": "11140:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11140:26:9"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "11052:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11052:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11051:17:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11172:0:9"
									},
									"scope": 1866,
									"src": "11038:536:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "11655:232:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1847,
																"name": "_newMasterMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "11688:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11716:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11708:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1848,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11708:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11708:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11688:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5553446d3a206e6577206d61737465724d696e74657220697320746865207a65726f2061646472657373",
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11733:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12",
																"typeString": "literal_string \"USDm: new masterMinter is the zero address\""
															},
															"value": "USDm: new masterMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfafdf4f817a1692e9dfc81bb98ea6f7a76524fa00b0a320875951c3a205cf12",
																"typeString": "literal_string \"USDm: new masterMinter is the zero address\""
															}
														],
														"id": 1846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11666:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11666:122:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "11666:122:9"
											},
											{
												"expression": {
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1856,
														"name": "masterMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "11799:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1857,
														"name": "_newMasterMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "11814:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11799:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "11799:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1861,
															"name": "masterMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "11866:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1860,
														"name": "MasterMinterChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "11846:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11846:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1863,
												"nodeType": "EmitStatement",
												"src": "11841:38:9"
											}
										]
									},
									"functionSelector": "aa20e1e4",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1844,
											"modifierName": {
												"id": 1843,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 596,
												"src": "11645:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "11645:9:9"
										}
									],
									"name": "updateMasterMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "_newMasterMinter",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "11610:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11610:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11609:26:9"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11655:0:9"
									},
									"scope": 1866,
									"src": "11582:305:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1867,
							"src": "1417:10473:9"
						}
					],
					"src": "1178:10714:9"
				},
				"id": 9
			}
		}
	}
}